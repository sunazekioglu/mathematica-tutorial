(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    346034,       8544]
NotebookOptionsPosition[    293649,       7680]
NotebookOutlinePosition[    294061,       7698]
CellTagsIndexPosition[    294018,       7695]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Suna Zekioglu ", "Text",
 CellChangeTimes->{{3.788005328443693*^9, 3.788005347484333*^9}, {
  3.788005916521474*^9, 3.788005916852957*^9}},
 TextAlignment->Right,ExpressionUUID->"78616fab-db58-43a6-a488-04b893b1a9b5"],

Cell[CellGroupData[{

Cell["Introduction to Calculating in Mathematica", "Chapter",
 CellChangeTimes->{{3.802195709397881*^9, 3.802195733633081*^9}, {
  3.802211703147663*^9, 
  3.802211703933838*^9}},ExpressionUUID->"66b602d9-2f34-4f80-bd60-\
ab3ea8ce9122"],

Cell[CellGroupData[{

Cell["Some fundamentals", "Section",
 CellChangeTimes->{{3.788004537334482*^9, 3.788004543303096*^9}, {
  3.7887830673334017`*^9, 3.7887830697667503`*^9}, {3.8021957408325253`*^9, 
  3.8021957447204*^9}},ExpressionUUID->"e14bdae8-b4ab-49d0-ba0f-665d11ecea0c"],

Cell[CellGroupData[{

Cell["Lists, Vectors, and Matrices", "Subsection",
 CellChangeTimes->{{3.787915740258609*^9, 3.7879157689638233`*^9}, {
  3.787937403938116*^9, 
  3.787937407021084*^9}},ExpressionUUID->"fa86d2d9-4e1b-431f-8d9d-\
1499c2da840b"],

Cell[CellGroupData[{

Cell["Basic Lists", "Subsubsection",
 CellChangeTimes->{{3.787937414765872*^9, 
  3.78793741815178*^9}},ExpressionUUID->"474f2534-a1ab-4dd5-bdc0-\
a646b879e749"],

Cell["\<\
Lists are essentially the arrays of Mathematica, and they\[CloseCurlyQuote]re \
pretty flexible. To evaluate this, press shift+return or shift+enter: \
\>", "Text",
 CellChangeTimes->{{3.7879374195097017`*^9, 3.787937433545446*^9}, {
  3.788005964939212*^9, 3.788005977564344*^9}, {3.788006032749476*^9, 
  3.7880060376698027`*^9}},ExpressionUUID->"1cfc6310-1594-4c1f-a421-\
b8d58c573884"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "is", " ", "a", " ", "comment", " ", "and", " ", "it", " ", 
    RowBox[{"doesn", "'"}], "t", " ", "get", " ", 
    RowBox[{"evaluated", "!"}]}], "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.7879374349566603`*^9, 3.787937439072226*^9}, {
  3.7880029969360733`*^9, 3.788003005774591*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"b3d95bf0-51e4-4206-b3cb-5641725f813b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.787937439553213*^9, 3.788003007578044*^9, 
  3.7880059714883842`*^9, 3.7880061274479647`*^9, 3.788010458966558*^9, 
  3.802195787625519*^9, 3.802467258826055*^9, 3.8025354232264223`*^9, 
  3.802630748588421*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"14e073ff-57b3-43c6-b1e7-ccc3ac623a0c"]
}, Open  ]],

Cell["\<\
They start indexing from 1, not 0, and you can use negative indices to denote \
counting backwards from the end: \
\>", "Text",
 CellChangeTimes->{{3.787937441588337*^9, 3.787937469700432*^9}, {
  3.78800857079086*^9, 
  3.788008608999568*^9}},ExpressionUUID->"a1d9ac3b-1270-4ebc-8714-\
afbbfe25e25a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.787937446883235*^9, 3.787937448734528*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"bfd74302-edc9-4307-9755-5279736cfd1e"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.7879374491739397`*^9, 3.788006133443942*^9, 
  3.788010459026915*^9, 3.802195793979351*^9, 3.802467258985489*^9, 
  3.802535423322*^9, 3.8026307486439867`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"0fbc54b6-b1c7-4131-b8c5-50aecf0e4664"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", "[", 
  RowBox[{"[", 
   RowBox[{"-", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.787937449623992*^9, 3.7879374520906076`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"31985b51-8ae1-4e5b-9777-565a42ed29fd"],

Cell[BoxData["d"], "Output",
 CellChangeTimes->{3.7879374524862328`*^9, 3.788006135620173*^9, 
  3.788010459052083*^9, 3.802195795471075*^9, 3.8024672590437393`*^9, 
  3.8025354233316402`*^9, 3.802630748661612*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"f7917821-dde6-4352-90d7-c2e4109761b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "myList", "]"}]], "Input",
 CellChangeTimes->{{3.7879374716984377`*^9, 3.787937475800212*^9}, {
  3.788002516764181*^9, 3.788002518425909*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"0c7f7102-e973-4856-845e-47dbc6e3184b"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.7879374761024323`*^9, 3.78800251883571*^9, 
  3.7880061407490997`*^9, 3.788010459097805*^9, 3.802195796697497*^9, 
  3.8024672590662613`*^9, 3.802535423364077*^9, 3.802630748693042*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"3af02f22-633a-44ad-8e81-3ceda560500e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "myList", "]"}]], "Input",
 CellChangeTimes->{{3.787937476824238*^9, 3.787937480115127*^9}, {
  3.7880025136929083`*^9, 3.7880025150152187`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"9977bf38-76f2-4faf-86cd-eee50a25f300"],

Cell[BoxData["e"], "Output",
 CellChangeTimes->{3.787937480439698*^9, 3.788002515485367*^9, 
  3.788006142174521*^9, 3.788010459132532*^9, 3.802195798223626*^9, 
  3.802467259121037*^9, 3.802535423378338*^9, 3.802630748708357*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"169de0c6-9b51-4583-8fa7-e04630b00538"]
}, Open  ]],

Cell["\<\
The zeroth entry tells you the head of the expression \[Dash] in this case, \
List (we\[CloseCurlyQuote]ll see how this is useful later): \
\>", "Text",
 CellChangeTimes->{{3.8021958150314407`*^9, 3.802195895336533*^9}, {
  3.802535680643549*^9, 
  3.802535685497925*^9}},ExpressionUUID->"1c6ad197-3b6f-4114-9ecd-\
fd27ece09106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myList", "[", 
  RowBox[{"[", "0", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.802195850277121*^9, 3.8021958522139263`*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"764a3e81-15e4-43de-a17c-54fc98ed337c"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.802195852595922*^9, 3.802467259149497*^9, 
  3.802535423409766*^9, 3.802630748741164*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"60ec0335-bb61-4104-806a-7db65b7ee7ec"]
}, Open  ]],

Cell["You can apply functions to each item in a list using /@", "Text",
 CellChangeTimes->{{3.7879374823699408`*^9, 
  3.7879374963263083`*^9}},ExpressionUUID->"422d9998-244a-416c-b5b0-\
2f1b8c3128df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "/@", "myList"}]], "Input",
 CellChangeTimes->{{3.7879375091109343`*^9, 3.787937511739325*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"396a9201-22a1-4fae-856c-485eff7b5dec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "a"], ",", 
   SuperscriptBox["\[ExponentialE]", "b"], ",", 
   SuperscriptBox["\[ExponentialE]", "c"], ",", 
   SuperscriptBox["\[ExponentialE]", "d"], ",", 
   SuperscriptBox["\[ExponentialE]", "e"]}], "}"}]], "Output",
 CellChangeTimes->{3.787937512165307*^9, 3.788006148393303*^9, 
  3.788010459185719*^9, 3.802195898692342*^9, 3.802467259211437*^9, 
  3.802535423427703*^9, 3.802630748781312*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"7ad807e2-c62e-4c4b-a1ae-8d1d747c33e2"]
}, Open  ]],

Cell["\<\
Nested lists are also useful (note how the semicolon suppresses the output of \
somePoints): \
\>", "Text",
 CellChangeTimes->{{3.787937519007663*^9, 3.7879375247186327`*^9}, {
  3.7880024293504267`*^9, 3.788002429578278*^9}, {3.788006041913571*^9, 
  3.7880060555635443`*^9}},ExpressionUUID->"531b814b-89c9-4722-92f4-\
bc0db2ed05b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"somePoints", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "y1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x2", ",", "y2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x3", ",", "y3"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7879375268918037`*^9, 3.787937544331873*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"23432bc8-30d8-4489-b9fb-6d6e1b51c124"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xPoints", " ", "=", " ", 
  RowBox[{"First", "/@", "somePoints"}]}]], "Input",
 CellChangeTimes->{{3.7879375459565372`*^9, 3.787937549636725*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"df7c21d9-29f4-480e-8424-ac6d24e47d76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}]], "Output",
 CellChangeTimes->{3.787937549901202*^9, 3.7880061540812397`*^9, 
  3.78801045927633*^9, 3.802195909573628*^9, 3.802467259309538*^9, 
  3.8025354234691668`*^9, 3.8026307488259573`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"ec7a6f0b-45fd-481a-9d70-5392a36beb09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yPoints", " ", "=", " ", 
  RowBox[{"Last", "/@", "somePoints"}]}]], "Input",
 CellChangeTimes->{{3.7879375531783447`*^9, 3.787937555750144*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"90482ba9-3bfa-45e3-84e3-b09616d7d399"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y1", ",", "y2", ",", "y3"}], "}"}]], "Output",
 CellChangeTimes->{3.787937556211954*^9, 3.788006155402857*^9, 
  3.78801045972653*^9, 3.8021959111686172`*^9, 3.802467259338043*^9, 
  3.8025354235058126`*^9, 3.802630748862009*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"94967c67-0df6-4d30-bcd1-f9a70128649e"]
}, Open  ]],

Cell["\<\
Other list functions that are useful (but there are plenty plenty more in the \
documentation):  \
\>", "Text",
 CellChangeTimes->{{3.787937565349947*^9, 3.787937569060382*^9}, {
  3.788008422722386*^9, 3.788008477686638*^9}, {3.802535743614496*^9, 
  3.802535754485506*^9}},ExpressionUUID->"454ed622-fb90-4060-8a93-\
09c31f8487eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "myList", "]"}]], "Input",
 CellChangeTimes->{{3.78793757112859*^9, 3.787937576569047*^9}, {
  3.788002507675973*^9, 3.788002509623761*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"4d609cac-1373-4048-8b04-00586a318933"],

Cell[BoxData[
 RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e"}]], "Output",
 CellChangeTimes->{3.7879375769129963`*^9, 3.788002510464045*^9, 
  3.788006157209309*^9, 3.788010459765214*^9, 3.802195918594976*^9, 
  3.80246725940086*^9, 3.802535423516279*^9, 3.802630748877633*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"bc2c959e-f503-46f7-8edf-53f45818eebc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{"myList", ",", "f"}], "]"}]], "Input",
 CellChangeTimes->{{3.787937595242485*^9, 3.787937613200715*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"95324498-73d7-4486-b35a-8cafbf3395f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.787937613627583*^9, 3.7880061587700863`*^9, 
  3.788010459812853*^9, 3.802195920014196*^9, 3.802467259420992*^9, 
  3.802535423549589*^9, 3.802630748910746*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"77dd6cbd-63a7-48a6-87c4-3320ccb1bf8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.787937616824705*^9, 3.7879376243610153`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"7a5cb049-bc43-40f1-b8fa-5762dbddd298"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "x", ",", "y", ",", "z"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7879376248381243`*^9, 3.78800616101508*^9, 
  3.788010459863083*^9, 3.8021959213840218`*^9, 3.802467259503316*^9, 
  3.8025354235621567`*^9, 3.802630748928026*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"4bb8c7cf-f529-49d4-b0ea-de2ed69b435a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", 
    RowBox[{"{", "b", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"c", ",", "d"}], "}"}], "}"}], "}"}], ",", "e"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7879376262249823`*^9, 3.787937645481576*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"fa43e901-ae69-444b-9a96-59eab68ad3c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{{3.787937642345573*^9, 3.787937646257165*^9}, 
   3.788006162535645*^9, 3.788010459912517*^9, 3.802195923310112*^9, 
   3.802467259520026*^9, 3.802535423591803*^9, 3.8026307489670362`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"cc1fb9d1-7f43-4ac2-901c-1adc1aad800d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MemberQ", "[", 
   RowBox[{"myList", ",", "a"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"is", " ", "'"}], 
    RowBox[{"a", "'"}], " ", "in", " ", "the", " ", 
    RowBox[{"list", "?"}]}], "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.7879376590554333`*^9, 3.787937662360363*^9}, {
  3.788002457524209*^9, 3.788002462370914*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"cb6c1332-e720-461e-938b-5907b1960edc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.787937662637267*^9, 3.788006166561613*^9, 
  3.788010459962441*^9, 3.8021959253375387`*^9, 3.8024672602036047`*^9, 
  3.802535423607769*^9, 3.8026307489828053`*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"141a29dc-3b62-4b53-b62d-34117f20ce98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MemberQ", "[", 
   RowBox[{"myList", ",", "q"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"is", " ", "'"}], 
    RowBox[{"q", "'"}], " ", "in", " ", "the", " ", 
    RowBox[{"list", "?"}]}], "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.78793766569762*^9, 3.787937665782982*^9}, {
  3.7880024664342213`*^9, 3.788002467711289*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"706a1a33-f82e-4e85-8cf5-91700d57bf52"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.78793766604354*^9, 3.788006168869125*^9, 
  3.788010460012664*^9, 3.802195926757099*^9, 3.802467260819482*^9, 
  3.8025354236423063`*^9, 3.802630749026752*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"bcbeb672-edd5-4d24-a610-d29cce6550c6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Vectors and Matrices", "Subsubsection",
 CellChangeTimes->{{3.787915779552499*^9, 3.787915780997198*^9}, {
  3.78793740896132*^9, 
  3.78793741381318*^9}},ExpressionUUID->"e5fece4b-0900-4485-9050-\
b679b1ff1be2"],

Cell["To enter a vector, just do a simple list of the components: ", "Text",
 CellChangeTimes->{{3.787915889826202*^9, 
  3.787915911390401*^9}},ExpressionUUID->"715fe3a6-05ac-43e2-8d45-\
02e7cc1a8a88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aVector", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.787915901598811*^9, 3.787915912794794*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"69d3a8b0-d05e-46eb-9ce0-8b787a0bdb49"],

Cell["\<\
To enter a matrix, simply created a nested list of the rows. You can \
visualize what you\[CloseCurlyQuote]ve typed in by applying the function \
MatrixForm (but don\[CloseCurlyQuote]t try to use an expression in MatrixForm \
to do the calculations I\[CloseCurlyQuote]ve sketched out below): \
\>", "Text",
 CellChangeTimes->{{3.787915813574932*^9, 3.787915839359153*^9}, {
  3.802195943734468*^9, 
  3.802195967700987*^9}},ExpressionUUID->"1316618d-06c3-40cd-851b-\
ad89bd297e10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aMatrix", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7879158065466843`*^9, 3.787915810353035*^9}, {
  3.787915845312997*^9, 3.787915853452718*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"32070509-83d7-4227-9481-fd9757155e1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "aMatrix", "]"}]], "Input",
 CellChangeTimes->{{3.787915854125741*^9, 3.787915857521305*^9}, {
  3.787915971161578*^9, 3.7879159747436657`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"dd2b9943-ecd0-43d5-b18b-0bf3fb7baf80"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "b", "c"},
     {"d", "e", "f"},
     {"g", "h", "i"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.78791585779075*^9, 3.787915975111814*^9, 
  3.788006188654071*^9, 3.788010460213562*^9, 3.802195938883972*^9, 
  3.8024672609185333`*^9, 3.802535423729241*^9, 3.802630749097272*^9},
 CellLabel->
  "Out[216]//MatrixForm=",ExpressionUUID->"2f40dab5-0d03-4b03-9edf-\
55e21d92c8a1"]
}, Open  ]],

Cell["Get components as matrix[[row]][[column]]", "Text",
 CellChangeTimes->{{3.788002372615368*^9, 
  3.78800238708363*^9}},ExpressionUUID->"1dba88ca-460e-441a-b7c2-\
1b7745ab2bc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"aMatrix", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.788002388537012*^9, 3.788002391676055*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"6bdfcb88-e9f9-42ee-a340-9db3999cb150"],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{3.788002392043302*^9, 3.788006191498967*^9, 
  3.7880104602631083`*^9, 3.802195973138751*^9, 3.802467260988741*^9, 
  3.8025354237439137`*^9, 3.802630749107068*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"c1200ed6-a3ea-4bcd-8e8b-d2d5157552e7"]
}, Open  ]],

Cell["\<\
There are several ways to apply a function in Mathematica that I\
\[CloseCurlyQuote]ll use fairly interchangeably throughout this notebook: \
\>", "Text",
 CellChangeTimes->{{3.787915860829433*^9, 3.7879158737583723`*^9}, {
  3.787916757779039*^9, 
  3.7879167657462463`*^9}},ExpressionUUID->"2c1bccd8-c984-4fa7-b350-\
602c4d48e46f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\"\<postfix\>\"", " ", "form"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8021987728392057`*^9, 3.8021987934719353`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"b413f426-a989-4be9-b378-469f0a5aa46c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aMatrix", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.787915874765733*^9, 3.787915877959174*^9}, {
  3.78791597667803*^9, 3.787915978770914*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"a9917104-591e-41a7-844e-9f1871568fcf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "b", "c"},
     {"d", "e", "f"},
     {"g", "h", "i"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7879158782743587`*^9, 3.787915979078574*^9, 
  3.788006194401184*^9, 3.788010460313409*^9, 3.802195976815138*^9, 
  3.802467261071521*^9, 3.8025354237971287`*^9, 3.8026307491468573`*^9},
 CellLabel->
  "Out[219]//MatrixForm=",ExpressionUUID->"379bb525-6d6e-4cc8-849e-\
4f9f40ae0033"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\"\<prefix\>\"", " ", "form"}], "*)"}]], "Input",
 CellChangeTimes->{{3.802198797661028*^9, 3.8021987982111588`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"60341f32-4f90-405f-8f03-a4a759370180"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "aMatrix"}]], "Input",
 CellChangeTimes->{{3.787915878843562*^9, 3.787915881795425*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"0c716524-fc4e-405c-8b09-43a08022f7b3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "b", "c"},
     {"d", "e", "f"},
     {"g", "h", "i"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.787915882131317*^9, 3.78800619584659*^9, 
  3.7880104603630247`*^9, 3.802195978456571*^9, 3.802467261149179*^9, 
  3.802535423847948*^9, 3.802630749191392*^9},
 CellLabel->
  "Out[221]//MatrixForm=",ExpressionUUID->"1ec2f0e5-20c6-4e21-b6df-\
0ee70b050cb3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Matrix Multiplication", "Subsubsection",
 CellChangeTimes->{{3.787915916858493*^9, 
  3.7879159209891376`*^9}},ExpressionUUID->"aa1157f1-3d09-42ab-85f3-\
768428e7fb2b"],

Cell["To do a dot product, use the . operator: ", "Text",
 CellChangeTimes->{{3.787915922683339*^9, 
  3.787915932653655*^9}},ExpressionUUID->"b4248c94-88eb-4ab5-bc83-\
6591cb2c69c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleDot", " ", "=", " ", 
  RowBox[{"aVector", ".", "aVector"}]}]], "Input",
 CellChangeTimes->{{3.78791593499721*^9, 3.787915941908721*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"4f65b605-2503-46ab-839c-0246099d2502"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], "+", 
  SuperscriptBox["y", "2"], "+", 
  SuperscriptBox["z", "2"]}]], "Output",
 CellChangeTimes->{3.787915942218943*^9, 3.788006201525751*^9, 
  3.788010460413269*^9, 3.802195985499557*^9, 3.802467261166786*^9, 
  3.8025354238831377`*^9, 3.802630749226882*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"876c1178-2ed3-4008-bb60-426fae0dcc46"]
}, Open  ]],

Cell["Similarly this works for matrix multiplication: ", "Text",
 CellChangeTimes->{{3.7879159452014637`*^9, 
  3.787915950848236*^9}},ExpressionUUID->"aaaba8ae-a5d3-48d8-8b3d-\
3f444055eaf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aMatrix", ".", "aVector"}]], "Input",
 CellChangeTimes->{{3.787915953078348*^9, 3.7879159572168217`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"4c602a6c-2db5-4c32-aaf5-ad8d225f04a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "x"}], "+", 
    RowBox[{"b", " ", "y"}], "+", 
    RowBox[{"c", " ", "z"}]}], ",", 
   RowBox[{
    RowBox[{"d", " ", "x"}], "+", 
    RowBox[{"e", " ", "y"}], "+", 
    RowBox[{"f", " ", "z"}]}], ",", 
   RowBox[{
    RowBox[{"g", " ", "x"}], "+", 
    RowBox[{"h", " ", "y"}], "+", 
    RowBox[{"i", " ", "z"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.787915957542292*^9, 3.788006203306407*^9, 
  3.788010460462633*^9, 3.802195987325086*^9, 3.802467261236062*^9, 
  3.802535423902347*^9, 3.802630749242063*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"00bb77bc-77b6-4e4a-b218-7ce2be221a83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"aMatrix", ".", "aVector"}], " ", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.787915965378389*^9, 3.787915967414721*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"4f8206cb-aa5a-4db5-9a98-a9edbfed26bc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"a", " ", "x"}], "+", 
        RowBox[{"b", " ", "y"}], "+", 
        RowBox[{"c", " ", "z"}]}]},
      {
       RowBox[{
        RowBox[{"d", " ", "x"}], "+", 
        RowBox[{"e", " ", "y"}], "+", 
        RowBox[{"f", " ", "z"}]}]},
      {
       RowBox[{
        RowBox[{"g", " ", "x"}], "+", 
        RowBox[{"h", " ", "y"}], "+", 
        RowBox[{"i", " ", "z"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.787915967704873*^9, 3.788006204609227*^9, 
  3.788010460513546*^9, 3.802195989305647*^9, 3.802467261342901*^9, 
  3.802535423943318*^9, 3.802630749283051*^9},
 CellLabel->
  "Out[224]//MatrixForm=",ExpressionUUID->"ebc7e529-b689-4fa7-aeef-\
86fb68a4ae86"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvectors and Eigenvalues", "Subsubsection",
 CellChangeTimes->{{3.787915989729218*^9, 
  3.787915994768977*^9}},ExpressionUUID->"8f1218f8-52a1-4b77-af44-\
b2b9c4aff413"],

Cell["\<\
Mathematica is pretty good at doing this for you. For some given matrix:  \
\>", "Text",
 CellChangeTimes->{{3.7879159962655087`*^9, 3.787916002856187*^9}, {
  3.787916775775578*^9, 3.787916779021861*^9}, {3.788008759222067*^9, 
  3.788008763592023*^9}, {3.802196001289936*^9, 
  3.8021960055501127`*^9}},ExpressionUUID->"a40d03d3-5fe4-4b2c-91d5-\
975e77555a9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"E0", ",", "\[CapitalDelta]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]", ",", "E0"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.787916016291235*^9, 3.787916037014838*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"08dc0e19-e382-4cb7-9020-71ec9df6010d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hamiltonian", "//", "Eigenvalues"}]], "Input",
 CellChangeTimes->{{3.787916007588763*^9, 3.787916042068997*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"c939e72e-4402-44b9-8d0f-6b7b71d1d970"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"E0", "-", "\[CapitalDelta]"}], ",", 
   RowBox[{"E0", "+", "\[CapitalDelta]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.787916011288144*^9, 3.78791604241763*^9, 
  3.788006224584179*^9, 3.788010460564383*^9, 3.8021960088977623`*^9, 
  3.802467261414301*^9, 3.8025354239981956`*^9, 3.802630749333346*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"eb58c08b-97fc-4335-aef8-468ed6fbec76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hamiltonian", "//", "Eigenvectors"}]], "Input",
 CellChangeTimes->{{3.787916045628982*^9, 3.78791604800702*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"47e0506f-ac55-4ad0-b527-9a39ad5559f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.787916048280121*^9, 3.7880062261503897`*^9, 
  3.788010460612577*^9, 3.802196010952693*^9, 3.802467261433695*^9, 
  3.80253542403827*^9, 3.8026307493727083`*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"4a5166c3-7b6f-4657-8395-870a5ea19295"]
}, Open  ]],

Cell["\<\
Note you'd need to normalize these yourself; we'll write a function to do \
this automatically later.\
\>", "Text",
 CellChangeTimes->{{3.7879161544406223`*^9, 3.787916184273687*^9}, {
  3.788002562701437*^9, 3.788002568653344*^9}, {3.78800621796693*^9, 
  3.7880062217962427`*^9}},ExpressionUUID->"d8296576-aca8-4a79-ad4d-\
21a28b508cda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hamiltonian", "//", "Eigensystem"}]], "Input",
 CellChangeTimes->{{3.787916052425446*^9, 3.7879160529327908`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"3cfb1baf-520a-482c-986e-ceb3369aef9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"E0", "-", "\[CapitalDelta]"}], ",", 
     RowBox[{"E0", "+", "\[CapitalDelta]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7879160532763357`*^9, 3.788006227612821*^9, 
  3.78801046066284*^9, 3.8021960141726513`*^9, 3.802467261500043*^9, 
  3.80253542405534*^9, 3.802630749388382*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"b4f0947d-f636-4237-9097-d71d024ea8cc"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s check these results by testing that the matrix acting \
on its eigenvectors yields the eigenvalues provided: \
\>", "Text",
 CellChangeTimes->{{3.787916060977837*^9, 3.787916064737705*^9}, {
  3.802196039726481*^9, 
  3.802196052450234*^9}},ExpressionUUID->"4ace70fd-a34c-4b00-9f5c-\
c9857c09b852"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"eigenvector1", ",", "eigenvector2"}], "}"}], " ", "=", " ", 
   RowBox[{"hamiltonian", "//", "Eigenvectors"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.787916066458716*^9, 3.7879160761683693`*^9}, {
  3.788008802760179*^9, 3.788008804850494*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"8fdafaca-1f28-4ccd-926c-0933f61e236f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"eigenvalue1", ",", "eigenvalue2"}], "}"}], " ", "=", " ", 
   RowBox[{"hamiltonian", "//", "Eigenvalues"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7879160942675123`*^9, 3.7879161021485157`*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"48b4aa9c-c20b-4e43-aa7f-f4f3f77751ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", ".", "eigenvector1"}], " ", "==", " ", 
  RowBox[{"eigenvalue1", "*", "eigenvector1"}]}]], "Input",
 CellChangeTimes->{{3.787916082264835*^9, 3.787916118157548*^9}, 
   3.788008826625039*^9, {3.802196025218092*^9, 3.8021960316546164`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"7c381552-5f8b-42ae-972f-cfe1801c6f9c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7879160847105637`*^9, 3.787916118431806*^9, 
  3.788006232800262*^9, 3.7880088278770027`*^9, 3.7880104607458677`*^9, 
  3.802196032303256*^9, 3.802467261580947*^9, 3.8025354241165943`*^9, 
  3.802630749439878*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"55b6562f-7b3f-4921-b559-03e2028aed0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonian", ".", "eigenvector2"}], " ", "==", " ", 
  RowBox[{"eigenvalue2", "*", "eigenvector2"}]}]], "Input",
 CellChangeTimes->{{3.787916122496643*^9, 3.787916125204905*^9}, 
   3.788008830469283*^9, {3.802196033962285*^9, 3.8021960349334993`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"f1a7cfcc-2554-4866-bfb7-e07fd68df5b9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.787916125496203*^9, 3.7880062345107813`*^9, 
  3.788008830935754*^9, 3.7880104607963057`*^9, 3.802196035468823*^9, 
  3.80246726164664*^9, 3.802535424128443*^9, 3.802630749449942*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"6fe40ee1-930f-4e6b-9f59-63dc5d747949"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions of Matrices ", "Subsubsection",
 CellChangeTimes->{{3.787917778685163*^9, 
  3.787917785044168*^9}},ExpressionUUID->"e48640e7-5c2e-4f5d-841d-\
eb8019544637"],

Cell["\<\
Easy to exponentiate a matrix; let\[CloseCurlyQuote]s try with one of the \
Pauli matrices. Capital I is the imaginary unit in Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.787917854897457*^9, 3.7879178986231737`*^9}, {
  3.802535849251601*^9, 
  3.802535885751431*^9}},ExpressionUUID->"ca8c4ffe-e5b7-4c7b-8d7b-\
5cf5296bf68e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pauliX", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.787917869407505*^9, 3.787917879451736*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"4d9ed309-7650-4255-afcf-48a5db2a6810"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixExp", "[", 
   RowBox[{"I", "*", "\[Theta]", "*", "pauliX"}], "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.787917881716954*^9, 3.787917907440681*^9}, {
  3.787917987427538*^9, 3.7879179890219107`*^9}, {3.787918143177597*^9, 
  3.787918145351597*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"1ecffa2b-1316-4897-9c73-5898c8e3069b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.787917907826874*^9, 3.787917990878592*^9, 
  3.787918145654387*^9, 3.788006246623406*^9, 3.788010460849052*^9, 
  3.8021960764335823`*^9, 3.802467261726369*^9, 3.802535424298785*^9, 
  3.802630749585738*^9},
 CellLabel->
  "Out[234]//MatrixForm=",ExpressionUUID->"6a291d94-3df1-4a3d-895b-\
94a847d27313"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Writing Functions", "Subsection",
 CellChangeTimes->{{3.787916189455677*^9, 
  3.787916193731969*^9}},ExpressionUUID->"e3a0d0f8-514a-4f2a-84e6-\
af2531682d94"],

Cell[CellGroupData[{

Cell["Basics", "Subsubsection",
 CellChangeTimes->{{3.7879162536642723`*^9, 
  3.7879162548644533`*^9}},ExpressionUUID->"21beac30-411c-4f20-bf59-\
977500389522"],

Cell["\<\
Mathematica isn\[CloseCurlyQuote]t fussy about declaring the types of objects \
a function can take/return. The basic syntax is: \
\>", "Text",
 CellChangeTimes->{{3.787916290237967*^9, 
  3.787916315329422*^9}},ExpressionUUID->"fca75dd3-6276-44d0-b2d7-\
fe15b232f9a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"functionName", "[", 
   RowBox[{"argument1_", ",", "argument2_"}], "]"}], ":=", " ", 
  RowBox[{"argument1", " ", "+", " ", "argument2", " "}]}]], "Input",
 CellChangeTimes->{{3.7879162617380457`*^9, 3.787916275757432*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"560a48ff-14cd-4a67-b152-3cdf0f7e6a48"],

Cell["\<\
Can use this function on numerical values, symbolic arguments, or both! \
\>", "Text",
 CellChangeTimes->{{3.7879163186172113`*^9, 
  3.787916328901466*^9}},ExpressionUUID->"0912d913-ada2-4dc8-8b61-\
d6dd63ecda36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"functionName", "[", 
  RowBox[{"1", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.787916284537171*^9, 3.787916286482091*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"aa90d926-45fe-4327-b91d-91c1fca73d85"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.787916286831396*^9, 3.788006258549059*^9, 
  3.78801046089754*^9, 3.802196091169853*^9, 3.802467261801444*^9, 
  3.80253542437294*^9, 3.802630749622912*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"ba96d3df-269d-49d9-b8ee-dd57ee6594c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"functionName", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.787916277255602*^9, 3.787916281014988*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"f85a42ae-9c16-4e2f-8e26-4e8737a626e4"],

Cell[BoxData[
 RowBox[{"x", "+", "y"}]], "Output",
 CellChangeTimes->{3.787916281482177*^9, 3.788006260315854*^9, 
  3.7880104609462967`*^9, 3.802196093064164*^9, 3.802467261816457*^9, 
  3.802535424405368*^9, 3.802630749687359*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"c5beb342-8671-4ffe-9dd9-e2b45c19cfd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"functionName", "[", 
  RowBox[{"z", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.787916332746077*^9, 3.7879163345713243`*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"aa612aeb-b836-4cdb-bf8e-29bad1834ffb"],

Cell[BoxData[
 RowBox[{"2", "+", "z"}]], "Output",
 CellChangeTimes->{{3.787916333068345*^9, 3.787916334902788*^9}, 
   3.788006261914476*^9, 3.7880104609966583`*^9, 3.802196094407957*^9, 
   3.80246726188059*^9, 3.8025354244268103`*^9, 3.802630749700336*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"e265a312-6da4-497d-92bc-3da5f30fce85"]
}, Open  ]],

Cell["\<\
Functions can return multiple values in the form of a list {returnValue1, \
returnValue2, ...}: \
\>", "Text",
 CellChangeTimes->{{3.787916373980435*^9, 
  3.787916396738179*^9}},ExpressionUUID->"62681c3b-c2e9-410f-90aa-\
dc2912da7817"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polarsToCartesians", "[", 
   RowBox[{"r_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{"r", "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.787916383699918*^9, 3.7879164217658978`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"81fb5bbc-0dc7-4bc0-9c9f-3432b63e34c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polarsToCartesians", "[", 
  RowBox[{"1", ",", 
   RowBox[{"\[Pi]", "/", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.787916423736238*^9, 3.787916427897874*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"18b700d8-d37a-48c9-b8f0-83e90a60cb29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.787916428245487*^9, 3.788006265082177*^9, 
  3.788010461098126*^9, 3.8021961020530252`*^9, 3.8024672619551687`*^9, 
  3.802535424482931*^9, 3.802630749745428*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"423da94f-f865-447d-a184-912c82de3cd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polarsToCartesians", "[", 
  RowBox[{"r", ",", 
   RowBox[{"-", "\[Theta]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7879164407223797`*^9, 3.7879164435553913`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"cbdd2751-e2ee-4dcc-9a0c-ddc5ad7b1c3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.787916444501588*^9, 3.78800626636592*^9, 
  3.7880104611486883`*^9, 3.8021961035949783`*^9, 3.802467261973378*^9, 
  3.802535424517455*^9, 3.8026307497826633`*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"f5e2a2f3-9cdb-48e0-9606-e13c4f3c3302"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Local Variables (Module)", "Subsubsection",
 CellChangeTimes->{{3.7879163488675003`*^9, 3.7879163521299887`*^9}, {
   3.787937723490714*^9, 3.787937725664649*^9}, 3.788005400688587*^9, {
   3.802196110484077*^9, 3.8021961117539883`*^9}, 
   3.802196381823552*^9},ExpressionUUID->"49986978-7a58-4059-847a-\
175080633d2e"],

Cell["\<\
Let\[CloseCurlyQuote]s say we wanted to write a more complicated function, \
where we have an intermediate value that will help in the calculation of the \
final answer. This value should be stored as a local variable using Module. \
The last quantity inside Module will automatically be returned by the \
function. Here\[CloseCurlyQuote]s an example that I\[CloseCurlyQuote]ll \
explain below: \
\>", "Text",
 CellChangeTimes->{{3.787916355852459*^9, 3.7879163637544937`*^9}, {
  3.7879164673780746`*^9, 3.787916533294004*^9}, {3.802196125565254*^9, 
  3.802196128076446*^9}, {3.802196228775531*^9, 
  3.802196236675548*^9}},ExpressionUUID->"74103514-e9f8-4f2f-b668-\
50c50e48a53a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"perfectSquareQ", "[", "argument1_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "localVariable1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"localVariable1", " ", "=", " ", 
      RowBox[{"Sqrt", "@", "argument1"}]}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"IntegerQ", "@", "localVariable1"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7879164857836027`*^9, 3.7879165208980083`*^9}, {
  3.7879167966485033`*^9, 3.7879168758750477`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"4b3cf4d5-0830-4838-9565-63d77124fd35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"perfectSquareQ", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.787916877556986*^9, 3.787916880975191*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"99471617-c01b-40be-a030-2ee518dcd50a"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.787916881384737*^9, 3.7879170055776157`*^9, 
  3.788006288682033*^9, 3.7880104612005796`*^9, 3.8021961951175632`*^9, 
  3.802467262052682*^9, 3.802535424570685*^9, 3.8026307498236113`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"f65685d3-6d46-45df-954e-51b6ec916185"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"perfectSquareQ", "[", "25", "]"}]], "Input",
 CellChangeTimes->{{3.787916884126245*^9, 3.787916887412866*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"41ff625e-e2ee-49a6-a5e1-304854780edb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.787916887720396*^9, 3.7879170066459923`*^9, 
  3.7880062899152527`*^9, 3.788010461248673*^9, 3.802196196414035*^9, 
  3.8024672621143303`*^9, 3.802535424586863*^9, 3.802630749836821*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"632fd598-b862-4f11-b914-fef910e22d32"]
}, Open  ]],

Cell["\<\
This function wants to check if the argument is a perfect square (we could \
have written a much slicker version of this function without needing to use \
Module of course, but it can\[CloseCurlyQuote]t hurt to start with a simple \
example). First localVariable1 is declared to be a local variable within the \
scope of Module. It calculates the square root of the argument and stores \
this value in localVariable1. Then it checks if localVariable1 is an integer \
using a built-in Mathematica function IntegerQ, and returns this result. Once \
the function evaluation is complete, the value stored in localVariable1 is \
wiped. We can see this even more clearly by writing the modified function: \
\>", "Text",
 CellChangeTimes->{{3.787916892205595*^9, 3.787917021051159*^9}, {
  3.802196148083323*^9, 3.8021961824688377`*^9}, {3.8025360405737877`*^9, 
  3.8025361018315487`*^9}},ExpressionUUID->"7155816f-6b32-46f0-87bc-\
fc35b0370445"],

Cell[BoxData[
 RowBox[{
  RowBox[{"perfectSquareQmod", "[", "argument1_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "localVariable1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"localVariable1", " ", "=", " ", 
      RowBox[{"Sqrt", "@", "argument1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "localVariable1", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"IntegerQ", "@", "localVariable1"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7879164857836027`*^9, 3.7879165208980083`*^9}, {
  3.7879167966485033`*^9, 3.7879168758750477`*^9}, {3.787917024861127*^9, 
  3.787917034662423*^9}, {3.788006313083762*^9, 3.7880063132852163`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"eea6db7c-4d32-4db8-a277-3140a6469b04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"perfectSquareQmod", "[", "47", "]"}]], "Input",
 CellChangeTimes->{{3.787917035438197*^9, 3.787917037536126*^9}, {
  3.787918946921338*^9, 3.787918947945784*^9}, {3.788006316882327*^9, 
  3.7880063171088047`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"a8b6d25c-855b-43ea-bc57-e200bb3a3349"],

Cell[BoxData[
 SqrtBox["47"]], "Print",
 CellChangeTimes->{3.787917037764124*^9, 3.787918948528707*^9, 
  3.788006317592264*^9, 3.788010461301237*^9, 3.802196254242071*^9, 
  3.802467262200568*^9, 3.802535424637998*^9, 3.802630749890573*^9},
 CellLabel->
  "During evaluation of \
In[246]:=",ExpressionUUID->"8244585f-03da-4168-a4b2-9c8f00e30607"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.787917037767396*^9, 3.787918948542159*^9, 
  3.78800631760321*^9, 3.788010461309067*^9, 3.8021962542449217`*^9, 
  3.802467262202317*^9, 3.802535424642243*^9, 3.802630749894897*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"9cc5a69f-9ba9-46ba-8933-fdbce3b6e977"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["localVariable1"], "Input",
 CellChangeTimes->{{3.787917044229241*^9, 3.787917044947927*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"7b962ad9-cf9f-4d00-a4bd-346f270c9828"],

Cell[BoxData["localVariable1"], "Output",
 CellChangeTimes->{3.787917045248745*^9, 3.788006318960374*^9, 
  3.788010461351041*^9, 3.8021962559322653`*^9, 3.802467262222377*^9, 
  3.802535424680765*^9, 3.802630749935835*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"c17ab184-7006-4599-8edc-34a5e9192755"]
}, Open  ]],

Cell[TextData[{
 "During evaluation of the function, printing localVariable1 returns a value, \
",
 Cell[BoxData[
  FormBox[
   SqrtBox["47"], TraditionalForm]],ExpressionUUID->
  "9e596a0e-906d-4903-a6b6-b2d6e9bc0f41"],
 ".  After evaluation, localVariable1 has no value assigned to it \[Dash] \
hence why it shows up in blue, and not in black, like global variables that \
have been assigned a value: "
}], "Text",
 CellChangeTimes->{{3.787917049051345*^9, 3.787917080165629*^9}, {
   3.787918951152793*^9, 3.7879189516854773`*^9}, {3.7880054398286448`*^9, 
   3.78800546371616*^9}, 
   3.788006323212379*^9},ExpressionUUID->"6a4dbd68-cddb-41a8-8777-\
ace9bf2ddd21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"globalVariable", " ", "=", 
   RowBox[{"Sqrt", "@", "47"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788005464909087*^9, 3.788005486029249*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"b2b62dea-3d22-4c6e-9230-aead123f96b0"],

Cell[CellGroupData[{

Cell[BoxData["globalVariable"], "Input",
 CellChangeTimes->{{3.7880054725379057`*^9, 3.788005473260221*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"6a8b91b7-eaa5-4975-885c-0d71ac99a7b6"],

Cell[BoxData[
 SqrtBox["47"]], "Output",
 CellChangeTimes->{{3.788005473968368*^9, 3.788005488307251*^9}, 
   3.788006327959877*^9, 3.78801046140108*^9, 3.8021962639507227`*^9, 
   3.80246726240541*^9, 3.802535424739834*^9, 3.80263074998356*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"0ef4a37c-125e-43b2-b21a-246e483e51b0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Some slightly more interesting examples", "Subsubsection",
 CellChangeTimes->{{3.7879170897460527`*^9, 3.787917103450227*^9}, {
  3.7879187938374243`*^9, 
  3.787918798546069*^9}},ExpressionUUID->"46846279-58bc-4c8e-8239-\
449394f83fcc"],

Cell["\<\
Let\[CloseCurlyQuote]s write a function to normalize a vector. The syntax for \
the arguments given to the function below means that Mathematica will look \
inside the list passed to the function and use its first term as xComponent \
and its second term as yComponent. \
\>", "Text",
 CellChangeTimes->{{3.78791709702133*^9, 3.787917172188092*^9}, {
  3.802196279498801*^9, 
  3.802196281364573*^9}},ExpressionUUID->"fff40ff9-7622-4514-ac9c-\
d76ffd93bbf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizeIt", "[", 
   RowBox[{"{", 
    RowBox[{"xComponent_", ",", "yComponent_"}], "}"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "norm", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"norm", " ", "=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"xComponent", "*", "xComponent"}], " ", "+", " ", 
        RowBox[{"yComponent", "*", "yComponent"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xComponent", ",", "yComponent"}], "}"}], "/", "norm"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.787917125036672*^9, 3.787917142978738*^9}, {
  3.787917174143807*^9, 3.787917266399321*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"1bae2dde-e6fc-4842-af90-694a9e19a2f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normalizeIt", "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.787917233107478*^9, 3.787917237122859*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"5105d3eb-ce8d-4359-8a81-673443026b2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["x", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]]], ",", 
   FractionBox["y", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.787917237418599*^9, 3.787917268040609*^9}, 
   3.7880065240676394`*^9, 3.788010461450906*^9, 3.802196302290572*^9, 
   3.8024672624876757`*^9, 3.802535424792845*^9, 3.802630750035825*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"4a25d184-e3f9-4aae-b85e-99b7e5bb0af6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normalizeIt", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.787917271494657*^9, 3.7879172722330093`*^9}, {
  3.7880055131541233`*^9, 3.7880055147978687`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"194d68fc-061b-4e7f-b47d-d4a954a74be9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "5"], ",", 
   FractionBox["4", "5"]}], "}"}]], "Output",
 CellChangeTimes->{3.787917272478633*^9, 3.788005515068535*^9, 
  3.788006526400742*^9, 3.788010461502743*^9, 3.802196303751607*^9, 
  3.802467262506196*^9, 3.802535424812476*^9, 3.8026307500521917`*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"6f3c0d8c-9119-44b6-836e-03c0ca8e7c5f"]
}, Open  ]],

Cell["\<\
Can write an even neater (and more general to n-dimensions!) version of this \
function, of course, using the dot product we learned earlier: \
\>", "Text",
 CellChangeTimes->{{3.787917276859688*^9, 3.787917296695084*^9}, {
  3.788009078050823*^9, 
  3.788009085517853*^9}},ExpressionUUID->"007bdc95-c61e-4e56-a74c-\
c1835b6d7fa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizeItNew", "[", "vector_", "]"}], ":=", " ", 
  RowBox[{"vector", "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"vector", ".", "vector"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.787917125036672*^9, 3.787917142978738*^9}, {
  3.787917174143807*^9, 3.787917266399321*^9}, {3.787917302251116*^9, 
  3.787917411573388*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"604ac1ea-5401-4ae8-89f1-72809474bf59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normalizeItNew", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.787917322416152*^9, 3.787917324636436*^9}, {
  3.787917382612836*^9, 3.787917383362052*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"920e343a-c7fa-4db4-8cfc-e56b9c07cc04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["1", 
    SqrtBox["3"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.787917324969596*^9, {3.787917380007444*^9, 3.787917413051125*^9}, 
   3.788006530035543*^9, 3.788010461570912*^9, 3.80219631313207*^9, 
   3.802467262587577*^9, 3.8025354248672113`*^9, 3.802630750101055*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"74e301b5-2dfb-46fe-9e89-95fbeacef290"]
}, Open  ]],

Cell["\<\
Now let\[CloseCurlyQuote]s use this to create a function that finds the \
normalized eigenvectors of a matrix (note that in this example, I\
\[CloseCurlyQuote]ve gone ahead and initialized the local variable \
eigenvectors at the same time as declaring it): \
\>", "Text",
 CellChangeTimes->{{3.7879174399019823`*^9, 3.787917449845302*^9}, {
  3.802536136292162*^9, 
  3.802536161747628*^9}},ExpressionUUID->"38b1d6ee-afe0-4e1c-b9aa-\
2ad28d1d2a6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getNormalizedEigenvectors", "[", "matrix_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eigenvectors", " ", "=", " ", 
      RowBox[{"Eigenvectors", "@", "matrix"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"normalizeItNew", "/@", "eigenvectors"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7879174511948643`*^9, 3.787917481821432*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"1d34970f-9cb5-4c49-a895-35a1f240a659"],

Cell[TextData[{
 "The syntax",
 StyleBox[" functionName /@ list", "Input"],
 " applies the function to every element of the list individually (so to each \
eigenvector individually), and returns a list of those results. "
}], "Text",
 CellChangeTimes->{{3.787918166555027*^9, 3.787918232530705*^9}, {
  3.7880055331859627`*^9, 3.788005535282611*^9}, {3.8021963234014874`*^9, 
  3.8021963303028727`*^9}},ExpressionUUID->"203aa362-1bd2-435c-9547-\
8aae1ea2a7f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getNormalizedEigenvectors", "@", "hamiltonian"}]], "Input",
 CellChangeTimes->{{3.78791748330103*^9, 3.7879174881672688`*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"aa0758d3-3422-41b1-af7c-4d99acba9b67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.787917488442576*^9, 3.788006541909178*^9, 
  3.788010461635496*^9, 3.8021963332922983`*^9, 3.802467262657146*^9, 
  3.802535424913807*^9, 3.8026307501465683`*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"019b4ee7-fa9f-4603-a66a-7ee0c2067e0b"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loops and Other Structures ", "Subsection",
 CellChangeTimes->{{3.787936518042856*^9, 3.787936524494878*^9}, {
  3.787936664359149*^9, 
  3.787936668027576*^9}},ExpressionUUID->"643ac0f4-0163-4a14-9623-\
9577958eb167"],

Cell[CellGroupData[{

Cell["Conditionals", "Subsubsection",
 CellChangeTimes->{{3.787936670737029*^9, 
  3.7879366729214582`*^9}},ExpressionUUID->"feb557d1-240b-4703-87a5-\
57f7453544ba"],

Cell["\<\
If statements are pretty standard. Let\[CloseCurlyQuote]s use an If statement \
to write a function that gets mad about the idea of complex numbers: \
\>", "Text",
 CellChangeTimes->{{3.787936675270924*^9, 3.7879366804019957`*^9}, {
  3.788002836937544*^9, 3.788002932745338*^9}, {3.802196360015663*^9, 
  3.802196360504583*^9}, {3.8025361908308687`*^9, 
  3.802536191471156*^9}},ExpressionUUID->"d71d6ea9-3ba3-47c0-a94c-\
2403b488fe91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mySqrt", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
    RowBox[{
     SqrtBox["x"], "//", "N"}], ",", " ", 
    "\"\<Error: enter a non-negative number\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.78793668149271*^9, 3.7879367523173723`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"288cad93-ad50-4989-88b0-c72a731b6cdb"],

Cell[TextData[{
 "The function N is useful for when you just want a decimal and Mathematica \
spits out 328/45 or ",
 Cell[BoxData[
  FormBox[
   SqrtBox["70"], TraditionalForm]],ExpressionUUID->
  "5cfeb77e-efc1-4796-80f5-3ab3df91e097"],
 " instead."
}], "Text",
 CellChangeTimes->{{3.802536198086359*^9, 
  3.802536203166679*^9}},ExpressionUUID->"1965ac38-6123-4e81-b04d-\
6d45f1df748a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mySqrt", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7879367255439796`*^9, 3.787936727689971*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"78649250-5265-49e4-84a0-09e20bc49737"],

Cell[BoxData["3.1622776601683795`"], "Output",
 CellChangeTimes->{{3.787936728066333*^9, 3.78793673405934*^9}, 
   3.7880065673447647`*^9, 3.7880104617026587`*^9, 3.8021963730143843`*^9, 
   3.802467262736381*^9, 3.802535424980083*^9, 3.80263075019128*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"5b6e10ff-a4b2-4cb6-bc0f-b4e5bdcd10ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mySqrt", "[", 
  RowBox[{"-", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.787936737237907*^9, 3.787936738223748*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"6068c7a7-5c34-4751-b6fd-538c21f6bd52"],

Cell[BoxData["\<\"Error: enter a non-negative number\"\>"], "Output",
 CellChangeTimes->{{3.787936738621482*^9, 3.787936754297987*^9}, 
   3.788006568596984*^9, 3.7880104617486353`*^9, 3.802196374155592*^9, 
   3.802467262807029*^9, 3.80253542501269*^9, 3.802630750228189*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"60c56c73-30e1-4474-981f-50d6aa67e77f"]
}, Open  ]],

Cell["\<\
Which is useful when you might be tempted to use nested If statements. The \
syntax is basically Which[condition, execute, condition, execute, ...] and it\
\[CloseCurlyQuote]ll keep looking down the list of conditions until it finds \
one that\[CloseCurlyQuote]s satisfied \[Dash] so if you want the equivalent \
of \[OpenCurlyQuote]Else\[CloseCurlyQuote] after you\[CloseCurlyQuote]ve \
exhausted everything you\[CloseCurlyQuote]d like to test for, write the last \
condition to simply be \[OpenCurlyQuote]True\[CloseCurlyQuote] so it will \
execute the next command every time it gets to that point: \
\>", "Text",
 CellChangeTimes->{{3.8026304359300623`*^9, 3.802630455678577*^9}, {
  3.8026305653206577`*^9, 3.802630664691516*^9}, {3.802630721907826*^9, 
  3.802630722037841*^9}},ExpressionUUID->"ff9a91e1-ad86-4a3f-812d-\
5b6045fc8f62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"-", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Which", "[", 
  RowBox[{
   RowBox[{"a", ">", " ", "0"}], ",", 
   RowBox[{"Print", "[", "\"\<positive number\>\"", "]"}], ",", 
   RowBox[{"IntegerQ", "@", "a"}], ",", 
   RowBox[{"Print", "[", "\"\<negative integer\>\"", "]"}], ",", "True", ",", 
   
   RowBox[{"Print", "[", "\"\<negative, non-integer\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.802630458016016*^9, 3.802630561522265*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"4a316408-6172-4598-b2d4-b41fd55bdd35"],

Cell[BoxData["\<\"negative, non-integer\"\>"], "Print",
 CellChangeTimes->{3.80263056337844*^9, 3.8026307502436438`*^9},
 CellLabel->
  "During evaluation of \
In[260]:=",ExpressionUUID->"11405e89-d3ea-4fe0-8d4e-a492a026e351"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"-", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Which", "[", 
  RowBox[{
   RowBox[{"a", ">", " ", "0"}], ",", 
   RowBox[{"Print", "[", "\"\<positive number\>\"", "]"}], ",", 
   RowBox[{"IntegerQ", "@", "a"}], ",", 
   RowBox[{"Print", "[", "\"\<negative integer\>\"", "]"}], ",", "True", ",", 
   
   RowBox[{"Print", "[", "\"\<negative, non-integer\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{3.802630673717331*^9},
 CellLabel->
  "In[262]:=",ExpressionUUID->"8a30144f-aaf6-4d3c-8cf7-b939965a7600"],

Cell[BoxData["\<\"negative integer\"\>"], "Print",
 CellChangeTimes->{3.802630674483892*^9, 3.802630750278577*^9},
 CellLabel->
  "During evaluation of \
In[262]:=",ExpressionUUID->"3afd3f37-fff6-4194-938f-6528da673a3d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.802630728834237*^9, 3.802630729687044*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"a47e08f6-c412-4918-9569-a227440bf2ca"],

Cell["\<\
For If statements that test for equality, make sure to take careful note of \
the difference between \[OpenCurlyQuote]==\[CloseCurlyQuote] and \
\[OpenCurlyQuote]===\[CloseCurlyQuote] outlined in the next section; we\
\[CloseCurlyQuote]ll see that you typically want to use \[OpenCurlyQuote]===\
\[CloseCurlyQuote]. \
\>", "Text",
 CellChangeTimes->{{3.8026308643906*^9, 
  3.802630943069524*^9}},ExpressionUUID->"56f298f2-a7be-4972-b919-\
dffb058af469"]
}, Closed]],

Cell[CellGroupData[{

Cell["Equality and Systems of Equations, Reduce, and (To)Rules", \
"Subsubsection",
 CellChangeTimes->{{3.788004209235182*^9, 3.7880042161157084`*^9}, {
   3.802467668707449*^9, 3.802467673329702*^9}, {3.802630227281376*^9, 
   3.802630229276106*^9}, 
   3.8026308426132803`*^9},ExpressionUUID->"f8b5249d-6363-46c1-8b22-\
a982a70a56e8"],

Cell["\<\
Be careful with equals signs: a single equals sign \[OpenCurlyDoubleQuote]=\
\[CloseCurlyDoubleQuote] is for assignment; \[OpenCurlyDoubleQuote]==\
\[CloseCurlyDoubleQuote] (Equal) is for an equation (and remains symbolic \
until values are assigned to the variables on either side that allow \
Mathematica to determine if the equation is consistent); and \
\[OpenCurlyDoubleQuote]===\[CloseCurlyDoubleQuote] (SameQ) immediately tests \
whether the expressions on each side are identical. \
\>", "Text",
 CellChangeTimes->{{3.788002601870893*^9, 3.788002625858283*^9}, {
  3.788002668862979*^9, 3.7880027110700207`*^9}, {3.802196433948391*^9, 
  3.8021964462121887`*^9}, {3.80263008089721*^9, 3.802630082280588*^9}, {
  3.802630156820709*^9, 
  3.802630157985682*^9}},ExpressionUUID->"66735b6f-3c8c-45c5-ad00-\
b0027a77caf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", "4", " ", 
  RowBox[{"(*", "assignment", "*)"}]}]], "Input",
 CellChangeTimes->{{3.788002713048952*^9, 3.788002720294458*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"2db7890e-67b3-46e2-8c6f-04e8ba66fa49"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.7880027139775953`*^9, 3.788002720732942*^9}, 
   3.788006757293769*^9, 3.78801046180328*^9, 3.802196398897614*^9, 
   3.8024672628231373`*^9, 3.8025354250310907`*^9, 3.8026307507693233`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"5a010b4c-bf90-403d-b65c-cb4e57a717f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.802196399504745*^9},
 CellLabel->
  "In[283]:=",ExpressionUUID->"3b5d0ab8-71d6-4428-b57a-9a90aed38203"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.802196399901639*^9, 3.8024672628842373`*^9, 
  3.802535425066064*^9, 3.802630750789061*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"a0a30772-990e-4dcb-a919-a1f1fd93d538"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "\[Equal]", " ", "y", " ", 
  RowBox[{"(*", 
   RowBox[{"an", " ", "equation"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7880027221348457`*^9, 3.788002729579824*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"fd217c5d-7dbd-4ec1-8ac8-25beb1826e79"],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "y"}]], "Output",
 CellChangeTimes->{{3.788002723460557*^9, 3.7880027300053587`*^9}, 
   3.788006758762826*^9, 3.788010461849904*^9, 3.802196401775049*^9, 
   3.802467262904505*^9, 3.802535425082746*^9, 3.802630750826828*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"f85bc726-9109-4d17-b094-562ac2034894"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"note", " ", "x", " ", "is", " ", "still", " ", 
   RowBox[{"unassigned", ":"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8021964093569813`*^9, 3.8021964181303864`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"74cadf90-5e6a-4055-b7f0-c5766717b5d8"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.802196402892412*^9, 3.80219640426035*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"61f3a4f3-a295-4201-9fe6-332f064d0d07"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.802196404812003*^9, 3.802467262973812*^9, 
  3.802535425129489*^9, 3.8026307508666477`*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"4b26168b-af64-46e8-9ed3-6524080671c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", "\[Equal]", " ", "3"}]], "Input",
 CellChangeTimes->{{3.7880067724986277`*^9, 3.788006807771124*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"ee4b9f6d-09f7-4347-9702-4db388b9e9f8"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.788006780031176*^9, 3.788006808130639*^9}, 
   3.788010461900757*^9, 3.802196453397175*^9, 3.802467263049079*^9, 
   3.802535425161487*^9, 3.8026307508793077`*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"49974b6c-a3a6-4986-8419-b066d7e89dfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "===", " ", "y", " ", 
  RowBox[{"(*", 
   RowBox[{"check", " ", "identical"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.788002731458528*^9, 3.788002777655088*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"00586ae1-aae8-43d2-894e-7491eb112f6a"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.788002732764739*^9, 3.788006760319469*^9, 
  3.788010461954337*^9, 3.802196455759253*^9, 3.802467263071247*^9, 
  3.802535425178541*^9, 3.802630750915028*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"b25393e3-41e6-4ccb-bdec-b7bff23d4945"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "===", "x", " ", 
  RowBox[{"(*", 
   RowBox[{"check", " ", "identical"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.788002734810402*^9, 3.788002735787157*^9}, {
  3.788002781771525*^9, 3.7880027821264544`*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"907e0abc-8e72-490b-907a-7426caffaf73"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.788002736264407*^9, 3.788006764869069*^9, 
  3.788010461997546*^9, 3.802196457377253*^9, 3.8024672631362658`*^9, 
  3.8025354252137403`*^9, 3.8026307509299917`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"ffbd3cb5-3e68-4cf4-914d-57d9ac68b546"]
}, Open  ]],

Cell["\<\
Typically you\[CloseCurlyQuote]ll want to use \[OpenCurlyQuote]===\
\[CloseCurlyQuote] (SameQ) in If statements (or some other function that \
gives you a definite True or False); if you use \[OpenCurlyQuote]==\
\[CloseCurlyQuote] (Equal) and Mathematica leaves it unevaluated, If can \
produce confusing output (I\[CloseCurlyQuote]ll review Table in the next \
section; for now think of it like a For loop): \
\>", "Text",
 CellChangeTimes->{{3.802630093297559*^9, 3.8026301258103943`*^9}, {
  3.8026301673718348`*^9, 3.802630180042877*^9}, {3.8026302695205708`*^9, 
  3.8026302925465183`*^9}, {3.802630353107204*^9, 3.802630353701928*^9}, {
  3.802630781822259*^9, 
  3.802630794870426*^9}},ExpressionUUID->"4d879138-2c1d-41a0-82c4-\
c72bc7850005"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "y"}], ",", "1", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802630184971994*^9, 3.802630193813562*^9}, {
  3.802630304222176*^9, 3.802630351584111*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"10f4bd2b-dbfc-43c0-a54b-112f34d40c11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[Equal]", "y"}], ",", "1", ",", "0"}], "]"}], ",", "1", 
   ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"z", "\[Equal]", "y"}], ",", "1", ",", "0"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.802630372072493*^9, 3.802630750963469*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"4936f021-3cd1-4cbc-b127-82286c9961c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "===", "y"}], ",", "1", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802630376005734*^9, 3.8026303767540817`*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"589d49e9-1e59-49fa-84af-846c6bef1257"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.802630377429956*^9, 3.802630750979402*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"4c84d970-3bc8-44e7-9f56-a0b709eb4602"]
}, Open  ]],

Cell["\<\
And maybe I want to use \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] \
later and not have it evaluate to 4: \
\>", "Text",
 CellChangeTimes->{{3.788002810423376*^9, 
  3.788002826229212*^9}},ExpressionUUID->"3a8175b7-ec00-4ccf-9360-\
46aee0b06bfa"],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.788002806761511*^9, 3.7880028075730257`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"1061374c-a21a-44eb-b57d-cf3edf58459b"],

Cell["\<\
To solve a system of equations, use Reduce. Reduce takes a set of equations, \
and then optionally list of variables to eliminate. It\[CloseCurlyQuote]s \
often useful to store the results in a list of rules that can be applied \
later: \
\>", "Text",
 CellChangeTimes->{{3.7880042300094852`*^9, 3.7880043148539953`*^9}, {
  3.788004349274865*^9, 3.78800434974963*^9}, {3.788009300221068*^9, 
  3.788009318205392*^9}, {3.802196496664577*^9, 3.802196500212782*^9}, {
  3.802536278323105*^9, 
  3.802536315587834*^9}},ExpressionUUID->"f5ed05c2-3de2-4983-8e02-\
54895aea70f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solutionRules", " ", "=", " ", 
  RowBox[{"ToRules", "@", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "a"}], " ", "\[Equal]", " ", 
        RowBox[{"y", " ", "+", " ", "x"}]}], ",", " ", 
       RowBox[{
        RowBox[{"2", "c"}], "\[Equal]", " ", 
        RowBox[{"x", "-", "y"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7880042493401823`*^9, 3.788004337049172*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"d613de94-99f4-4894-b8d2-2a73e81318fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    RowBox[{"a", "+", "c"}]}], ",", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"a", "-", "c"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.78800426005649*^9, {3.7880043046465483`*^9, 3.7880043373909607`*^9}, 
   3.788006819698227*^9, 3.788010462083095*^9, 3.802196504221983*^9, 
   3.802467263214623*^9, 3.802535425262515*^9, 3.802630751030713*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"0e5d808c-71a7-437c-a731-c0bade8e7bed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"to", " ", "apply", " ", "rules"}], ",", " ", 
   RowBox[{
    RowBox[{"syntax", " ", "is", " ", "expression"}], " ", "/.", " ", 
    "rules"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.788004352181991*^9, 3.788004362134459*^9}, 
   3.802196511308587*^9},
 CellLabel->
  "In[294]:=",ExpressionUUID->"c7cbd58c-ea6f-4abc-a042-b31c5b823db9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", "-", " ", 
     SuperscriptBox["y", "2"]}], ")"}], " ", "/.", " ", "solutionRules"}], 
  "  ", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.788004321688792*^9, 3.7880043429114923`*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"ea707e81-4cd6-44ac-b404-1b5f677f250b"],

Cell[BoxData[
 RowBox[{"4", " ", "a", " ", "c"}]], "Output",
 CellChangeTimes->{{3.788004338712068*^9, 3.788004343260687*^9}, 
   3.788006821751737*^9, 3.788010462209702*^9, 3.8021965150260687`*^9, 
   3.8024672632955112`*^9, 3.802535425325871*^9, 3.802630751100013*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"839c5d0f-8fc8-417c-b26e-113f61481281"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Table", "Subsubsection",
 CellChangeTimes->{{3.787936527531577*^9, 3.78793652805154*^9}, {
  3.787937003224451*^9, 3.787937003899699*^9}, {3.787937185080317*^9, 
  3.787937187875531*^9}},ExpressionUUID->"2f816d6f-3453-44ef-9431-\
ec0c48901e6c"],

Cell["\<\
In Mathematica, For loops aren\[CloseCurlyQuote]t really a thing; instead, \
use Table (or Do). Table has the same sort of action as a For loop, but it\
\[CloseCurlyQuote]s cleaner once you get used to it, and it stores the value \
obtained upon each iteration in a list for later use. Table and Do always end \
in a syntax that specifies what values to iterate over; below, i runs from 1 \
to 10, and units of 1 are assumed: \
\>", "Text",
 CellChangeTimes->{{3.787936529650085*^9, 3.78793659783492*^9}, 
   3.7879370080290337`*^9, {3.802536418724649*^9, 3.802536460668684*^9}, {
   3.802536572527976*^9, 3.8025366338173933`*^9}, {3.80253666469079*^9, 
   3.802536664833695*^9}},ExpressionUUID->"78fec864-0b98-4066-bacc-\
06aef54612e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"squares", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7879365569686193`*^9, 3.787936565264265*^9}, {
  3.7880030520784197`*^9, 3.788003053143347*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"e1a07176-6bc6-4150-9cba-139d7c23ab0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.787936565702023*^9, 3.788003053618093*^9, 
  3.788006862967926*^9, 3.788010462267808*^9, 3.80219654245641*^9, 
  3.802467263501047*^9, 3.80253542537927*^9, 3.802630750324257*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"99f25ddf-0d2f-468a-b067-412c812e11ce"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s use Table to find the sum of the integers from 1 to \
100 (obviously there\[CloseCurlyQuote]s better ways to do this, including in \
Mathematica, but hey, it\[CloseCurlyQuote]s an example). Initialize some \
variable to hold a running total. Then, allow the table to run over the \
integers in question, adding the next one to the total at every step. \
Finally, once Table has generated that list, ask for the final answer by \
grabbing the last element of the list \[OpenCurlyDoubleQuote]sums\
\[CloseCurlyDoubleQuote]: \
\>", "Text",
 CellChangeTimes->{{3.788003107196945*^9, 3.788003212873088*^9}, {
  3.788003257690165*^9, 3.7880033016755457`*^9}, {3.788006875628841*^9, 
  3.788006878892845*^9}, {3.8021965679575787`*^9, 3.802196575118122*^9}, {
  3.8025364871550903`*^9, 3.802536496326495*^9}, {3.8025366400052156`*^9, 
  3.802536642589837*^9}},ExpressionUUID->"3aed6ee1-9ea8-46f4-b533-\
81e41b515db1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"total", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sums", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"total", " ", "+=", " ", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", "sums"}]}], "Input",
 CellChangeTimes->{{3.788003062840374*^9, 3.788003094204674*^9}, {
  3.788003215836319*^9, 3.788003219887423*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"eb7cdb4d-fdcc-407c-8973-e020a0db7f9e"],

Cell[BoxData["5050"], "Output",
 CellChangeTimes->{{3.788003081671712*^9, 3.788003094891078*^9}, 
   3.788003220401754*^9, 3.788006867239258*^9, 3.788010462316482*^9, 
   3.802196611315043*^9, 3.8024672635235558`*^9, 3.802535425396305*^9, 
   3.80263075033921*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"bc83d192-1baa-4930-95ce-4531c928e9f2"]
}, Open  ]],

Cell["\<\
We can see that the list generated by Table, sums, holds all the intermediate \
values of the calculation: \
\>", "Text",
 CellChangeTimes->{{3.788003221502583*^9, 3.7880032412980556`*^9}, 
   3.788006905021879*^9},ExpressionUUID->"acbddc55-e75c-428c-87e1-\
9e500a1c9a3d"],

Cell[CellGroupData[{

Cell[BoxData["sums"], "Input",
 CellChangeTimes->{{3.7880032469616547`*^9, 3.7880032473313007`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"ecb5230c-6378-4933-8d33-fb471ee3a48e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55", ",", "66", ",", "78", ",", "91", ",", "105", 
   ",", "120", ",", "136", ",", "153", ",", "171", ",", "190", ",", "210", 
   ",", "231", ",", "253", ",", "276", ",", "300", ",", "325", ",", "351", 
   ",", "378", ",", "406", ",", "435", ",", "465", ",", "496", ",", "528", 
   ",", "561", ",", "595", ",", "630", ",", "666", ",", "703", ",", "741", 
   ",", "780", ",", "820", ",", "861", ",", "903", ",", "946", ",", "990", 
   ",", "1035", ",", "1081", ",", "1128", ",", "1176", ",", "1225", ",", 
   "1275", ",", "1326", ",", "1378", ",", "1431", ",", "1485", ",", "1540", 
   ",", "1596", ",", "1653", ",", "1711", ",", "1770", ",", "1830", ",", 
   "1891", ",", "1953", ",", "2016", ",", "2080", ",", "2145", ",", "2211", 
   ",", "2278", ",", "2346", ",", "2415", ",", "2485", ",", "2556", ",", 
   "2628", ",", "2701", ",", "2775", ",", "2850", ",", "2926", ",", "3003", 
   ",", "3081", ",", "3160", ",", "3240", ",", "3321", ",", "3403", ",", 
   "3486", ",", "3570", ",", "3655", ",", "3741", ",", "3828", ",", "3916", 
   ",", "4005", ",", "4095", ",", "4186", ",", "4278", ",", "4371", ",", 
   "4465", ",", "4560", ",", "4656", ",", "4753", ",", "4851", ",", "4950", 
   ",", "5050"}], "}"}]], "Output",
 CellChangeTimes->{3.788003247741243*^9, 3.788006893909521*^9, 
  3.7880104623659153`*^9, 3.802196614586136*^9, 3.802467263608437*^9, 
  3.802535425440681*^9, 3.802630750378607*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"d2ae24c4-868b-4806-9426-eac8850dde32"]
}, Open  ]],

Cell[TextData[{
 "You can also do intermediate calculations in a table. The last line before \
the loop variable declaration is what will be output to the list. Here\
\[CloseCurlyQuote]s an example that grabs the first few terms in the Taylor \
series of Exp[-x] around x = 0. The variable \[OpenCurlyDoubleQuote]sign\
\[CloseCurlyDoubleQuote] is an intermediate calculation; the table only saves \
",
 Cell[BoxData[
  RowBox[{"sign", "*", 
   FractionBox[
    SuperscriptBox["x", "n"], 
    RowBox[{"n", "!"}]]}]],
  CellChangeTimes->{{3.7879366309868517`*^9, 3.787936657496003*^9}, {
   3.7879368657660933`*^9, 3.7879368917765703`*^9}},ExpressionUUID->
  "cf0fe00a-eb37-4465-be74-7809e5b75e11"],
 ". "
}], "Text",
 CellChangeTimes->{{3.7879366005354967`*^9, 3.787936628602745*^9}, {
  3.787936903547195*^9, 3.7879369197938004`*^9}, {3.787936969143405*^9, 
  3.787936992988481*^9}, {3.787937323904728*^9, 3.7879373457395353`*^9}, {
  3.788003637343457*^9, 3.78800365336287*^9}, {3.788006927990909*^9, 
  3.7880069284867773`*^9}, {3.802196621723791*^9, 
  3.802196624215941*^9}},ExpressionUUID->"cf84b004-4666-47e9-880a-\
46b421763e55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expTerms", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sign", " ", "=", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "n"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sign", "*", 
      FractionBox[
       SuperscriptBox["x", "n"], 
       RowBox[{"n", "!"}]]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "8"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7879366309868517`*^9, 3.787936657496003*^9}, {
  3.7879368657660933`*^9, 3.7879368917765703`*^9}, {3.787937313311274*^9, 
  3.787937317767539*^9}, {3.788003657613183*^9, 3.788003658008699*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"f55c7508-e562-44e0-b0b9-60b32f03ace1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "x"}], ",", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"]}], ",", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"]}], ",", 
   FractionBox[
    SuperscriptBox["x", "6"], "720"], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "7"], "5040"]}], ",", 
   FractionBox[
    SuperscriptBox["x", "8"], "40320"]}], "}"}]], "Output",
 CellChangeTimes->{{3.787936885204402*^9, 3.78793689225746*^9}, 
   3.7879369330687523`*^9, 3.7879373183183517`*^9, 3.788003658726873*^9, 
   3.788006932038312*^9, 3.788010462415596*^9, 3.802196646620657*^9, 
   3.802467263632626*^9, 3.80253542545767*^9, 3.802630750395604*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"4bf5d1c8-b92e-4ee3-8d74-73a0cec22166"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expansion", " ", "=", " ", 
  RowBox[{"Total", "@", "expTerms"}]}]], "Input",
 CellChangeTimes->{{3.787936895900608*^9, 3.7879368992069483`*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"a6ea49d5-0f48-4553-81bd-b3cc21eb1192"],

Cell[BoxData[
 RowBox[{"1", "-", "x", "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "-", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "-", 
  FractionBox[
   SuperscriptBox["x", "5"], "120"], "+", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "-", 
  FractionBox[
   SuperscriptBox["x", "7"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"]}]], "Output",
 CellChangeTimes->{3.78793689952847*^9, 3.788003667352955*^9, 
  3.788006933408524*^9, 3.788010462467661*^9, 3.8021966502810497`*^9, 
  3.802467263699628*^9, 3.8025354254933853`*^9, 3.802630750430521*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"0921c059-8005-4cd8-8ca9-6e12298c7eae"]
}, Open  ]],

Cell["May as well check how good an approximation this was: ", "Text",
 CellChangeTimes->{{3.78800408291155*^9, 3.7880041304189777`*^9}, {
  3.7880043682887173`*^9, 3.788004370331669*^9}, {3.802196666485283*^9, 
  3.802196670735302*^9}},ExpressionUUID->"e065ede6-560d-4412-b714-\
3dd3744920e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"-", "0.1"}], "]"}], " ", "-", " ", 
  RowBox[{"(", 
   RowBox[{"expansion", "/.", 
    RowBox[{"x", "\[Rule]", " ", "0.1"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7880036732646437`*^9, 3.7880036837725554`*^9}, {
  3.788009636116509*^9, 3.7880096363065042`*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"3714f0dd-7cbb-4e35-91a2-f7304367da53"],

Cell[BoxData[
 RowBox[{"-", "2.886579864025407`*^-15"}]], "Output",
 CellChangeTimes->{3.788003684239778*^9, 3.788004133515869*^9, 
  3.7880069350205*^9, 3.788010462514996*^9, 3.802196663734054*^9, 
  3.802467263718822*^9, 3.802535425511839*^9, 3.802630750466215*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"dee54ae9-ec22-4197-ac22-c2afa9e39521"]
}, Open  ]],

Cell["\<\
A table doesn\[CloseCurlyQuote]t have to run over some list of consecutive \
integers, either. You can instead loop over the elements of a list. I\
\[CloseCurlyQuote]m using Range to generate a sample list here: \
\>", "Text",
 CellChangeTimes->{{3.787937093410242*^9, 3.787937101536975*^9}, {
  3.802196702233098*^9, 
  3.8021967551250753`*^9}},ExpressionUUID->"8fcf2da0-ae77-4d8b-83ea-\
a97253dce584"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xList", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "15", ",", "0.5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787937103189397*^9, 3.787937110136436*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"34491ec9-8ad7-4cdb-9ef2-953d56284710"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.`", ",", "10.5`", ",", "11.`", ",", "11.5`", ",", "12.`", ",", "12.5`", 
   ",", "13.`", ",", "13.5`", ",", "14.`", ",", "14.5`", ",", "15.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7879371104241323`*^9, 3.788006948913529*^9, 
  3.7880104625662117`*^9, 3.8021967576911907`*^9, 3.802467263785592*^9, 
  3.8025354255432377`*^9, 3.802630750501877*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"5ce81423-528c-42b6-93d3-ec30b43415b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"x", "/", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "xList"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "read", " ", "this", " ", "as", " ", "looping", " ", "over", " ", "each", 
     " ", "element"}], ",", " ", 
    RowBox[{"locally", " ", 
     RowBox[{"named", " ", "'"}], 
     RowBox[{"x", "'"}]}], ",", "  ", 
    RowBox[{"in", " ", "the", " ", "list", " ", "xList"}]}], "*)"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.787937114076922*^9, 3.7879371217607117`*^9}, {
  3.787937222757412*^9, 3.78793723496616*^9}, {3.788002975089335*^9, 
  3.788002979148847*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"6d26bbbe-3de7-42eb-b33f-5f698ba5c0d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.`", ",", "5.25`", ",", "5.5`", ",", "5.75`", ",", "6.`", ",", "6.25`", 
   ",", "6.5`", ",", "6.75`", ",", "7.`", ",", "7.25`", ",", "7.5`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.787937122139967*^9, 3.787937235972577*^9, 
  3.788006952775816*^9, 3.788010462616725*^9, 3.8021967645899487`*^9, 
  3.8024672638070297`*^9, 3.8025354255546913`*^9, 3.8026307505347567`*^9},
 CellLabel->
  "Out[274]=",ExpressionUUID->"4f5cca5e-b69c-444b-9039-de86c8aad8c6"]
}, Open  ]],

Cell["\<\
The list elements iterated over don\[CloseCurlyQuote]t even need to be \
numbers. \
\>", "Text",
 CellChangeTimes->{{3.802536744099886*^9, 
  3.802536769172983*^9}},ExpressionUUID->"23a44fd6-95c9-43c2-8bc5-\
51dba4d32bda"]
}, Closed]],

Cell[CellGroupData[{

Cell["Do ", "Subsubsection",
 CellChangeTimes->{{3.7879371916009827`*^9, 
  3.787937191846416*^9}},ExpressionUUID->"59604b52-cc7c-4882-a6fe-\
746a801a791d"],

Cell["\<\
Do is the same as Table, except it doesn\[CloseCurlyQuote]t output anything \
(unlike Table, which outputs a list). This is good for when you don\
\[CloseCurlyQuote]t need the value at each step of a calculation, or if \
indeed you\[CloseCurlyQuote]re not even doing a calculation at every step! \
Here\[CloseCurlyQuote]s an example looking for the minimum value in some list \
of data: \
\>", "Text",
 CellChangeTimes->{{3.7879370104841013`*^9, 3.7879370615308437`*^9}, {
  3.787937202231676*^9, 
  3.787937220276537*^9}},ExpressionUUID->"a31892e5-413f-40fe-872f-\
47bd3fe2456c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMinimum", "[", "data_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"currentMin", " ", "=", " ", 
      RowBox[{"First", "@", "data"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"point", " ", "<", " ", "currentMin"}], ",", 
         RowBox[{"currentMin", " ", "=", " ", "point"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"point", ",", " ", "data"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "currentMin"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787937065776822*^9, 3.787937086532813*^9}, {
  3.787937133993815*^9, 3.7879371539711103`*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"2ee10f5d-d8e4-4d47-80fc-36ad0c36db7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yValues", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.78793716374646*^9, 3.7879371683198147`*^9}, {
  3.787937249691057*^9, 3.787937250996655*^9}, {3.788009706088313*^9, 
  3.788009720325779*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"f0db58d0-cdab-4ba1-b3fe-d5cca54d39d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8034657035368997`", ",", "0.6432747506773466`", ",", 
   "0.009157004334299224`", ",", "0.09239244143869718`", ",", 
   "0.8715750477119759`", ",", "0.13567110672680416`", ",", 
   "0.1110398717917882`", ",", "0.3736852791046268`", ",", 
   "0.8124932217889389`", ",", "0.607413914477245`"}], "}"}]], "Output",
 CellChangeTimes->{3.787937168645878*^9, 3.7879372514532213`*^9, 
  3.788007991726797*^9, 3.788009720729292*^9, 3.788010462733096*^9, 
  3.802196900896661*^9, 3.80246726388761*^9, 3.802535425599921*^9, 
  3.802630750579939*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"ddc3a1c1-d3bc-4285-8112-573ddc602e7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findMinimum", "[", "yValues", "]"}]], "Input",
 CellChangeTimes->{{3.787937154772964*^9, 3.7879371725799837`*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"a826c5b1-1c6f-4d48-8942-a87074aa6923"],

Cell[BoxData["0.009157004334299224`"], "Output",
 CellChangeTimes->{3.787937172945283*^9, 3.787937252897088*^9, 
  3.788007993095284*^9, 3.788009723456585*^9, 3.788010462784027*^9, 
  3.8021969029574947`*^9, 3.802467263951301*^9, 3.8025354256286793`*^9, 
  3.802630750618259*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"c54b02f5-4ac7-4281-9103-437728e94966"]
}, Open  ]],

Cell["\<\
We could\[CloseCurlyQuote]ve used Table for this task, but the output of the \
table would\[CloseCurlyQuote]ve looked weird and not be super useful: \
\>", "Text",
 CellChangeTimes->{{3.802196913400901*^9, 3.8021969382726793`*^9}, {
  3.80219697490534*^9, 
  3.802196981387971*^9}},ExpressionUUID->"dd5488af-73bc-448a-a952-\
6a30783cdb3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMinimumAlt", "[", "data_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"currentMin", " ", "=", " ", 
       RowBox[{"First", "@", "data"}]}], ",", "tab"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"point", " ", "<", " ", "currentMin"}], ",", 
          RowBox[{"currentMin", " ", "=", " ", "point"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"point", ",", " ", "data"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "@", "tab"}], ";", "\[IndentingNewLine]", 
     "currentMin"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8021969429909782`*^9, 3.802196960583291*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"756b3d04-77d3-4ccd-9360-586b9c893044"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findMinimumAlt", "[", "yValues", "]"}]], "Input",
 CellChangeTimes->{{3.802196966166586*^9, 3.802196966476841*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"cd1b9ef3-3c2a-4371-a4f7-2fbcd7ba5696"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "0.6432747506773466`", ",", "0.009157004334299224`", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null"}], "}"}]], "Print",
 CellChangeTimes->{3.802196966954698*^9, 3.802467264030978*^9, 
  3.802535425667766*^9, 3.802630750658456*^9},
 CellLabel->
  "During evaluation of \
In[279]:=",ExpressionUUID->"06bdf82e-61f3-423b-b7d6-8006ea8e2bcb"],

Cell[BoxData["0.009157004334299224`"], "Output",
 CellChangeTimes->{3.8021969669567957`*^9, 3.802467264034697*^9, 
  3.802535425669107*^9, 3.802630750664132*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"28a2124b-26aa-4119-98b5-225de6be79b7"]
}, Open  ]],

Cell["\<\
Do is also fairly useful when you need to modify a pre-existing object at \
every step of a calculation. Here, let\[CloseCurlyQuote]s generate a n-terms \
Fibonacci sequence, non-recursively for a change. At every iteration in Do, \
add to the end of the list Fibonacci another element that\[CloseCurlyQuote]s \
the sum of the current last two terms:\
\>", "Text",
 CellChangeTimes->{{3.788003547790498*^9, 3.788003599453741*^9}, 
   3.7880055632744093`*^9, {3.788009754729207*^9, 3.7880097691832047`*^9}, {
   3.8025372976362963`*^9, 
   3.802537303245378*^9}},ExpressionUUID->"927a754f-acda-4f71-8342-\
6c28e280fef5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fibonacciSequence", "[", "nTerms_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fibonacci", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"nTerms", " ", "-", " ", "2"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"fibonacci", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"fibonacci", ",", 
          RowBox[{
           RowBox[{"fibonacci", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "+", 
           RowBox[{"fibonacci", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "fibonacci"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7880034564000683`*^9, 3.788003528455915*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"ac9a70e8-52f3-45fd-819a-3d3ad3a37fd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fibonacciSequence", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7880035184517508`*^9, 3.78800353432618*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"a4f54625-be9a-44c2-acf4-9724b80a125e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", 
   ",", "21", ",", "34"}], "}"}]], "Output",
 CellChangeTimes->{{3.788003521553423*^9, 3.788003534702785*^9}, 
   3.788008000507833*^9, 3.788010462851036*^9, 3.802197052444722*^9, 
   3.802467264112784*^9, 3.802535425710156*^9, 3.802630750732691*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"e1de3f5f-e0da-4271-8c95-e20e05e8acdb"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other Useful Stuff", "Subsection",
 CellChangeTimes->{{3.787918244417532*^9, 3.787918249109477*^9}, {
  3.788002332290924*^9, 3.788002333118696*^9}, {3.788008333778078*^9, 
  3.788008344150017*^9}, {3.78811464579636*^9, 3.7881146460602903`*^9}, {
  3.80219713676297*^9, 
  3.802197139737701*^9}},ExpressionUUID->"e5283b3a-1b56-416e-90e6-\
5917f407d162"],

Cell[CellGroupData[{

Cell["Very Basic Plots", "Subsubsection",
 CellChangeTimes->{{3.787918732492161*^9, 3.787918733285409*^9}, {
  3.78793627600562*^9, 3.787936277502886*^9}, {3.802197083961726*^9, 
  3.802197094765521*^9}},ExpressionUUID->"6f5fa77c-a4a9-4b3c-b47a-\
7538dd412c7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.78791873727562*^9, 3.787918745138555*^9}, {
  3.787919011381761*^9, 3.787919058263027*^9}, {3.787936370947571*^9, 
  3.787936419735882*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"b576e0f2-ae0c-4448-84d8-3fe1e8d2deed"],

Cell["\<\
Really you just wanna look at the documentation for Plot every time you make \
one, and personalize from there.... this one doesn\[CloseCurlyQuote]t look \
great but this is the basic syntax for a passable plot: \
\>", "Text",
 CellChangeTimes->{{3.8025373217465878`*^9, 
  3.802537349910062*^9}},ExpressionUUID->"d5ef9269-fa36-4010-9af5-\
16645d75f444"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.787918746933258*^9, 3.787918754478332*^9}, {
  3.7879190196473618`*^9, 3.7879190451139917`*^9}, {3.787936256518347*^9, 
  3.787936267277738*^9}, {3.787936391013145*^9, 3.787936414363628*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"bde603f1-5c9a-4d7d-b286-153e12341e82"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
lgaZGTiNkcOA/wFNCltR
       "]]},
     Annotation[#, "Charting`Private`Tag$9525#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"f(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-30.451502361250107`, 30.668924555333113`}}, {{
     0, 6.283185307179586}, {-30.451502361250107`, 30.668924555333113`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.787918755160695*^9, {3.787919015550041*^9, 3.787919059500742*^9}, 
   3.787936267886325*^9, {3.78793637268106*^9, 3.7879364211227827`*^9}, 
   3.788008022122273*^9, 3.7880104630421*^9, 3.802197061994137*^9, 
   3.8024672643978567`*^9, 3.802535426120928*^9, 3.802630751422758*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"88f5c839-33c5-43a8-be5c-24a3af707acc"]
}, Open  ]],

Cell["\<\
For a scatter plot, nested list structure {{x1,y1},{x2,y2},...}\
\>", "Text",
 CellChangeTimes->{{3.7879363020838137`*^9, 
  3.78793632477243*^9}},ExpressionUUID->"a9db3076-f016-4a26-b98b-\
194f8404b887"],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"x", "+", 
   RowBox[{"2", 
    SuperscriptBox["x", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.788005612034923*^9, 3.788005631088216*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"b2ad152b-526e-4169-95c0-0fe6ba92c287"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scatterPlot", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"y", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.787936328306177*^9, 3.78793635691833*^9}, {
  3.787936430756181*^9, 3.787936434609077*^9}, {3.788005634161415*^9, 
  3.788005634676592*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"18780665-1854-4e95-8d32-f143a6191370"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "scatterPlot", "]"}]], "Input",
 CellChangeTimes->{{3.787936358364579*^9, 3.7879363605874453`*^9}, {
  3.787936439424267*^9, 3.7879364955598803`*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"326a282e-2e68-4f52-9db9-c234f7fe019c"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {1., 3.}, {2., 10.}, {3., 21.}, {4., 36.}, {5., 
      55.}, {6., 78.}, {7., 105.}, {8., 136.}, {9., 171.}, {10., 210.}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0, 210.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.787936454781698*^9, 3.7879364959316893`*^9}, 
   3.788005636495253*^9, 3.788008027021462*^9, 3.788010463164304*^9, 
   3.802197078999851*^9, 3.8024672647805233`*^9, 3.802535426291209*^9, 
   3.802630751592328*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"6c783060-4750-4761-9fd9-71fb15a814b9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple ODE Solving", "Subsubsection",
 CellChangeTimes->{{3.78791890702071*^9, 3.787918911085474*^9}, {
  3.787918983024205*^9, 
  3.7879189868378267`*^9}},ExpressionUUID->"b3b1ddfb-4a24-4c75-beb2-\
c18f96d25f78"],

Cell["NDSolve takes arguments as follows: ", "Text",
 CellChangeTimes->{{3.787919082967945*^9, 
  3.787919095722514*^9}},ExpressionUUID->"24c46c1d-210f-4acd-8a64-\
6507a8a7ca4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"diffEquation", ",", " ", 
       RowBox[{"boundary", " ", "conditions"}]}], "}"}], ",", 
     "nameOfFunctionToSolveFor", ",", 
     RowBox[{"{", 
      RowBox[{"domain", " ", "for", " ", "solution"}], "}"}]}], "]"}], "*)"}],
   " "}]], "Input",
 CellChangeTimes->{{3.7879190980348387`*^9, 3.787919129074874*^9}, 
   3.8021971131432343`*^9},
 CellLabel->
  "In[301]:=",ExpressionUUID->"db8f9bbf-aa14-4e5f-b4e8-49471c642d88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"approxCosine", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g", "''"}], "[", "x", "]"}], "+", 
        RowBox[{"g", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"g", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    "g", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7798012944845667`*^9, 3.779801356431041*^9}, {
  3.779801410577425*^9, 3.7798014464720592`*^9}, {3.787919001860215*^9, 
  3.787919003353938*^9}, {3.787919065243997*^9, 3.787919070763891*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"e354dfbc-5b4e-4f52-9f41-78d20e41b903"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"g", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWjD4x///////vP8/aSIyo
OMo/F6oX77VU7z+WOpaK+FLbPzkvC0qqIO0/2+dwMj5M5D9HPkhdg8bpP1Yy
X3etzeo/xNbcxW9q5T9QmuaWIu7wP7LdXuJFZN8/cg2UVyY59D9OOFkoz1TT
P3xcAVG+yvc/AGEw7GNttT9761L2rEv7P8ewKVUSQMG/d+wagVOQ/j/Fl0vC
MU/Vv65kUSLHDQFA4ROHHPAF4b8ejNB2QLUCQMbdJQM7Oea/idNBIWVUBEA+
PoIoX2fqv+gIE+jTFgZACYhXf0O27b9Fd5+hHrsHQDUN+cWOgu+/ltOLd7OC
CUCI3/fL3fbvv+JPaqPzQQtAOKcLHrrg7r8sBQTCD+MMQEOdXkdoiuy/aqj9
/HWnDkAfcdYiIq3ov1NCWRXcJhBA9hDxz5P7479rp2M6ogsRQO7WcUaj5du/
gRxnCj7sEUBI4SzEEmTNvxYuyNPHvRJAvWT689Gzm7+lNlmr9qATQFomlnv5
xsg/s9tHfBN1FEAYd7aAignZP76QL/gFRRVAonAPHGkz4j/DPEeCnSYWQN/j
jmMzg+c/R4W8BSP5FkBcbg6e0nLrP8XEYZdN3RdAgIhaAahn7j9BFADUTb0Y
QCSfGzxw2O8/PAD8CTyOGUCJvTNbRNLvPzHjJ07PcBpABlXjovVN7j+lYrGL
UEQbQLmzTvJ1jes/FvIzdKcTHECiNM1qibfnP4F45mqj9BxAX1ySxfV24j9r
m/ZajcYdQPDOzWsQhNk/T7U2WRyqHkBWzGsZlufHP7Nr1FCZfh9AGA35Sc4e
lL8KmbX5dScgQL9LgDi8Ucy/t/cY0nGYIEAKBUDiTXrbv6QkK6fkASFAx3ZJ
n9Vb478OTVUDKnQhQA49dcyuhOi/d/37NFrkIUC1vNoG4mbsvx98UWMBTSJA
qpLLmpLN7r9E9r4Ye74iQDLHJq+b9O+/qT7bymsoI0DSMrzF1p7vvw0PdFJH
kCNA+HfjxHH77b/u2iRh9QAkQFB5ENtR0eq/DnWEbBpqJEDD13fbpLHmv6sK
/P4R3CRA7aFg0E8n4b9HKPBm9EslQF5eWCZQx9W/IhSTy020JUDwZx5YcEvC
v3r7Tbd5JSZArj6fI8rZsz8SsbefHI8mQLHqlDfU7dE/J2I5D5IBJ0C8T2Xv
bBrfPzubN1TycSdAEkgvhIVE5T+OouSVydonQGVduyRor+k/XqWpXnNMKED3
ddpY1kHtP252HSSUtihA7OfNi2tM7z+ZnB5N+yEpQEUMXyoAAPA/RwTR8A==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9625#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 
                  12.566370614359172`}, {-0.9988850578074429, 
                  1.000000157845322}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.566370614359172`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWjD4x///////vP8/aSIyo
OMo/F6oX77VU7z+WOpaK+FLbPzkvC0qqIO0/2+dwMj5M5D9HPkhdg8bpP1Yy
X3etzeo/xNbcxW9q5T9QmuaWIu7wP7LdXuJFZN8/cg2UVyY59D9OOFkoz1TT
P3xcAVG+yvc/AGEw7GNttT9761L2rEv7P8ewKVUSQMG/d+wagVOQ/j/Fl0vC
MU/Vv65kUSLHDQFA4ROHHPAF4b8ejNB2QLUCQMbdJQM7Oea/idNBIWVUBEA+
PoIoX2fqv+gIE+jTFgZACYhXf0O27b9Fd5+hHrsHQDUN+cWOgu+/ltOLd7OC
CUCI3/fL3fbvv+JPaqPzQQtAOKcLHrrg7r8sBQTCD+MMQEOdXkdoiuy/aqj9
/HWnDkAfcdYiIq3ov1NCWRXcJhBA9hDxz5P7479rp2M6ogsRQO7WcUaj5du/
gRxnCj7sEUBI4SzEEmTNvxYuyNPHvRJAvWT689Gzm7+lNlmr9qATQFomlnv5
xsg/s9tHfBN1FEAYd7aAignZP76QL/gFRRVAonAPHGkz4j/DPEeCnSYWQN/j
jmMzg+c/R4W8BSP5FkBcbg6e0nLrP8XEYZdN3RdAgIhaAahn7j9BFADUTb0Y
QCSfGzxw2O8/PAD8CTyOGUCJvTNbRNLvPzHjJ07PcBpABlXjovVN7j+lYrGL
UEQbQLmzTvJ1jes/FvIzdKcTHECiNM1qibfnP4F45mqj9BxAX1ySxfV24j9r
m/ZajcYdQPDOzWsQhNk/T7U2WRyqHkBWzGsZlufHP7Nr1FCZfh9AGA35Sc4e
lL8KmbX5dScgQL9LgDi8Ucy/t/cY0nGYIEAKBUDiTXrbv6QkK6fkASFAx3ZJ
n9Vb478OTVUDKnQhQA49dcyuhOi/d/37NFrkIUC1vNoG4mbsvx98UWMBTSJA
qpLLmpLN7r9E9r4Ye74iQDLHJq+b9O+/qT7bymsoI0DSMrzF1p7vvw0PdFJH
kCNA+HfjxHH77b/u2iRh9QAkQFB5ENtR0eq/DnWEbBpqJEDD13fbpLHmv6sK
/P4R3CRA7aFg0E8n4b9HKPBm9EslQF5eWCZQx9W/IhSTy020JUDwZx5YcEvC
v3r7Tbd5JSZArj6fI8rZsz8SsbefHI8mQLHqlDfU7dE/J2I5D5IBJ0C8T2Xv
bBrfPzubN1TycSdAEkgvhIVE5T+OouSVydonQGVduyRor+k/XqWpXnNMKED3
ddpY1kHtP252HSSUtihA7OfNi2tM7z+ZnB5N+yEpQEUMXyoAAPA/RwTR8A==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$9625#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 
                  12.566370614359172`}, {-0.9988850578074429, 
                  1.000000157845322}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.566370614359172`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{0., 12.566370614359172`}}, {
      5, 7, 2, {121}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1:eJwB2QMm/CFib1JlAgAAAAEAAAB5AAAAAAAAAAAAAAC6+7K1b+giP7r7srVv
6DI/cyK08SyqcT+VigZ06RKBP/ADM2+8UIk/M2hXx1JfiT92zHsf6W2JP7kw
oHd/fIk/+5TEzxWLiT8++egnrJmJP8PBMdjYtok/SYp6iAXUiT/OUsM4MvGJ
PwUomxvxFIs/O/1y/q84jD9x0krhblyNP6enIsQtgI4/431IUNHylD/yp3++
i6WaPwFpWxYjLKA/CP52TYAFoz8Qk5KE3d6lP64y09VALrk/6o2udIm2wz99
gnN+8tXKP4g7HMSt+tA/0rX+SGKK1D8bMOHNFhrYP3ZZpmCgAt8/aMG1+ZT1
4j8WVhjD2WnmP8Pqeowe3uk/cH/dVWNS7T8PCqAPVGPwP2ZUUXR2HfI/02ye
xgAf9D9AhesYiyD2P62dOGsVIvg/GraFvZ8j+j+HztIPKiX8P/TmH2K0Jv4/
sX82Wh8UAEDnC12D5BQBQB6Yg6ypFQJAVCSq1W4WA0CLsND+MxcEQM4pE3Xi
ZQVAEqNV65C0BkBVHJhhPwMIQJmV2tftUQlA3A4dTpygCkAgiF/ESu8LQGMB
ojr5PQ1ApnrksKeMDkBJ7W2+I5gPQPav++XPURBAR2nA7I3XEECYIoXzS10R
QOrbSfoJ4xFAO5UOAchoEkCMTtMHhu4SQN0HmA5EdBNAciUGcSrkE0AIQ3TT
EFQUQJ1g4jX3wxRAMn5QmN0zFUDHm776w6MVQFy5LF2qExZA8taav5CDFkCH
9Agid/MWQJFSVfKDeBdAm7ChwpD9F0CmDu6SnYIYQLBsOmOqBxlAusqGM7eM
GUDEKNMDxBEaQM+GH9TQlhpA2eRrpN0bG0B2KlQGFJobQBNwPGhKGBxAsLUk
yoCWHEBN+wwstxQdQOpA9Y3tkh1Ah4bd7yMRHkAkzMVRWo8eQMERrrOQDR9A
h9Ez/pOvH0CmyFykyyggQImon0nNeSBAbIji7s7KIEBPaCWU0BshQDJIaDnS
bCFAFSir3tO9IUD4B+6D1Q4iQHCZskrpUCJA6Sp3Ef2SIkBivDvYENUiQNtN
AJ8kFyNAVN/EZThZI0DNcIksTJsjQEYCTvNf3SNAv5MSunMfJEA4JdeAh2Ek
QLC2m0eboyRAKUhgDq/lJEAlqxMjojklQCAOxzeVjSVAG3F6TIjhJUAW1C1h
ezUmQBI34XVuiSZADZqUimHdJkAI/UefVDEnQANg+7NHhSdAvEMEyXnGJ0B0
Jw3eqwcoQCwLFvPdSChA5O4eCBCKKECc0icdQssoQNr/tbie9ihAGC1EVPsh
KUAFh6n0
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwl0A1HHQAAQNFXKU0ppSyl9JTSlFJKU0oppZS+LKWUl1JKj4gsIiIiIiIi
IiIiIiIiIiIiIiIiImLEiDp0OX/gBkPhrumIQCDwN/BdFDH8IJ5EkkkljQyy
CJJLPr8oooQyKvhNNbXU00gzrbTTSQ+99DPIMCOMMcEUYWaYZY55FlhkiWVW
WGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWOex545IlnXnjljX+8
858PPok0OJpY4kggiRR+kk4m2eSQRwGFFFNKOZVUUUMdDTTRQhsddPOHPgYY
IsQo40zyBUpINNE=
       "], CompressedData["
1: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
/88vBw57P/z95Cb7YDfa+D/uMTvl
       "]}, {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.779801435466199*^9, 3.7798014499924593`*^9}, 
   3.787919072379431*^9, 3.788008040909966*^9, 3.78801046341564*^9, 
   3.80219711557473*^9, 3.802467264946295*^9, 3.802535426409772*^9, 
   3.802630751756846*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"4e527908-43cc-4e7d-9187-63a6e3c7c0bf"]
}, Open  ]],

Cell["\<\
It\[CloseCurlyQuote]s important not to use this solution outside the domain \
in which it was solved (in this case, from x = 0 to x = 4\[Pi]) \
\>", "Text",
 CellChangeTimes->{{3.7880056676413717`*^9, 
  3.788005683341784*^9}},ExpressionUUID->"08040081-20f7-4bee-a74b-\
c400e0cbb24b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", "x", "]"}], "/.", "approxCosine"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.779801398070306*^9, 3.779801448484709*^9}, {
  3.787919074124762*^9, 3.787919076729678*^9}, {3.7880056452496367`*^9, 
  3.788005663665277*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"630d582a-7a9b-4ad3-8942-697764ddf45e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aXCRq9Os8N5OJXiTdPWQzDkuKr3pFW/RqwQxA9FmtZe5aGFiv9HOQSVwvO/S
7hHERbVd9Z7bRile2tJiHcVFBsfSWoz5aLBB3Fowp5iLBGyOvtZh0OAPK8Uu
k5ego5fqzVhLaBCSbR8QJEpQXpR592IdGmyULygwliHItWktXWMlDZxli07s
Uifom/WC60omNOi9+rJo2oggHe+bCxVMacBEJoM/NhN048HfPFlzGujkek7f
MyfIsL6PLWlJg1MOHbGZBwiK3fveWsCBBnfYBXYXPQia9lg7wutEg6rFk102
3gRZhr26PX+SBrIZ/koafgQJfn30fsaTBjJRz87vCCLIbaenzshVGlym65zX
iiao/FRfKfcmDSakR5oWPCNI7batHTuEBv2HAj/+TCToe6XZ/b5wGmz/ricr
8ZqgddsY/1qf0eDDx59q05ig1c+rgj8l0kDYnpTUfiRIb95LLiOFBvV3efhv
fyKIkfeRdSODBrUu7B0JXwhSlXPLOp1Dg6Oxs7v4vxOkeEZ+44F8GngFev3e
/IMgcS3q/fCBBofC1iecbCFI6Lpkm1wZDQIWvPxm0UYQz+8cl7kKSh9f8TWF
DoLGI4X8a2tpsOzu9hPbegnijqaLFNTTQPLdp/DMfoL6LQ7ce/6TBhZB0wbz
gwS1Cr144d1Og03rcb8RIeinw55V9t00cNhlSnRHKL3F00Vm/TQQsDnmzDNG
UI3ys+2r2DQolLfcnT1O+eVtVqc6TIN2lwuJZpMEvf8+Yis0ToPMu7tc3k8R
VKAX1U+maOAt6h5J+0NQ9i2Ts01/aRAVf1fPcoag172DcyXzNPjmHah/+i9B
qSb3gl/x02H9+OZHJ2cJSojdIBcpTAeftgbnbXNU3jNdMQHidPA1PRUj9I+g
R9Z3WCcX0OHLMXPDZIojMldnWcrRwf55s4H2/+8rpVqNjZTowCiPe3KH4kDX
mxWLVehwuWb98W8UXy3XtVqgRgc8fzJ0imI/RkPrNIMOEURk4f/vS739/V06
l9DhtKf0gn6KPZqXjFXr0EHwaaRjJsWua79eztGjQ1Hzl4VHKXaMuCASt5IO
qmWiG4aoeo5y1e4Fr6WDkWnOu0MUHzSvWOi1ng4o2OZ5CqXHKsnjxZGN1PNT
yaSZ0mvBR1+11YQOhptt4zmUH9uPfijSM6VD2GG7dx2UXyYFJ7fTzOng4Z6+
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
DNiJ2zS2EDy8lUQGSTLh4rzDtbwfBD/J8jA/qsCEUf5MTVFqfggt2DtlpcSE
NZWlRntLCfZwXZFgRmeCd8+aH77vqfw0RudWL2SC4XXJSK+3BI+Gns0QX8yE
m+HDZeNJBNsOWh3l1WKCkW2QhVk8wRVbV4tPsZiQqqftE0DN55jZccfOZdT4
b6U+hFHzf7urNy1/NRM6YGvGNn+Cs8qsy9LXMqGOu6MyxYfgRRoGXgmGTGAH
WaVyqPVkrHGq+q4RE04rB7cqO//f/4sBTluYIFbwJUXcgmDRZ4eW2ZgyQTj+
UKrfNoLPza5r2rudCd9EVZ5/BYLNsmZWGu9kwtZpnocqqwgeV/frldvHhATS
ZbJTkWA7P5t7otZM2OnSVfxZiuqvRiOYP8CEz3I3T64QJjgudO7x4BEmXCoS
comb4mLzWf9dH44zwTo6qVWxkYufNV7Ndj9L6S9qTPQN4+LesuW/Q88z4buA
Ubl1IBcvy/4t+voCExQS752S9uPi3DBjO3KJCX+s3pxVdebiGrM/oh43mOD3
eHHFow1cPF3oYef5gAn38hXP67Zx8MZUtVvhD5lwtU85te8bB19/9CU74zGl
/1an/pUyDpY6v0xsNIYJd73IiZ2vOJip15/tlcSEmex0SSsfDrZ4aid2Lo8J
QlKD+5aIcfD9UKk19/OZ8NF/s2/NXzZu8iuyyy5kwlceo869HDZ2PKSSM46Z
UHs+qnDmKxtflG20O1/BhAf8ks7l99g44YZFjncTE6KOdb7Zp8DGMy7G9hf/
MuH25gczNTxD2LxQB87PMaF68tCZPDKIn0jS1D3nmVDerXA8qG0QG2WO/nbh
1wTpvJXiPwsHsf/fZLuD4pqQ2thnvPH8IOYPlbUzUNGEwCtjV3S7BrBEVp/t
xHpNwBbyu5Re9eOFc+FHPH01IV/FLMJpsgdv79yV/9BPEypGvXz2t/bgc59E
lYr9NUGCxaOytLQHV4Vf/S52XRP4r2SI3g7vwd5LPM0SbmtCeO+7EvWlPbh2
9x6DxmhNqMo//rLoUDe+Fi8lZ4w1oeBm0uZ7iZ24d9vtKhGBxdDA7Jg7PteK
Py6pQYtuL4bOz4GeFq412FUkSUBDdAmw940GZ1dGorynmsYfw5dAyZoLISvR
d/Rlg1GZpYwWrNmdeCbCuR3denv+r6mcFujo/t3jcK0dbVvzesUGBS24O73b
gxHTjt7rMWKZdC0oCuriO/u9HWVpiFwYV9eC9k/X31gadaBHwvWsyOVaMBO4
QmtSohMdrzt1p2m3FjxrlolRf9aF1PcklnzeqwXiQienP+V3oV81bdMfrLTg
oOaPAJvvXci6fO+J1ANa8CZjcc5O/m60Pd9g4yU7LZCKXqG7zbEb6cXxD6ue
oZ4fTFkaxuhB065PrOxDtYCmVyf2424vuuv7XDggTAtGj9+Wb0juRUtuvSyM
idCC79tmUopwL9qfUshsidSCW7WpEkB6UWZfy9j+OC1YF3a6QmpXH3JzVL2/
440WZP0RXFnE34/abWPq137XgmTxhKxXNgPowunE4P31lL5mZ+ddngNI6nKa
0bkGLdi9wPzmt5sDyDi6KCGjWQuEnK2fX08fQFHNreeWdWlBmD9t6M6/AbTv
wCIFxrgWOM1HsNQfD6KKPXH7JRVZIPPx7pLsvCHkWtpTLExjwZPhVZ8ufBpC
kobLWHzKLEjaX7VevXEIWarlz0wuZIF6W7yt2uQQauF8j2tfzALLjWlD9SvZ
iHtLaDBrDQv2TiZZSCezUdi/nVbpBizoaxrVUc5ho1Ve9969WMeCo9m5I8If
2cjnkPrdGGMWbFwGInfb2IiPtX510FYW6HQ86jST5yCFstP+h/ezINbJa8TJ
l4PeGmb37TvAgkpItUgJ5KDDr2b27D7Egi/hByu/RHBQ7L0g5hZbFjivTesr
SeUglsOzCt0TLLifcfGaRRMHGc3Xy/KeZ4HWFS37geVc1Oal4vfXmwXVtnKb
Dm7goqu9x3omfFgQejwzNGUrF5V/5uYN+rGA+a582xh1nt4dLWJbf4MFS8Rr
FjKucpHDOqPk5PssqPorvbCnkotOcj5P/IpkAepf7Hq2jos8ntltkX3MAvKX
n/nrFxcFiF7v8IthAQ/DJdWIcFF0U6WKZRIL5CxGmwxlCXr+3xHXoBcsaNFa
afFYmaDUTZy371JZ4CQR0FjHICg/Rdpa6zULbiTv4m1cSVDDxQNhs3ks6JBD
CfJ7CWrVHWhbUcCCRMbizC0HCeru8NV1fscCP4WBEAs7gsbMYqu+vWdBa1Tv
OeJGkLRyj0ByJQtcqsasTgQSpPTF2+pXNQvMM4urHO4QtOiaSLzMFxZ4LP1d
vS6CIN3BpcjvOwsKPOv3nIshyLzA6+LeFhb8KyxNUc4kaK+7QEVgKwvYxVq5
XbkEHWREKr77zYKZ+AX0wEKCnG/lZy3pZsFjHsEa61KC3Dfu4LPpZYFri5XM
zQqCvEd/7QnvZ0G+XerDOzUE3TjMw/3LZsHA8mkrrXqCbktFGK0gLNh+MvVK
QSNBESXM204jLJjUam5Z0kLQM51trG8TLHB/rC95u4OgF20/vYWmWaDHutVy
rZugNxGuZRtmWLD0dE2FVR9BxTP/OST9o/KTuDx6hU1QWbpaRguPNogYRrNa
uQTVOGTMS/Nrg2+pgKfsCEH1ipstTAW1IT9YsFJ9jKCWqvroS8La0Fuqqicy
QVCnv9PQG1FtcGBNx1RMEjS4cnpdr7g2eDeeU3SYJmikNyRYRUob+D3jHtT/
IWg6SqVxj7Q2rJHPpqv/JWjeIm1xoKw26DoterZlliAhfnSuUF4bch5e1DGZ
I0gyr7ZkWFEbhlzDsmn/CJI/5SCzhK4N44a2GysoVlEbtzuiog2JU6Kf9swT
xKi7mR62UBvWo+Fd/7+f1AlSmitT0waePY+/sylesSFlx18NbeCTsNPh4RlG
/wPJUt8a
       "]]},
     Annotation[#, "Charting`Private`Tag$9682#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 4 Pi}, {-0.9999995318741757, 1.000000157845307}}, {{
     0, 12.566370614359172`}, {-0.9999995318741757, 1.000000157845307}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7798014067632017`*^9, 3.779801451410034*^9}, {
   3.7879190746218777`*^9, 3.787919077050315*^9}, 3.788005665286151*^9, 
   3.7880080430923986`*^9, 3.788010463468482*^9, 3.802197119160544*^9, 
   3.802467265043151*^9, 3.8025354265620193`*^9, 3.802630751901523*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"3ee532fc-0fbe-4315-8b16-da26d4a18616"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Integration", "Subsubsection",
 CellChangeTimes->{{3.788004398978957*^9, 
  3.78800440145164*^9}},ExpressionUUID->"5c3558da-9981-4f54-94a5-\
a5fb20bcad4b"],

Cell["\<\
Mathematica can handle both symbolic and numerical integration. For symbolic, \
can do indefinite or definite integration: \
\>", "Text",
 CellChangeTimes->{{3.788004404291163*^9, 3.788004413071705*^9}, {
  3.788004445156439*^9, 
  3.788004452653607*^9}},ExpressionUUID->"547049e1-bd1f-4fbc-b474-\
176bae9b0707"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ")"}], "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7880044144055157`*^9, 3.7880044431112127`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"4fd58e1d-1b62-4639-aab4-470fc8d3ba4c"],

Cell[BoxData[
 RowBox[{
  FractionBox["x", "2"], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.788004428818592*^9, 3.788004443598814*^9}, 
   3.7880081236613092`*^9, 3.788010463506558*^9, 3.802197128675102*^9, 
   3.802467265130289*^9, 3.8025354266853027`*^9, 3.802630752005599*^9},
 CellLabel->
  "Out[304]=",ExpressionUUID->"ee91a004-62a2-45f2-8835-3154024f5ade"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}], ")"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7880044570276613`*^9, 3.788004460504902*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"dc3c113c-5e19-4071-b0e4-b24e61114f3b"],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.788004460905452*^9, 3.7880081253290157`*^9, 
  3.7880104635556517`*^9, 3.8021971302114162`*^9, 3.8024672652004623`*^9, 
  3.8025354267335453`*^9, 3.8026307520908327`*^9},
 CellLabel->
  "Out[305]=",ExpressionUUID->"34337a7d-7dfb-414d-a87c-7a6b4ca9b248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Pi]", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78800446484021*^9, 3.788004496998104*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"f703f7d7-0163-4d4b-b59c-23955a84d064"],

Cell[BoxData[
 RowBox[{"-", "3.0788355260515177`"}]], "Output",
 CellChangeTimes->{3.788004497433875*^9, 3.788008127902589*^9, 
  3.788010463622116*^9, 3.802197132357031*^9, 3.802467265278598*^9, 
  3.802535426829071*^9, 3.8026307521611156`*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"84ce8dc0-b2cd-41e3-8c16-a29b44542242"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More advanced fun", "Section",
 CellChangeTimes->{{3.788015601951434*^9, 3.788015609206643*^9}, {
  3.788783075668782*^9, 3.788783080405587*^9}, {3.80219575428262*^9, 
  3.8021957573178453`*^9}},ExpressionUUID->"a96ff8aa-f7d3-4480-84a1-\
ba4167c6f205"],

Cell[CellGroupData[{

Cell["Pattern Matching", "Subsection",
 CellChangeTimes->{{3.7887031627906322`*^9, 3.7887031720174217`*^9}, {
  3.788704266809535*^9, 3.78870427175947*^9}, {3.788782749911278*^9, 
  3.788782752151359*^9}},ExpressionUUID->"6fdcff3d-62e9-4133-b004-\
cce7d7bce6ae"],

Cell[CellGroupData[{

Cell["Rules and Basic Pattern Recognition", "Subsubsection",
 CellChangeTimes->{{3.7887827541424294`*^9, 3.788782760313772*^9}, {
  3.802197158748385*^9, 
  3.8021971608016872`*^9}},ExpressionUUID->"13d691fb-a48e-4e56-88b3-\
229773c508f5"],

Cell["\<\
Mathematica is very good at this!! You can use rules to do all manner of \
things. The simplest thing we\[CloseCurlyQuote]ve already covered is just \
evaluating an expression: \
\>", "Text",
 CellChangeTimes->{{3.7887037182570477`*^9, 
  3.788703753692789*^9}},ExpressionUUID->"16b806fe-cccb-45e6-96b8-\
64ffebf1b5c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"c", "+", " ", "2"}], ")"}], "/.", 
  RowBox[{"c", "\[Rule]", " ", "5"}]}]], "Input",
 CellChangeTimes->{{3.7887037551588783`*^9, 3.788703759318918*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"379433b0-2b73-409a-83a5-8e9470e2573f"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.788703759703206*^9, 3.8021971666662416`*^9, 
  3.802467265290051*^9, 3.802535426861349*^9, 3.802630752171566*^9},
 CellLabel->
  "Out[307]=",ExpressionUUID->"db6f6a64-3a9b-440f-88c1-fc030ac2fe68"]
}, Open  ]],

Cell["\<\
But we can also use them to do more complicated things. \
Let\[CloseCurlyQuote]s say we have objects with two arguments: \
\>", "Text",
 CellChangeTimes->{{3.7887037632120667`*^9, 3.7887038245126553`*^9}, {
  3.788703857664403*^9, 
  3.7887038600252533`*^9}},ExpressionUUID->"b44a9458-5efe-4bb0-8662-\
4b2c06f1ea7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"someObjects", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"r", "[", 
      RowBox[{"12", ",", "c"}], "]"}], ",", 
     RowBox[{"r", "[", 
      RowBox[{"a", ",", 
       RowBox[{"9", "b"}]}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788703826647479*^9, 3.788703841097149*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"156b81d0-c7b1-45d7-86e6-4fe54c60923c"],

Cell["\<\
And we want them to only have one argument instead by putting the arguments \
into a single list object. Try this: \
\>", "Text",
 CellChangeTimes->{{3.788703844512875*^9, 
  3.78870388132976*^9}},ExpressionUUID->"0e0e8335-5a04-48e7-af28-\
4d5df3dcafd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"someObjects", "/.", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"r", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788703882678997*^9, 3.78870389565769*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"6a096699-6755-471c-9f85-d8a4a6fed458"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"{", 
     RowBox[{"12", ",", "c"}], "}"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"9", " ", "b"}]}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7887038936666*^9, 3.788703896062439*^9}, 
   3.802197522965081*^9, 3.802467265366962*^9, 3.802535426919305*^9, 
   3.8026307522106752`*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"24b3395f-0b6b-47c4-b44b-a7f52b15df73"]
}, Open  ]],

Cell["\<\
The underscores after a_ and b_ denote that they can be anything, but in \
r[a_,b_], the header must really be \[OpenCurlyQuote]r\[CloseCurlyQuote], so \
this doesn\[CloseCurlyQuote]t work: \
\>", "Text",
 CellChangeTimes->{{3.7887041219079313`*^9, 
  3.788704165739345*^9}},ExpressionUUID->"5e4655ef-1da3-469e-8f64-\
ac33c98470ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"1", ",", "4"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"r", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788704151399585*^9, 3.788704157724991*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"5f91cae5-206a-4e46-870f-5fbcea057669"],

Cell[BoxData[
 RowBox[{"c", "[", 
  RowBox[{"1", ",", "4"}], "]"}]], "Output",
 CellChangeTimes->{3.788704158168988*^9, 3.802197529067772*^9, 
  3.802467265432819*^9, 3.802535426956387*^9, 3.802630752245439*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"7edcb9ca-067d-475f-b560-91f979e343a3"]
}, Open  ]],

Cell["\<\
This syntax looks for precisely two arguments, so the following has no \
effect: \
\>", "Text",
 CellChangeTimes->{{3.788703897986671*^9, 
  3.788703922736546*^9}},ExpressionUUID->"dfd6b6be-63a7-47fd-8110-\
d289c88dd90f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"1", ",", "3", ",", "2"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"r", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.78870391236517*^9, 3.788703917884223*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"1acb8f2b-8514-450a-a164-00567889e075"],

Cell[BoxData[
 RowBox[{"r", "[", 
  RowBox[{"1", ",", "3", ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{3.788703918206957*^9, 3.802197532991881*^9, 
  3.80246726574693*^9, 3.802535426979672*^9, 3.802630752260172*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"4b852f50-aade-402d-b530-8290be5a461f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["More Pattern Stuff", "Subsubsection",
 CellChangeTimes->{{3.788782764172044*^9, 3.788782769680737*^9}, {
  3.788782821282434*^9, 
  3.7887828296032143`*^9}},ExpressionUUID->"cee62f91-189f-4672-aa86-\
5b90c3e036e7"],

Cell["\<\
Three underscores after the pattern argument, like a___, looks for any number \
of arguments, including zero (two underscores looks for any non-zero number \
of arguments, as we\[CloseCurlyQuote]ll see below). The following rule \
converts the arguments to a list, regardless of the number of arguments. \
\>", "Text",
 CellChangeTimes->{{3.78870404197138*^9, 3.788704114085334*^9}, {
  3.8021975458550673`*^9, 
  3.802197548181973*^9}},ExpressionUUID->"ec39df82-ec45-4b07-884e-\
a91469633b4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"1", ",", "3", ",", "2"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", "a___", "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"{", "a", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.788703985838647*^9, 3.78870400028331*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"5c908926-6971-4a65-8591-3c108d3b45de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.788703996247085*^9, 3.7887040008080263`*^9}, 
   3.788704094856789*^9, 3.802197551409355*^9, 3.802467265759285*^9, 
   3.8025354270467854`*^9, 3.8026307522891083`*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"6bfe0a65-7736-4b19-80ed-c5cb69eb49e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"1", ",", "a"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", "a___", "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"{", "a", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.788704100695718*^9, 3.788704106143249*^9}},
 CellLabel->
  "In[313]:=",ExpressionUUID->"7bfefafc-953d-44a8-8d20-aa69addd7ea0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.788704106547467*^9, 3.80219755400694*^9, 
  3.80246726582463*^9, 3.802535427084793*^9, 3.802630752298654*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"5b8d8b98-1a4b-4e19-9ed8-f8d9fdb92262"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"1", ",", "3", ",", "2"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", "a___", "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"{", "a", "}"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "counts", " ", "the", " ", "number", " ", "of", " ", "arguments"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.788704180462495*^9, 3.788704220763323*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"c230a7b7-f821-48b1-9414-6117000ef672"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.788704197186145*^9, 3.788704221152204*^9}, 
   3.802197559181045*^9, 3.802467265840126*^9, 3.802535427119693*^9, 
   3.802630752329587*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"c60a2171-b87c-42df-84d7-1741e9e9fd3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "1", "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", "a___", "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"{", "a", "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788704212166176*^9, 3.7887042225657873`*^9}, 
   3.788704255289095*^9},
 CellLabel->
  "In[315]:=",ExpressionUUID->"f50f901e-319f-4128-acdc-6674fe7b1e68"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.7887042131389112`*^9, 3.788704222954468*^9}, 
   3.7887042556344852`*^9, 3.802197563018653*^9, 3.802467265906168*^9, 
   3.80253542715767*^9, 3.802630752340355*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"721543ae-07a3-45db-95f7-c0eb3ab13658"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", "a___", "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"{", "a", "}"}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.788704215872386*^9, 3.788704252401424*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"2a80dcea-262d-40ac-b414-5968dc8a2479"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.788704216288876*^9, 3.788704253141005*^9}, 
   3.8021975648987513`*^9, 3.8024672659999*^9, 3.802535427192852*^9, 
   3.802630752370199*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"8e10f0f4-8837-4e4b-889b-80fe522d3afe"]
}, Open  ]],

Cell["\<\
Two underscores behaves the same unless there are no arguments: \
\>", "Text",
 CellChangeTimes->{{3.7887042272542467`*^9, 
  3.788704241154385*^9}},ExpressionUUID->"27259c6f-62f0-4ac6-b2d2-\
dc4c03b1d238"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"1", ",", "3", ",", "2"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", "a__", "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"{", "a", "}"}]}]}]], "Input",
 CellChangeTimes->{3.788704017272406*^9},
 CellLabel->
  "In[317]:=",ExpressionUUID->"08dfbb34-7df3-44ca-9b98-dc70aba09585"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.788704017665297*^9, 3.7887042426720457`*^9, 
  3.80219757553671*^9, 3.80246726609188*^9, 3.802535427206284*^9, 
  3.8026307523807573`*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"06cd3499-8140-43d7-b88e-8cebfe445b2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "]"}], "/.", 
  RowBox[{
   RowBox[{"r", "[", "a__", "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"{", "a", "}"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"no", " ", "effect"}], "*)"}], " "}]}]], "Input",
 CellChangeTimes->{{3.788704022854897*^9, 3.788704032579547*^9}, {
  3.788704246635641*^9, 3.78870424977988*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"12d16606-2c70-40f5-8fb2-e7f08d0e7c3b"],

Cell[BoxData[
 RowBox[{"r", "[", "]"}]], "Output",
 CellChangeTimes->{{3.7887040236859426`*^9, 3.788704032972434*^9}, 
   3.788704244440382*^9, 3.802197578889612*^9, 3.802467266113936*^9, 
   3.8025354272431297`*^9, 3.802630752412092*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"0ae5b1c6-b384-4efc-bcbd-f5f00465aa5a"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions are Flexible ", "Subsection",
 CellChangeTimes->{{3.788023857179392*^9, 3.7880238653448973`*^9}, {
  3.788721946976797*^9, 3.788721950970242*^9}, {3.788782620888406*^9, 
  3.788782628523446*^9}, {3.788782668271098*^9, 
  3.788782678187297*^9}},ExpressionUUID->"d17c41e2-ae53-4410-a1a4-\
3d49cf45996c"],

Cell[CellGroupData[{

Cell["Pure Functions", "Subsubsection",
 CellChangeTimes->{{3.788015616126898*^9, 
  3.788015618363234*^9}},ExpressionUUID->"fccfceec-621e-4054-a15b-\
81e3e242248e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"a", "/@", 
   RowBox[{"Range", "@", "5"}]}]}]], "Input",
 CellChangeTimes->{{3.7887027608690987`*^9, 3.78870277180795*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"42cf8c96-ed9a-41f7-8b6e-61f01ea0b38e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], ",", 
   RowBox[{"a", "[", "2", "]"}], ",", 
   RowBox[{"a", "[", "3", "]"}], ",", 
   RowBox[{"a", "[", "4", "]"}], ",", 
   RowBox[{"a", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.788702769402472*^9, 3.788702772236361*^9}, 
   3.788782683615984*^9, 3.802197588905488*^9, 3.8024672661816*^9, 
   3.802535427258548*^9, 3.802630752427183*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"999e8a3b-5e9b-4bbd-9c18-b15665e143a5"]
}, Open  ]],

Cell["\<\
Here\[CloseCurlyQuote]s pure function syntax at its most basic, just printing \
a list out: \
\>", "Text",
 CellChangeTimes->{{3.788702745805683*^9, 3.788702773586156*^9}, {
  3.78870281363625*^9, 3.788702824638748*^9}, {3.80219759678968*^9, 
  3.8021975990193*^9}},ExpressionUUID->"ebbde358-e7ec-4245-aae3-2a45e4eaafc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"#", "&"}], "/@", "list"}]], "Input",
 CellChangeTimes->{{3.788702754105061*^9, 3.788702756386098*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"68d1804f-03b0-475f-8c76-b2d71f56b068"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], ",", 
   RowBox[{"a", "[", "2", "]"}], ",", 
   RowBox[{"a", "[", "3", "]"}], ",", 
   RowBox[{"a", "[", "4", "]"}], ",", 
   RowBox[{"a", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.788702775155291*^9, 3.7887826847991047`*^9, 
  3.802197606376927*^9, 3.802467266199341*^9, 3.802535427297112*^9, 
  3.802630752457636*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"ebf04ce0-d190-48e0-874b-8c3e405cd42d"]
}, Open  ]],

Cell["\<\
# represents an element of the list, and &/@ tells it to run through all the \
elements # in \[OpenCurlyDoubleQuote]list.\[CloseCurlyDoubleQuote] Let\
\[CloseCurlyQuote]s say we wanted to get just the indices of this list: \
\>", "Text",
 CellChangeTimes->{{3.788702782277569*^9, 
  3.78870285707791*^9}},ExpressionUUID->"5996a802-21e9-4ce8-8fe8-\
930f623ecc7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"First", "@", "#"}], "&"}], "/@", "list"}]], "Input",
 CellChangeTimes->{{3.7887028613388243`*^9, 3.788702862165287*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"e3f91a77-5a8a-47ae-92fa-3131a47c2181"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.788702862636042*^9, 3.788782686085335*^9, 
  3.80219761379567*^9, 3.802467266265539*^9, 3.802535427320202*^9, 
  3.80263075246845*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"16472463-a5ff-4a60-a0e0-2b5139737617"]
}, Open  ]],

Cell["Or just the headers: ", "Text",
 CellChangeTimes->{{3.788702865593293*^9, 
  3.788702867787074*^9}},ExpressionUUID->"26631702-9d81-4813-9a71-\
14f27fc6c420"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Head", "@", "#"}], "&"}], "/@", "list"}]], "Input",
 CellChangeTimes->{{3.788702870007615*^9, 3.788702871384845*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"9e785dd8-e84c-4872-b98c-be6a2f605d57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.788702871880805*^9, 3.7887826873927517`*^9, 
  3.802197616462323*^9, 3.802467266291773*^9, 3.8025354273618307`*^9, 
  3.802630752500986*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"8fdb9bd0-9a7e-46c8-9493-62588af1704e"]
}, Open  ]],

Cell[TextData[{
 "Of course, we could\[CloseCurlyQuote]ve done this all without pure \
functions, so let\[CloseCurlyQuote]s try a slightly more interesting example. \
Let\[CloseCurlyQuote]s say we have a whole list of coefficients that should \
all equal zero. As an example, let\[CloseCurlyQuote]s consider the vector \
equation: \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["v", "\[RightVector]"], " ", "+", " ", 
     OverscriptBox["w", "\[RightVector]"]}], " ", "=", " ", 
    OverscriptBox["0", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "3dad026a-8f3a-48cc-bc2a-898c18775ceb"]
}], "Text",
 CellChangeTimes->{{3.788702891424542*^9, 3.788703031143937*^9}, {
  3.802197683943656*^9, 
  3.802197698392421*^9}},ExpressionUUID->"619d85fe-8352-41cc-83a2-\
d8099ae2fb90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vVector", " ", "=", " ", 
  RowBox[{"v", "/@", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.788703032621336*^9, 3.788703041611767*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"a6053b3b-160e-4d1c-810d-2e10f5acd220"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"v", "[", "x", "]"}], ",", 
   RowBox[{"v", "[", "y", "]"}], ",", 
   RowBox[{"v", "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7887030419442453`*^9, 3.788782689100268*^9, 
  3.802197642339573*^9, 3.802467266355134*^9, 3.802535427379931*^9, 
  3.802630752518958*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"d5694e44-4216-4806-9b75-adcbb84822af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wVector", " ", "=", 
  RowBox[{"vVector", "/.", 
   RowBox[{
    RowBox[{"v", "[", "a_", "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"w", "[", "a", "]"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.788703046217959*^9, 3.788703067420622*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"68ce5639-05d0-44b9-b72d-b005cf9a4535"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"w", "[", "x", "]"}], ",", 
   RowBox[{"w", "[", "y", "]"}], ",", 
   RowBox[{"w", "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.788703048310947*^9, 3.788703065258939*^9}, 
   3.7887826903600483`*^9, 3.802197644247341*^9, 3.802467266369369*^9, 
   3.8025354274149723`*^9, 3.80263075256279*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"e64db9bd-98d5-4a6a-912b-f5ca0ebe32b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"total", " ", "=", " ", 
  RowBox[{"vVector", "+", "wVector"}]}]], "Input",
 CellChangeTimes->{{3.7887030988565407`*^9, 3.7887031039785023`*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"41eb4ea4-54aa-4699-b31c-2e009adca2be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "[", "x", "]"}], "+", 
    RowBox[{"w", "[", "x", "]"}]}], ",", 
   RowBox[{
    RowBox[{"v", "[", "y", "]"}], "+", 
    RowBox[{"w", "[", "y", "]"}]}], ",", 
   RowBox[{
    RowBox[{"v", "[", "z", "]"}], "+", 
    RowBox[{"w", "[", "z", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.788703104301969*^9, 3.7887826919230413`*^9, 
  3.802197647960676*^9, 3.8024672664295073`*^9, 3.802535427497209*^9, 
  3.802630752586567*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"44ba27e8-4e2a-4d5f-a1d3-a3df44c10e19"]
}, Open  ]],

Cell["\<\
To set up a system of equations to solve for total being the zero vector, let\
\[CloseCurlyQuote]s use pure function notation to grab each element/component \
of total, then set it equal to zero: \
\>", "Text",
 CellChangeTimes->{{3.788703108591909*^9, 3.788703130247398*^9}, {
  3.802197660644307*^9, 
  3.802197673665186*^9}},ExpressionUUID->"e7233c33-2d1e-47c4-baa7-\
f8e6b07f5bfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "\[Equal]", "0"}], " ", "&"}], "/@", "total"}]], "Input",
 CellChangeTimes->{{3.788703132776668*^9, 3.788703137953923*^9}, {
  3.7887046861982307`*^9, 3.7887046869389143`*^9}, {3.8021976557703943`*^9, 
  3.802197656307201*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"a73f2867-86af-42d9-8457-1f6634ef915b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", "x", "]"}], "+", 
     RowBox[{"w", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", "y", "]"}], "+", 
     RowBox[{"w", "[", "y", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", "z", "]"}], "+", 
     RowBox[{"w", "[", "z", "]"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7887031384236*^9, 3.78870468749762*^9, 
  3.788782694542453*^9, 3.802197675759272*^9, 3.8024672664493427`*^9, 
  3.802535427532072*^9, 3.802630752637453*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"93ed2948-9e43-410c-b0df-3b175cab712a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Map", "Subsubsection",
 CellChangeTimes->{{3.788782632279099*^9, 
  3.7887826324928827`*^9}},ExpressionUUID->"c7b387dc-e284-421d-9272-\
f3af5c78ded6"],

Cell["\<\
I\[CloseCurlyQuote]ve actually been using Map, or \[OpenCurlyQuote]/@\
\[CloseCurlyQuote] a lot already. Just allows you to apply a function to each \
element of a list individually, rather than to the whole list (which is what \
@ would do) \
\>", "Text",
 CellChangeTimes->{{3.788719819848714*^9, 
  3.7887198802160254`*^9}},ExpressionUUID->"a5cb0053-83e7-4c5c-a3f8-\
96e183d328f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"functionName", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"element1", ",", "element2", ",", "element3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.788719842486912*^9, 3.788719854443288*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"fb1f22b0-b0a4-4602-a21c-051089507003"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"functionName", "[", "element1", "]"}], ",", 
   RowBox[{"functionName", "[", "element2", "]"}], ",", 
   RowBox[{"functionName", "[", "element3", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.788719855166572*^9, 3.802197712689804*^9, 
  3.802467266539653*^9, 3.8025354275503902`*^9, 3.8026307526525593`*^9},
 CellLabel->
  "Out[327]=",ExpressionUUID->"8152d6fe-3174-48c6-a0c3-ce81ce8ffa25"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.8021977229610233`*^9, 3.802197724394498*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"9abd706f-9584-4b8e-b5b4-35153fdd2551"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788782854859048*^9, 3.788782860195112*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"660752a1-4af8-4214-8d52-eefa9bb5c0ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.78878286070078*^9, 3.8021977269500523`*^9, 
  3.802467266608632*^9, 3.802535427618252*^9, 3.8026307526951227`*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"2bfccea0-01ae-45d9-bc7d-9dadd6723463"]
}, Open  ]],

Cell["\<\
You don\[CloseCurlyQuote]t need to actually have a defined function, so it\
\[CloseCurlyQuote]s a nice way to label things: \
\>", "Text",
 CellChangeTimes->{{3.788719893557007*^9, 
  3.7887199149047537`*^9}},ExpressionUUID->"c243bc2e-5328-4077-ba44-\
b69dc4bdbbe8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "/@", 
  RowBox[{"Range", "@", "4"}]}]], "Input",
 CellChangeTimes->{{3.788719882680459*^9, 3.788719886690589*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"eb839742-7514-43a2-af0d-d362c9acbe6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k", "[", "1", "]"}], ",", 
   RowBox[{"k", "[", "2", "]"}], ",", 
   RowBox[{"k", "[", "3", "]"}], ",", 
   RowBox[{"k", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.788719887187105*^9, 3.802197737204011*^9, 
  3.802467266625133*^9, 3.802535427651902*^9, 3.802630752737733*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"aafe3db7-4396-4371-8dab-8d4b62e50ed3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Thread", "Subsubsection",
 CellChangeTimes->{{3.788782636498213*^9, 
  3.788782637111485*^9}},ExpressionUUID->"878230c0-7aeb-42f3-8598-\
3da5f2060eff"],

Cell["Thread does this: ", "Text",
 CellChangeTimes->{{3.788719563509995*^9, 
  3.788719569058526*^9}},ExpressionUUID->"5146c925-4fa3-4357-8c8a-\
3a53e1e73fb3"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.802197765192788*^9, 3.8021977685688963`*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"0f14e8a8-7e21-4647-8d5a-2c50b6a386ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788719571164804*^9, 3.788719598509968*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"e67c80df-f6bc-4e1d-8f6f-912d7ce02c31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "1"}], ",", 
   RowBox[{"y", "\[Rule]", "2"}], ",", 
   RowBox[{"z", "\[Rule]", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.78871958251411*^9, 3.788719599018306*^9}, 
   3.802197770625224*^9, 3.802467266702387*^9, 3.802535427717136*^9, 
   3.802630752783044*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"58c29e3f-b939-4859-ad97-67f8a933d76c"]
}, Open  ]],

Cell["\<\
I find this super useful when trying to run over a bunch of permutations: \
\>", "Text",
 CellChangeTimes->{{3.7887196058562527`*^9, 3.7887196129468946`*^9}, {
  3.802197774848145*^9, 
  3.8021977911250057`*^9}},ExpressionUUID->"8309579f-bfc9-4c68-be11-\
7d29b0a9512f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"perms3", " ", "=", " ", 
  RowBox[{"Permutations", "[", 
   RowBox[{"k", "/@", 
    RowBox[{"Range", "@", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7887196142151213`*^9, 3.788719621703615*^9}, {
  3.8021977999969482`*^9, 3.802197805624833*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"b0c8f392-4577-4788-a791-70c471635111"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], ",", 
     RowBox[{"k", "[", "2", "]"}], ",", 
     RowBox[{"k", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], ",", 
     RowBox[{"k", "[", "3", "]"}], ",", 
     RowBox[{"k", "[", "2", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], ",", 
     RowBox[{"k", "[", "1", "]"}], ",", 
     RowBox[{"k", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "[", "2", "]"}], ",", 
     RowBox[{"k", "[", "3", "]"}], ",", 
     RowBox[{"k", "[", "1", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], ",", 
     RowBox[{"k", "[", "1", "]"}], ",", 
     RowBox[{"k", "[", "2", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "[", "3", "]"}], ",", 
     RowBox[{"k", "[", "2", "]"}], ",", 
     RowBox[{"k", "[", "1", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.788719622034919*^9, {3.8021977930787697`*^9, 3.8021978061265917`*^9}, 
   3.802467266768056*^9, 3.802535427756752*^9, 3.80263075283595*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"575242cf-2d5e-4536-9884-064045051299"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allPossiblePermutationRules", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "/@", 
        RowBox[{"Range", "@", "3"}]}], ")"}], "\[Rule]", " ", "#"}], "]"}], 
    "&"}], "/@", "perms3"}]}]], "Input",
 CellChangeTimes->{{3.78871962542773*^9, 3.7887196610718203`*^9}, {
  3.802197808664399*^9, 3.8021978093211946`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"db8d3554-2cec-410d-9722-e6d9bc120110"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "1", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "3", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "1", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "2", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "1", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "3", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "1", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "1", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "2", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", "3", "]"}], "\[Rule]", 
      RowBox[{"k", "[", "1", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.78871963946539*^9, 3.788719661633613*^9}, 
   3.8021978105922613`*^9, 3.802467266792061*^9, 3.802535427784831*^9, 
   3.8026307528488817`*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"3512af32-a081-4682-82a3-323c59ee2b65"]
}, Open  ]],

Cell["\<\
So now we have a list of lists of rules, with each set of rules permuting the \
k labels in a given way. \
\>", "Text",
 CellChangeTimes->{{3.802197813792144*^9, 
  3.802197837788292*^9}},ExpressionUUID->"c36f5973-546d-4ce5-9c83-\
0e9f61c83317"]
}, Closed]],

Cell[CellGroupData[{

Cell["Apply", "Subsubsection",
 CellChangeTimes->{{3.788782640090119*^9, 
  3.788782640598011*^9}},ExpressionUUID->"428b4738-2195-4f11-b650-\
83db1f016d5c"],

Cell["\<\
Apply (@@) replaces the head of an expression with something else: \
\>", "Text",
 CellChangeTimes->{{3.788720088442472*^9, 
  3.788720105766177*^9}},ExpressionUUID->"77f4ae81-2652-4bae-a52d-\
f333641d101a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"New", "@@", 
  RowBox[{"Old", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.78872010800791*^9, 3.7887201113327217`*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"c001dea7-106e-46d3-9c7a-0e5302b85084"],

Cell[BoxData[
 RowBox[{"New", "[", "a", "]"}]], "Output",
 CellChangeTimes->{3.7887201118479*^9, 3.802197843795857*^9, 
  3.802467266853478*^9, 3.802535427823015*^9, 3.802630752883059*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"2f32243a-e622-4504-b6ec-d23ffa062e7e"]
}, Open  ]],

Cell["\<\
This is useful in conjunction with the knowledge that Mathematica stores even \
the most basic expressions as a header and arguments. We can always see how \
Mathematica thinks about an expression by using FullForm: \
\>", "Text",
 CellChangeTimes->{{3.788720116901594*^9, 3.7887201747944527`*^9}, {
  3.788721504667563*^9, 3.788721510435671*^9}, {3.80219785180138*^9, 
  3.8021978970059977`*^9}, {3.80253753741831*^9, 
  3.802537537717823*^9}},ExpressionUUID->"114ca46a-d417-4672-8cb0-\
6f4d97db49ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "+", " ", "b", "+", "c"}], ")"}], " ", "//", 
  "FullForm"}]], "Input",
 CellChangeTimes->{{3.788720176100677*^9, 3.788720188727734*^9}, {
  3.788721512918849*^9, 3.788721513888713*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"ada4a554-70f9-4ba5-9295-ea91697d3762"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.7887201789701643`*^9, 3.788720189131878*^9}, 
   3.7887215145478497`*^9, 3.8021978572434797`*^9, 3.802467266873809*^9, 
   3.802535427857003*^9, 3.80263075289613*^9},
 CellLabel->
  "Out[336]//FullForm=",ExpressionUUID->"b1ea37cb-de53-42d8-9be3-\
71c30e4be022"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "*", 
   RowBox[{"b", "/", "c"}]}], " ", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.802197906941453*^9, 3.802197911294394*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"90a850f3-a346-4a96-bfb5-9d9374304ffd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{"a", ",", "b", ",", 
     RowBox[{"Power", "[", 
      RowBox[{"c", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.802197911736208*^9, 3.8024672669420853`*^9, 
  3.802535427895658*^9, 3.8026307529341908`*^9},
 CellLabel->
  "Out[337]//FullForm=",ExpressionUUID->"350fb06d-3dc1-4f9d-9568-\
f84ba10c37ad"]
}, Open  ]],

Cell["\<\
So, for a+b+c , if we wanted a list of these things instead of the sum of \
them, we could simply tell Mathematica to change Plus to List: \
\>", "Text",
 CellChangeTimes->{{3.788721523663968*^9, 3.78872153145793*^9}, {
  3.802197918398066*^9, 3.802197932737537*^9}, {3.802537550977107*^9, 
  3.80253756165199*^9}},ExpressionUUID->"63894c2c-acc1-4540-9184-\
c1ff8feb66d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   StyleBox[
    RowBox[{"Plus", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm], "/.", 
  RowBox[{"Plus", "\[Rule]", "  ", "List"}]}]], "Input",
 CellChangeTimes->{{3.788721521711945*^9, 3.78872153742593*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"085c2702-f0b3-490b-a77b-158f12b9d998"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{{3.7887215351436167`*^9, 3.7887215379195766`*^9}, 
   3.802197946429946*^9, 3.802467266956729*^9, 3.8025354279276323`*^9, 
   3.802630752944441*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"eb025961-541d-47f6-94c6-ac19ff83a367"]
}, Open  ]],

Cell["But we can also achieve this more neatly use apply: ", "Text",
 CellChangeTimes->{{3.788721540114503*^9, 3.788721546280295*^9}, {
  3.80219793496341*^9, 
  3.802197939307187*^9}},ExpressionUUID->"5b971999-bbfe-4624-ab41-\
2026c3d692ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", 
  TagBox[
   StyleBox[
    RowBox[{"Plus", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True],
   FullForm]}]], "Input",
 CellChangeTimes->{{3.78872154810879*^9, 3.788721550103043*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"0976f3a5-f4cf-42d6-baae-05cf9bc730bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.788721550874572*^9, 3.802197953514586*^9, 
  3.802467267019002*^9, 3.802535427966474*^9, 3.8026307529750843`*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"0b94ca05-fdc4-4027-ab29-063b29ffbcf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", 
  RowBox[{"(", 
   RowBox[{"a", "+", "b", "+", "c"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7887215526261253`*^9, 3.7887215560755568`*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"4f59e865-64bd-4e5f-8247-09e4a526dd8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.788721556596695*^9, 3.802197980217451*^9, 
  3.802467267038329*^9, 3.802535427991425*^9, 3.802630752988359*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"49800244-f3d0-472e-80e2-0311ffd76050"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.788721557725977*^9, 3.78872157953321*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"12470b8a-3dda-479e-88e2-a723d8b75c8f"],

Cell[BoxData[
 RowBox[{"a", " ", "b", " ", "c"}]], "Output",
 CellChangeTimes->{{3.788721563205847*^9, 3.788721579928896*^9}, 
   3.8021979824916897`*^9, 3.8024672671011343`*^9, 3.80253542800914*^9, 
   3.8026307530197906`*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"9dc4ea4a-4bb4-486e-8ec6-b9da2f369c9d"]
}, Open  ]],

Cell["We can of course use apply with undefined functions: ", "Text",
 CellChangeTimes->{{3.802197985190324*^9, 
  3.802198009801236*^9}},ExpressionUUID->"0eff0fd8-efa7-41ae-ba2b-\
0f7595fea16f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dotProduct", "@@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.802198014817808*^9, 3.8021980205272617`*^9}},
 CellLabel->
  "In[342]:=",ExpressionUUID->"e6e59eaa-ff9d-43af-b67b-455e12e35bd4"],

Cell[BoxData[
 RowBox[{"dotProduct", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{3.8021980215375013`*^9, 3.80246726711969*^9, 
  3.802535428038402*^9, 3.802630753032261*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"44a1fe03-7cb7-4aa4-b3b0-f45104241cb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"note", " ", "this", " ", "is", " ", "different", " ", 
    RowBox[{"from", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"dotProduct", "@", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.802198035832972*^9, 3.802198049928067*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"f6fdf70f-67c3-4e43-ad09-9290a18fbd3d"],

Cell[BoxData[
 RowBox[{"dotProduct", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.802198050429069*^9, 3.802467267190977*^9, 
  3.802535428054236*^9, 3.802630753065696*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"4bc01bec-9bd4-4c06-be2c-cda655dc2b0c"]
}, Open  ]],

Cell["\<\
We can also use a variation of apply that affects each element in a list \
(@@@): \
\>", "Text",
 CellChangeTimes->{{3.802198061745858*^9, 3.802198095692107*^9}, {
  3.802198134061698*^9, 
  3.802198136352112*^9}},ExpressionUUID->"dbb35d2f-cfb7-4809-af90-\
005236f1be95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tryApply", "@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "+", "b"}], ",", 
    RowBox[{"c", "+", "d"}], ",", 
    RowBox[{"e", "+", "f"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.802198097759572*^9, 3.802198120261112*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"9f02cfd5-938b-4f24-95a5-0a38a6a24400"],

Cell[BoxData[
 RowBox[{"tryApply", "[", 
  RowBox[{
   RowBox[{"a", "+", "b"}], ",", 
   RowBox[{"c", "+", "d"}], ",", 
   RowBox[{"e", "+", "f"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8021981033613462`*^9, 3.802198120860029*^9}, 
   3.8024672672052*^9, 3.802535428088188*^9, 3.80263075307686*^9},
 CellLabel->
  "Out[344]=",ExpressionUUID->"f5fff3e8-5ebe-4b41-b92e-e8269eec7e32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tryApply", "@@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "+", "b"}], ",", 
    RowBox[{"c", "+", "d"}], ",", 
    RowBox[{"e", "+", "f"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8021981073692627`*^9, 3.8021981257465878`*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"553b12f4-7a5e-4e17-9c5d-caee2e38169a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"tryApply", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"tryApply", "[", 
    RowBox[{"c", ",", "d"}], "]"}], ",", 
   RowBox[{"tryApply", "[", 
    RowBox[{"e", ",", "f"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.802198108059629*^9, 3.8021981261774387`*^9}, 
   3.802467267275464*^9, 3.802535428103876*^9, 3.802630753111902*^9},
 CellLabel->
  "Out[345]=",ExpressionUUID->"2380365c-8d75-4b8b-bbc4-df051e3b3959"]
}, Open  ]],

Cell["\<\
Using @@@ tryApply replaces the head of each element of the list, which in \
this case was Plus: \
\>", "Text",
 CellChangeTimes->{{3.802198138568993*^9, 
  3.8021981819841013`*^9}},ExpressionUUID->"88270dbb-c4f6-4c14-b5a5-\
0ae6699f220a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "+", "b"}], ",", 
    RowBox[{"c", "+", "d"}], ",", 
    RowBox[{"e", "+", "f"}]}], "}"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.802198164031026*^9, 3.8021981676314096`*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"ad259187-7b50-42ae-83f9-afa5f4a044c1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"Plus", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"Plus", "[", 
      RowBox[{"c", ",", "d"}], "]"}], ",", 
     RowBox[{"Plus", "[", 
      RowBox[{"e", ",", "f"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.802198168010785*^9, 3.802467267295011*^9, 
  3.8025354281363697`*^9, 3.80263075312529*^9},
 CellLabel->
  "Out[346]//FullForm=",ExpressionUUID->"7aa48e72-76e1-494f-a85d-\
f69155d14fc0"]
}, Open  ]],

Cell["\<\
Whereas using @@ replaces the head of the list, List, with tryApply. \
\>", "Text",
 CellChangeTimes->{{3.802198172619981*^9, 
  3.802198200499384*^9}},ExpressionUUID->"2be62d52-0a99-4ec1-85d6-\
22ed065951d6"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constraining Expressions", "Subsection",
 CellChangeTimes->{{3.788015632163575*^9, 3.788015634972934*^9}, {
  3.788782595771627*^9, 
  3.7887826007515574`*^9}},ExpressionUUID->"7ce06caa-34f4-46c2-a01d-\
9f09e0aff774"],

Cell[CellGroupData[{

Cell["Coefficient Arrays", "Subsubsection",
 CellChangeTimes->{{3.788782602694553*^9, 
  3.788782604828511*^9}},ExpressionUUID->"d0576742-dfbb-4a22-a1ef-\
e05179dbb0bc"],

Cell["\<\
Coefficient arrays are nice for solving constraint equations. The basic idea \
is that they take some expression and some set of independent basis elements \
and find all combinations of coefficients appearing in front of independent \
combinations of basis elements. Here\[CloseCurlyQuote]s an example with a \
quartic polynomial in x and y: \
\>", "Text",
 CellChangeTimes->{{3.7887803287429256`*^9, 3.788780352239253*^9}, {
  3.7887804158220997`*^9, 3.788780454634213*^9}, {3.802198227091525*^9, 
  3.80219826548599*^9}},ExpressionUUID->"0a102fbc-e799-4321-9ce3-\
8be0f1a956d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"variables", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "*", 
     RowBox[{"Power", "[", 
      RowBox[{"y", ",", 
       RowBox[{"4", "-", "#"}]}], "]"}]}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "4"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788780200802863*^9, 3.788780239280451*^9}, {
  3.7887802943504744`*^9, 3.788780304825019*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"bf9adde4-8493-4251-83fb-97e43499bb7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["y", "4"], ",", 
   RowBox[{"x", " ", 
    SuperscriptBox["y", "3"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{
    SuperscriptBox["x", "3"], " ", "y"}], ",", 
   SuperscriptBox["x", "4"]}], "}"}]], "Output",
 CellChangeTimes->{{3.788780217845583*^9, 3.788780240264059*^9}, {
   3.788780298602251*^9, 3.7887803051872473`*^9}, 3.7887804604937763`*^9, 
   3.802198269502583*^9, 3.802467267370146*^9, 3.802535428173883*^9, 
   3.80263075316224*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"7682313f-bde4-413c-bacb-8e503f9502e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polynomial", " ", "=", "  ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "/@", 
     RowBox[{"Range", "@", 
      RowBox[{"Length", "@", "variables"}]}]}], ")"}], ".", 
   "variables"}]}]], "Input",
 CellChangeTimes->{{3.788780461522319*^9, 3.7887804729737663`*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"9e9a793d-0af9-4127-a448-5df3d84781d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "4"], " ", 
   RowBox[{"a", "[", "1", "]"}]}], "+", 
  RowBox[{"x", " ", 
   SuperscriptBox["y", "3"], " ", 
   RowBox[{"a", "[", "2", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "2"], " ", 
   RowBox[{"a", "[", "3", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "3"], " ", "y", " ", 
   RowBox[{"a", "[", "4", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "4"], " ", 
   RowBox[{"a", "[", "5", "]"}]}]}]], "Output",
 CellChangeTimes->{3.788780473525036*^9, 3.802198289510129*^9, 
  3.802467267386196*^9, 3.8025354281929007`*^9, 3.802630753176354*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"81e7c3e1-73d1-4eac-b3e7-4ec543ede654"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoefficientArrays", "[", 
  RowBox[{"polynomial", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788780482354446*^9, 3.7887804880845337`*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"ecb09a8e-7da5-4a26-a3c1-8ace83b76299"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}}}, {{0, 0}, {2, 1}}, {0, 1}], AspectRatio -> 1, 
               Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "2", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}}}, {{0, 0}, {2, 1}}, {0, 1}], AspectRatio -> 1, 
               Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "2", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {2}, 0, {1, {{0, 0}, {}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}}, {{0.235431, 0.32765, 0.833291}, {0.235431, 
                0.32765, 0.833291}}}, {{0, 0}, {2, 2}}, {0, 1}], AspectRatio -> 
               1, Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                0.833291}}, {{0.235431, 0.32765, 0.833291}, {0.235431, 
                0.32765, 0.833291}}}, {{0, 0}, {2, 2}}, {0, 1}], AspectRatio -> 
               1, Axes -> False, Frame -> False, FrameLabel -> {None, None}, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[Automatic, {2, 2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.3125`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"a", "[", "3", "]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"a", "[", "5", "]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"a", "[", "4", "]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"a", "[", "2", "]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
                    "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"a", "[", "1", "]"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {2, 2, 2, 2}, 0, {
     1, {{0, 4, 5}, {{1, 2, 2}, {1, 1, 1}, {1, 1, 2}, {2, 2, 2}, {2, 2, 
       2}}}, {$CellContext`a[3], $CellContext`a[5], $CellContext`a[
       4], $CellContext`a[2], $CellContext`a[1]}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.788780488721901*^9, 3.802198294218573*^9, 
  3.8024672675581512`*^9, 3.8025354283265667`*^9, 3.802630753374596*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"4ad24d4a-8463-4477-ad07-49b6a7a662b7"]
}, Open  ]],

Cell[TextData[{
 "Each \[OpenCurlyQuote]SpareArray\[CloseCurlyQuote] corresponds to a \
different total number of the basis elements \[OpenCurlyQuote]x\
\[CloseCurlyQuote] and \[OpenCurlyQuote]y\[CloseCurlyQuote] appearing in each \
term. Think of the first element just being the coefficient of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "0"], 
    SuperscriptBox["y", "0"]}], TraditionalForm]],ExpressionUUID->
  "6e50a236-c23f-438a-8729-ee8acd1a412b"],
 ", the second element a 1-by-2 matrix of the coefficients of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "1"], 
    SuperscriptBox["y", "0"], " ", "and", " ", 
    SuperscriptBox["x", "0"], 
    SuperscriptBox["y", "1"]}], TraditionalForm]],ExpressionUUID->
  "9a0700b3-402f-4430-a15d-0296af58d047"],
 ", then the next one is a 2-by-2 of quadratic terms ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], 
     SuperscriptBox["y", "0"]}], ",", " ", 
    RowBox[{
     SuperscriptBox["x", "1"], 
     SuperscriptBox["y", "1"]}], ",", " ", 
    RowBox[{
     SuperscriptBox["x", "0"], 
     SuperscriptBox["y", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "270fdc66-c8a9-4706-9e54-a4853aecb8d8"],
 ", etc. We only have quartic terms, so let\[CloseCurlyQuote]s grab the last \
one: "
}], "Text",
 CellChangeTimes->{{3.788780493892103*^9, 3.7887805369496803`*^9}, {
  3.788781161527424*^9, 3.788781311476009*^9}, {3.802537659727529*^9, 
  3.8025377034261312`*^9}},ExpressionUUID->"9cf76255-e234-402c-bd32-\
94abbd35f6c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Last", "@", 
   RowBox[{"CoefficientArrays", "[", 
    RowBox[{"polynomial", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788781269780567*^9, 3.788781315188374*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"f1561cb3-3a62-4230-a41c-26c12e2076e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "5", "]"}], ",", 
         RowBox[{"a", "[", "4", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"a", "[", "3", "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"a", "[", "2", "]"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"a", "[", "1", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.788781279622106*^9, 3.788781284795086*^9}, 
   3.7887813156210814`*^9, 3.8021983113664627`*^9, 3.8024672677130127`*^9, 
   3.802535428347513*^9, 3.802630753389555*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"0c01a722-6325-45f1-bfbb-8a5fef715a01"]
}, Open  ]],

Cell["\<\
This can be hard to read, so use the following syntax to see the elements: \
\>", "Text",
 CellChangeTimes->{{3.788781319767479*^9, 
  3.788781351157598*^9}},ExpressionUUID->"5fa77f71-cc3a-4772-9fce-\
4763f731eceb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "/@", 
  RowBox[{"ArrayRules", "@", 
   RowBox[{"Last", "@", 
    RowBox[{"CoefficientArrays", "[", 
     RowBox[{"polynomial", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.788781329291877*^9, 3.788781338199616*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"4d4dbdad-3309-4451-b990-b609401174e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", "3", "]"}], ",", 
   RowBox[{"a", "[", "5", "]"}], ",", 
   RowBox[{"a", "[", "4", "]"}], ",", 
   RowBox[{"a", "[", "2", "]"}], ",", 
   RowBox[{"a", "[", "1", "]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.788781338669599*^9, 3.80219831496596*^9, 
  3.802467267732313*^9, 3.802535428382523*^9, 3.802630753441587*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"9479d9ae-a0bb-4ce7-a959-c09a0c84aebd"]
}, Open  ]],

Cell["\<\
One nice application of CoefficientArrays is for when you\[CloseCurlyQuote]d \
like to constrain an expression. Let\[CloseCurlyQuote]s say we wanted our \
polynomial to be even under x \[Rule] \[Dash]x. This constraint is \
represented by: \
\>", "Text",
 CellChangeTimes->{{3.788781361094079*^9, 3.7887814073940077`*^9}, {
  3.802537720374218*^9, 
  3.802537725303232*^9}},ExpressionUUID->"441398a1-f9b8-4d92-b771-\
d28795002f5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"difference", " ", "=", 
  RowBox[{"polynomial", " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{"polynomial", "/.", 
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"-", "x"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.788780153716136*^9, 3.788780161213533*^9}, {
  3.78878027057484*^9, 3.788780271158011*^9}, {3.788780357686425*^9, 
  3.78878036875115*^9}, {3.788781416602585*^9, 3.78878142168091*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"ac924527-3a19-4b5e-8563-a1c94f6cafe9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x", " ", 
   SuperscriptBox["y", "3"], " ", 
   RowBox[{"a", "[", "2", "]"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "3"], " ", "y", " ", 
   RowBox[{"a", "[", "4", "]"}]}]}]], "Output",
 CellChangeTimes->{3.788780164057152*^9, 3.788780271747424*^9, 
  3.788780314866857*^9, 3.788780369199527*^9, 3.788781422148759*^9, 
  3.802198331240119*^9, 3.802467267799966*^9, 3.802535428406454*^9, 
  3.8026307535267572`*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"4cf0fefc-284a-4eb2-92aa-dab1a69046d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"difference", " ", "\[Equal]", " ", "0"}]], "Input",
 CellChangeTimes->{{3.788781424913446*^9, 3.7887814262979107`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"f77c7596-a6d6-4acb-9828-e7d4a3f651cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "x", " ", 
    SuperscriptBox["y", "3"], " ", 
    RowBox[{"a", "[", "2", "]"}]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["x", "3"], " ", "y", " ", 
    RowBox[{"a", "[", "4", "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7887814267769423`*^9, 3.802198333344837*^9, 
  3.8024672678260727`*^9, 3.8025354284373903`*^9, 3.802630753542783*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"57f0c2e2-0d08-4d6e-abcc-e204b3b3c4d5"]
}, Open  ]],

Cell["\<\
It\[CloseCurlyQuote]s obvious that the solution to this simple example is \
a[2] = a[4] = 0, but just letting Solve or Reduce go to town on this equation \
doesn\[CloseCurlyQuote]t give the desired results, since it doesn\
\[CloseCurlyQuote]t know that x and y are independent variables, so it gives \
a whole slew of nonsense solutions in addition to the one \
we\[CloseCurlyQuote]d like: \
\>", "Text",
 CellChangeTimes->{{3.788781433281148*^9, 3.7887814967375603`*^9}, {
  3.802198337932665*^9, 
  3.8021984053914757`*^9}},ExpressionUUID->"97e198aa-4988-4f19-a7f0-\
279d0b008ac7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"difference", " ", "\[Equal]", " ", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7887814731073437`*^9, 3.7887814796202917`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"3161ac64-bd31-429a-9075-698ce7a652c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "4", "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"a", "[", "2", "]"}], "\[Equal]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "4", "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "y", " ", 
          SqrtBox[
           RowBox[{"a", "[", "2", "]"}]]}], 
         SqrtBox[
          RowBox[{"a", "[", "4", "]"}]]]}]}], "||", 
      RowBox[{"x", "\[Equal]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "y", " ", 
         SqrtBox[
          RowBox[{"a", "[", "2", "]"}]]}], 
        SqrtBox[
         RowBox[{"a", "[", "4", "]"}]]]}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "4", "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"a", "[", "2", "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"y", "\[Equal]", "0"}]}], ")"}], "||", 
  RowBox[{"x", "\[Equal]", "0"}], "||", 
  RowBox[{"y", "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{3.788781480171417*^9, 3.802198397786252*^9, 
  3.802467267907892*^9, 3.80253542853463*^9, 3.802630753620879*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"afaab9ec-b497-4a3b-a2ff-c30b70c94af0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"difference", " ", "\[Equal]", " ", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.788781501195788*^9, 3.7887815016013737`*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"75716685-b52a-46b7-a479-23a122c23a97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", "4", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["y", "2"], " ", 
        RowBox[{"a", "[", "2", "]"}]}], 
       SuperscriptBox["x", "2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.788781501972515*^9, 3.802198407573303*^9, 
  3.8024672679971952`*^9, 3.802535428576228*^9, 3.802630753673579*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"792c4267-d0d0-4042-be97-f70fc747cc16"]
}, Open  ]],

Cell["\<\
Since we know the solution has to hold for any x and y, \
let\[CloseCurlyQuote]s use CoefficientArrays to get the coefficients of these \
independent x and y type terms: \
\>", "Text",
 CellChangeTimes->{{3.788781507411682*^9, 3.788781558988369*^9}, {
  3.8021984127877827`*^9, 
  3.8021984189408627`*^9}},ExpressionUUID->"06d7e8cb-168f-4553-9d0b-\
986dac658030"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "/@", 
  RowBox[{"ArrayRules", "@", 
   RowBox[{"Last", "@", 
    RowBox[{"CoefficientArrays", "[", 
     RowBox[{"difference", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.788780383753694*^9, 3.788780392073395*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"924fdd69-6d1c-4cc5-b048-783896233260"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"a", "[", "4", "]"}]}], ",", 
   RowBox[{"2", " ", 
    RowBox[{"a", "[", "2", "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.788780392400535*^9, 3.7887815469233027`*^9, 
  3.802198428197682*^9, 3.8024672680152273`*^9, 3.802535428607554*^9, 
  3.8026307536934137`*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"06cc4149-0adf-49c2-809d-d7cd0393ff84"]
}, Open  ]],

Cell["\<\
And set them each (since they accompany distinct independent basis elements) \
to zero: \
\>", "Text",
 CellChangeTimes->{{3.7887815603023567`*^9, 3.7887815627095118`*^9}, {
  3.8025377707534113`*^9, 
  3.802537778455765*^9}},ExpressionUUID->"4b46b084-d263-4bc2-b214-\
de0015f4138c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "\[Equal]", "0"}], " ", "&"}], "/@", " ", 
  RowBox[{"Last", "/@", 
   RowBox[{"ArrayRules", "@", 
    RowBox[{"Last", "@", 
     RowBox[{"CoefficientArrays", "[", 
      RowBox[{"difference", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.78878156411108*^9, 3.788781568753191*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"3ae69bd5-0af6-4f20-8b38-cea5c379809e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"a", "[", "4", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"a", "[", "2", "]"}]}], "\[Equal]", "0"}], ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.788781569103924*^9, 3.802198433277665*^9, 
  3.802467268080103*^9, 3.80253542864487*^9, 3.802630753739024*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"aec26962-27bd-46df-94f8-744adb80e574"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"makeEven", " ", "=", " ", 
  RowBox[{"ToRules", "@", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Equal]", "0"}], " ", "&"}], "/@", " ", 
     RowBox[{"Last", "/@", 
      RowBox[{"ArrayRules", "@", 
       RowBox[{"Last", "@", 
        RowBox[{"CoefficientArrays", "[", 
         RowBox[{"difference", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788781572492036*^9, 3.788781584134616*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"3b801998-fe30-4adb-8abb-dd828370703d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "4", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.788781577369145*^9, 3.7887815845080423`*^9}, 
   3.802198436575574*^9, 3.802467268105783*^9, 3.8025354286729097`*^9, 
   3.80263075375289*^9},
 CellLabel->
  "Out[358]=",ExpressionUUID->"db409654-00b5-40e8-b545-5da9f1cbccc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evenPolynomial", " ", "=", " ", 
  RowBox[{"polynomial", "/.", "makeEven"}]}]], "Input",
 CellChangeTimes->{{3.788781585634296*^9, 3.788781592160441*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"129a0378-da94-49b1-8a98-3cc428b7d2d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "4"], " ", 
   RowBox[{"a", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "2"], " ", 
   RowBox[{"a", "[", "3", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "4"], " ", 
   RowBox[{"a", "[", "5", "]"}]}]}]], "Output",
 CellChangeTimes->{3.788781592623321*^9, 3.802198438791107*^9, 
  3.802467268167634*^9, 3.8025354287083273`*^9, 3.802630753801304*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"6ce13c21-3f9e-48da-8a50-39bdcc95caa1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sow & Reap", "Subsubsection",
 CellChangeTimes->{{3.7880156266565523`*^9, 
  3.788015629586851*^9}},ExpressionUUID->"7eecff65-4d3b-44b1-834c-\
9c58a6f08170"],

Cell["\<\
Let\[CloseCurlyQuote]s say you have some expression full of coefficients \
a[i_], and you constrain the expression in some manner, and you want to know \
what coefficients a[i_] are left. There\[CloseCurlyQuote]s a nice way to do \
this! Continuing our polynomial example, let\[CloseCurlyQuote]s imagine for a \
moment this expression were really long and reading off the coefficients by \
eye would be really tedious. What Sow & Reap do here is look for the pattern \
a[some index], and every time they find that, add it to some list. The rest \
of the syntax just cleans up the output of reap to give a list of the unique \
coefficients a[i_]: \
\>", "Text",
 CellChangeTimes->{{3.7887800220698633`*^9, 3.788780087948773*^9}, {
  3.788780185841935*^9, 3.7887801949191008`*^9}, {3.78878024867419*^9, 
  3.788780266342825*^9}, {3.788781606602536*^9, 3.788781613809712*^9}, {
  3.788782487784397*^9, 
  3.788782588322418*^9}},ExpressionUUID->"cfa07b3b-38b2-4505-a875-\
87176c63994c"],

Cell[CellGroupData[{

Cell[BoxData["evenPolynomial"], "Input",
 CellChangeTimes->{{3.788780200802863*^9, 3.788780239280451*^9}, {
  3.7887802943504744`*^9, 3.788780304825019*^9}, {3.788781615470916*^9, 
  3.788781616319477*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"c213f39a-5ac8-4c5e-857d-35677b302f99"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "4"], " ", 
   RowBox[{"a", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "2"], " ", 
   RowBox[{"a", "[", "3", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "4"], " ", 
   RowBox[{"a", "[", "5", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.788780217845583*^9, 3.788780240264059*^9}, {
   3.788780298602251*^9, 3.7887803051872473`*^9}, 3.788781616686344*^9, 
   3.8021984645482397`*^9, 3.802467268189417*^9, 3.802535428739347*^9, 
   3.8026307538647757`*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"a3e6da45-54b2-4d34-8c1c-c8243b359d4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"remainingCoefficients", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"evenPolynomial", "/.", 
       RowBox[{
        RowBox[{"a", "[", "i_", "]"}], "\[RuleDelayed]", " ", 
        RowBox[{"Sow", "[", 
         RowBox[{"a", "[", "i", "]"}], "]"}]}]}], "//", "Reap"}], "//", 
     "Last"}], "//", "Flatten"}], "//", "Union"}]}]], "Input",
 CellChangeTimes->{{3.788781619492755*^9, 3.788781641791174*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"82cb9b6b-ec68-48fc-8f75-154ef708e3a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], ",", 
   RowBox[{"a", "[", "3", "]"}], ",", 
   RowBox[{"a", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.788781634418249*^9, 3.788781642184175*^9}, 
   3.802198466614909*^9, 3.8024672682565947`*^9, 3.802535428776759*^9, 
   3.802630753876457*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"64705dbe-0074-4308-a61e-dabbbcd78188"]
}, Open  ]],

Cell["thanks, sow & reap! ", "Text",
 CellChangeTimes->{{3.7887830108170147`*^9, 
  3.7887830165779753`*^9}},ExpressionUUID->"eb6ac2f9-938b-414e-ab90-\
f19460dfc652"],

Cell["Can also package this into a useful function: ", "Text",
 CellChangeTimes->{{3.80219846932892*^9, 
  3.802198487447639*^9}},ExpressionUUID->"a37e2eb7-611c-409f-b91f-\
dbdb4bac96a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractType", "[", 
   RowBox[{"data_", ",", "head_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"data", "/.", 
      RowBox[{
       RowBox[{"head", "[", "a___", "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"Sow", "@", 
        RowBox[{"head", "@", "a"}]}]}]}], "//", "Reap"}], "//", "Last"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.80219850396336*^9, 3.8021985361589527`*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"0e2a8fd0-f3ed-4de6-9c50-85f6cf566abc"],

Cell["\<\
And also introduce the notion of \[OpenCurlyQuote]infix\[CloseCurlyQuote] \
notation for applying a function: \
\>", "Text",
 CellChangeTimes->{{3.8021988103599663`*^9, 
  3.802198821352221*^9}},ExpressionUUID->"31c9ae49-8195-4200-b2ec-\
530f432e7322"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evenPolynomial", "~", "extractType", "~", "a"}]], "Input",
 CellChangeTimes->{{3.802198539210579*^9, 3.8021985428020353`*^9}, {
  3.802198738191992*^9, 3.802198742862514*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"22254c39-cdc7-4089-adbf-093409dff9e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], ",", 
   RowBox[{"a", "[", "3", "]"}], ",", 
   RowBox[{"a", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.802198543294364*^9, 3.802198743386166*^9, 
  3.8024672683316803`*^9, 3.802535428839944*^9, 3.802630753929841*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"43647d17-459b-4718-9eb7-dac95a3cc29f"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Amplitudes-y stuff", "Section",
 CellChangeTimes->{{3.802211715913684*^9, 
  3.802211732729452*^9}},ExpressionUUID->"33419824-5d85-40b1-9343-\
d52cdd5e56f6"],

Cell[CellGroupData[{

Cell["Useful for functional ansatze", "Subsection",
 CellChangeTimes->{{3.788783092026293*^9, 3.788783099505159*^9}, {
  3.802467135287838*^9, 
  3.802467139498663*^9}},ExpressionUUID->"618654b0-d885-4532-b330-\
a6ab5cc1df47"],

Cell[CellGroupData[{

Cell["Undefined Functions with Properties ", "Subsubsection",
 CellChangeTimes->{{3.7887831324421186`*^9, 3.788783136287437*^9}, {
  3.788874574678418*^9, 
  3.7888745818873787`*^9}},ExpressionUUID->"04d8c4d9-c436-4b89-8abb-\
d67860a6a116"],

Cell[TextData[{
 "You can use functions without defining them, as we\[CloseCurlyQuote]ve seen \
throughout. But even without defining a function, we can still assign it \
useful properties. Here\[CloseCurlyQuote]s an example I\[CloseCurlyQuote]ve \
stolen from JJ for unevaluted Lorentz dot products, ulp[a,b] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["a", "\[Mu]"], 
    SubscriptBox["b", "\[Mu]"]}], TraditionalForm]],ExpressionUUID->
  "e891f0ad-1081-4b15-aba1-93c0e10fe636"],
 ", which should be linear in both arguments and treat both arguments \
identically: "
}], "Text",
 CellChangeTimes->{{3.788783152001864*^9, 3.788783262059269*^9}, {
   3.802198861967325*^9, 3.802198868968532*^9}, {3.802538086540983*^9, 
   3.8025381000882463`*^9}, 
   3.8025382956358957`*^9},ExpressionUUID->"61e2a753-b9f2-488a-81b0-\
174564544a5a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ulp", "]"}], "=", 
   RowBox[{"{", "Orderless", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ulp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", "a_", ")"}]}], ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"ulp", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"ulp", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a_", " ", "+", " ", "b_"}], ")"}], ",", "c_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{
   RowBox[{"ulp", "[", 
    RowBox[{"a", ",", "c"}], "]"}], " ", "+", " ", 
   RowBox[{"ulp", "[", 
    RowBox[{"b", ",", "c"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"ulp", "[", 
   RowBox[{"a_", ",", 
    RowBox[{
     RowBox[{"(", "b_", ")"}], "*", 
     RowBox[{
      RowBox[{"(", "d_", ")"}], "?", "NumberQ"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"d", "*", 
   RowBox[{"ulp", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.788783222894702*^9, 3.7887832233259907`*^9}, {
  3.788783277208911*^9, 3.788783302631667*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"3475f36d-13fa-4dba-a9db-a81e2c2ed930"],

Cell["\<\
The first line tells you that ulp[a,b] = ulp[b,a], the second and fourth that \
a scalar multiple of a four vector argument to the function just factors out \
of the dot product, and the third one is the other property of linearity. \
This is quite useful notation to have when playing around with and relabeling \
amplitudes. We can see this in play: \
\>", "Text",
 CellChangeTimes->{{3.7887833077778378`*^9, 3.788783362840324*^9}, {
  3.788783400761476*^9, 3.788783441899375*^9}, {3.788783512609207*^9, 
  3.7887835212865133`*^9}, {3.802198920913225*^9, 3.802198922506186*^9}, {
  3.802198959456151*^9, 3.802198983768153*^9}, {3.802538323189196*^9, 
  3.8025383252685966`*^9}},ExpressionUUID->"2f2592fb-e888-4fee-9ddf-\
f4da9baae85a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ulp", "[", 
  RowBox[{"a", ",", 
   RowBox[{"2", "b"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80219896376696*^9, 3.802198965956336*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"7faab55e-3cf4-4fd3-9b0a-3e4a02973644"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"ulp", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}]], "Output",
 CellChangeTimes->{3.802198966463746*^9, 3.802467268403026*^9, 
  3.802535428872621*^9, 3.802630753989431*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"db0f58c0-d1fc-4dc6-a83a-ed18acaa8fe7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ulp", "[", 
   RowBox[{"a", ",", 
    RowBox[{"-", "b"}]}], "]"}], "+", 
  RowBox[{"ulp", "[", 
   RowBox[{"b", ",", "a"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8021989691279716`*^9, 3.802198977485776*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"1c68e229-7d6b-4877-a986-1091bfd63abd"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8021989778710413`*^9, 3.802467268417137*^9, 
  3.80253542890093*^9, 3.802630754032518*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"5afe4bae-dc2a-43ab-b95b-731c122f3f11"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluating Expressions", "Subsubsection",
 CellChangeTimes->{{3.802198928000255*^9, 3.802198945262374*^9}, {
  3.802199472223894*^9, 
  3.802199472447529*^9}},ExpressionUUID->"9490d2c4-5ad7-446c-831c-\
c9bc7b04b462"],

Cell["\<\
Let\[CloseCurlyQuote]s say you want to plug in some numbers to test for \
equivalence between two long, complicated expressions! (Particularly useful \
when you\[CloseCurlyQuote]re deep in the weeds with spinor helicity, and it \
seems like there\[CloseCurlyQuote]s infinitely many ways to write the same \
expression). Start by defining a function that actually evaluates a dot \
product between two four vectors (I\[CloseCurlyQuote]ll do this first \
symbolically, then numerically): \
\>", "Text",
 CellChangeTimes->{{3.802198924089903*^9, 3.802198925390051*^9}, {
  3.802198990003092*^9, 3.80219907067418*^9}, {3.802199133856407*^9, 
  3.802199143636744*^9}},ExpressionUUID->"45205dc8-0d12-48ab-b5a1-\
92702f2a7494"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lorentzDot", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"First", "@", "a"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"First", "@", "b"}], ")"}]}], " ", "-", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Rest", "@", "a"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"Rest", "@", "b"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.788874081463744*^9, 3.788874108259163*^9}, {
  3.802199078603074*^9, 3.802199094520362*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"0c4c7b2a-82d0-4c23-8b55-542dfa0ef9f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluate", " ", "=", " ", 
   RowBox[{
    RowBox[{"ulp", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"lorentzDot", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788874128360285*^9, 3.78887414132683*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"958c6d7b-ec54-4ff9-8258-29c13e44854d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", " ", "=", " ", 
  RowBox[{"ulp", "[", 
   RowBox[{
    RowBox[{"k", "/@", 
     RowBox[{"Range", "@", "4"}]}], ",", 
    RowBox[{"p", "/@", 
     RowBox[{"Range", "@", "4"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.788874142181377*^9, 3.788874178736425*^9}, 
   3.802199152148752*^9},
 CellLabel->
  "In[372]:=",ExpressionUUID->"a3608704-8fc5-40cb-b58d-5ffee89df0f9"],

Cell[BoxData[
 RowBox[{"ulp", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "[", "1", "]"}], ",", 
     RowBox[{"k", "[", "2", "]"}], ",", 
     RowBox[{"k", "[", "3", "]"}], ",", 
     RowBox[{"k", "[", "4", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", "1", "]"}], ",", 
     RowBox[{"p", "[", "2", "]"}], ",", 
     RowBox[{"p", "[", "3", "]"}], ",", 
     RowBox[{"p", "[", "4", "]"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.802199152523917*^9, 3.802467268498269*^9, 
  3.802535428958989*^9, 3.802630754099399*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"15dcf109-cb59-405b-83fc-3eebdcf9aac3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "/.", "evaluate"}]], "Input",
 CellChangeTimes->{{3.788874154363693*^9, 3.78887415585236*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"ce9feee5-742a-4c59-93bd-394bb4435b8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", "1", "]"}], " ", 
   RowBox[{"p", "[", "1", "]"}]}], "-", 
  RowBox[{
   RowBox[{"k", "[", "2", "]"}], " ", 
   RowBox[{"p", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"k", "[", "3", "]"}], " ", 
   RowBox[{"p", "[", "3", "]"}]}], "-", 
  RowBox[{
   RowBox[{"k", "[", "4", "]"}], " ", 
   RowBox[{"p", "[", "4", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.788874156419477*^9, 3.788874180192786*^9}, 
   3.802199155021892*^9, 3.802467268517591*^9, 3.802535428993021*^9, 
   3.802630754142827*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"931f092b-83dd-4cdc-b481-6d9e8a966115"]
}, Open  ]],

Cell["Or to get a little fancier with it: ", "Text",
 CellChangeTimes->{{3.788874472059111*^9, 3.788874475157501*^9}, {
  3.788874559462821*^9, 
  3.788874561251854*^9}},ExpressionUUID->"85e5cbe3-0e7f-4119-9a41-\
75557974fc12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newEvaluate", "[", "numDimensions_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"ulp", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", " ", 
   RowBox[{"lorentzDot", "[", 
    RowBox[{
     RowBox[{"a", "/@", 
      RowBox[{"Range", "@", "numDimensions"}]}], ",", 
     RowBox[{"b", "/@", 
      RowBox[{"Range", "@", "numDimensions"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.788874476251711*^9, 3.78887452268507*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"bcca992d-82d3-4978-8ff2-8e0ae480b3da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newExpr", " ", "=", " ", 
  RowBox[{"ulp", "[", 
   RowBox[{"p", ",", "q"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.788874523654263*^9, 3.788874552505357*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"08e81785-d992-4ef3-9987-9f083a21d99b"],

Cell[BoxData[
 RowBox[{"ulp", "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Output",
 CellChangeTimes->{{3.78887454140091*^9, 3.788874552792083*^9}, 
   3.80219917160196*^9, 3.802467268707896*^9, 3.80253542903316*^9, 
   3.80263075419265*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"10e271c9-3911-4234-9800-9986134ca481"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newExpr", "/.", 
  RowBox[{"newEvaluate", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.788874542478899*^9, 3.788874545972645*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"1aeffdbd-c575-4ede-8fa7-8b211170cefb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "1", "]"}], " ", 
   RowBox[{"q", "[", "1", "]"}]}], "-", 
  RowBox[{
   RowBox[{"p", "[", "2", "]"}], " ", 
   RowBox[{"q", "[", "2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"p", "[", "3", "]"}], " ", 
   RowBox[{"q", "[", "3", "]"}]}], "-", 
  RowBox[{
   RowBox[{"p", "[", "4", "]"}], " ", 
   RowBox[{"q", "[", "4", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.788874546375578*^9, 3.788874554812598*^9}, 
   3.802199172999527*^9, 3.802467268725613*^9, 3.8025354290525503`*^9, 
   3.802630754209038*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"d2495630-0cfe-4735-88be-93ee54abca2a"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s say I had a set of consistent numerical values for \
some momenta of interest, \
\>", "Text",
 CellChangeTimes->{{3.802199179404997*^9, 3.8021991926020517`*^9}, {
  3.8025384277243967`*^9, 
  3.802538428899537*^9}},ExpressionUUID->"d9465227-bc19-41cc-8606-\
9fb52cb36075"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"kNum", "[", "1", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kNum", "[", "2", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.802199196198997*^9, 3.8021992217046223`*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"f3edc329-3431-4c66-91f4-00cdfafff05a"],

Cell["\<\
To numerically evaluate, could write a slightly fancier rule: \
\>", "Text",
 CellChangeTimes->{{3.802199234858292*^9, 3.802199244509672*^9}, {
  3.80253843567525*^9, 
  3.802538436228273*^9}},ExpressionUUID->"4b0d3a9d-3e67-4beb-a08a-\
5b284961d42d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbolic", " ", "=", " ", 
  RowBox[{"ulp", "[", 
   RowBox[{
    RowBox[{"k", "[", "1", "]"}], ",", 
    RowBox[{"k", "[", "2", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802199246566822*^9, 3.8021992541450443`*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"96dbf96d-5692-4cc2-86d3-d96116772927"],

Cell[BoxData[
 RowBox[{"ulp", "[", 
  RowBox[{
   RowBox[{"k", "[", "1", "]"}], ",", 
   RowBox[{"k", "[", "2", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.802199255665679*^9, 3.802467268807588*^9, 
  3.802535429096971*^9, 3.802630754258067*^9},
 CellLabel->
  "Out[379]=",ExpressionUUID->"61544837-a4c4-45b8-9b5e-20e90e605f2e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluateRule", " ", "=", " ", 
   RowBox[{
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"k", "[", "i_", "]"}], ",", 
      RowBox[{"k", "[", "j_", "]"}]}], "]"}], "\[RuleDelayed]", " ", 
    RowBox[{"lorentzDot", "[", 
     RowBox[{
      RowBox[{"kNum", "[", "i", "]"}], ",", 
      RowBox[{"kNum", "[", "j", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802199257041555*^9, 3.80219928548277*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"ae6d4f1f-8d48-438d-b7c1-ecb58cfc7b8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbolic", "/.", "evaluateRule"}]], "Input",
 CellChangeTimes->{{3.8021992883349667`*^9, 3.80219929068926*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"58bd86b1-861b-4482-9754-892189cebe18"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8021992911288633`*^9, 3.8024672688863153`*^9, 
  3.802535429136491*^9, 3.802630754313697*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"6f119d92-3f43-4798-83bb-33a005b8032d"]
}, Open  ]],

Cell["Or could even repeatedly use Apply in this simple case: ", "Text",
 CellChangeTimes->{{3.802199298770743*^9, 
  3.802199336632061*^9}},ExpressionUUID->"dbb5d2f4-4ec3-4981-b8cc-\
5f5b10efc55b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lorentzDot", "@@", 
  RowBox[{"kNum", "@@@", "symbolic"}]}]], "Input",
 CellChangeTimes->{{3.802199307962158*^9, 3.802199317996313*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"1a3386c6-47ae-4350-8373-e68826decf19"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.802199310908084*^9, 3.802199318407406*^9}, 
   3.802467268947323*^9, 3.802535429172491*^9, 3.8026307543568993`*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"5c2f7c39-2638-42fb-be8b-d1b58f106adf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Generating Functional Expressions", "Subsubsection",
 CellChangeTimes->{{3.802211749004146*^9, 
  3.8022117746968327`*^9}},ExpressionUUID->"7fcb9f25-aacb-4207-b2cc-\
7ac629d729ed"],

Cell["Here\[CloseCurlyQuote]s an incredibly useful function JJ wrote: ", \
"Text",
 CellChangeTimes->{{3.802200290047482*^9, 3.8022002973718233`*^9}, {
  3.802211801704406*^9, 
  3.802211804154786*^9}},ExpressionUUID->"034353da-cc77-4b2c-afd4-\
6a66fe8e9ea1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"promoteExprToFunction", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "foo", "}"}], ",", 
    RowBox[{
     RowBox[{"foo", "=", 
      RowBox[{"expr", "/.", 
       RowBox[{
        RowBox[{"k", "[", "a_", "]"}], "\[RuleDelayed]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"\"\<k\>\"", "<>", 
          RowBox[{"ToString", "[", "a", "]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{"list", ",", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k1", ",", "k2", ",", "k3", ",", "k4"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"k1", ",", "k2", ",", "k3", ",", "k4"}], "}"}], "=", 
           "list"}], ";", "\[IndentingNewLine]", "foo"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802200274636574*^9, 3.802200282291861*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"3d2d6950-598f-4f50-8e1d-5d5660f80b4a"],

Cell["\<\
That takes an expression containing momentum labels k/@Range@4 and generates \
a function \[ScriptF] such that \[ScriptF][k/@Range@4] gives back the same \
expression. Can see this in action: \
\>", "Text",
 CellChangeTimes->{{3.802211806803919*^9, 3.802211888986064*^9}, {
  3.802538493806822*^9, 
  3.802538501209893*^9}},ExpressionUUID->"d2188da9-4a1a-4759-b885-\
99bc00553195"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "4"}], 
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], ",", 
      RowBox[{"k", "[", "2", "]"}]}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], ",", 
        RowBox[{"k", "[", "2", "]"}]}], "]"}], "+", 
      RowBox[{"2", 
       RowBox[{"ulp", "[", 
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], ",", 
         RowBox[{"k", "[", "3", "]"}]}], "]"}]}]}], ")"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.802211892609716*^9, 3.802211912734908*^9}, {
   3.802212107316022*^9, 3.8022121078757343`*^9}, {3.802212263675496*^9, 
   3.8022122669818773`*^9}, 3.802467208245479*^9},
 CellLabel->
  "In[384]:=",ExpressionUUID->"ede47049-422d-44c7-8a6e-6529620d7d61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleFunction", " ", "=", " ", 
   RowBox[{"promoteExprToFunction", "@", "sample"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802211914183751*^9, 3.8022119196103783`*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"6b1577a8-a377-476d-a809-4ae67902a8e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleFunction", "[", 
  RowBox[{"k", "/@", 
   RowBox[{"Range", "@", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802211920626238*^9, 3.8022119245789747`*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"3d57ef68-9a1e-4bf7-ba72-7d46fb53da16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", 
  RowBox[{"ulp", "[", 
   RowBox[{
    RowBox[{"k", "[", "1", "]"}], ",", 
    RowBox[{"k", "[", "2", "]"}]}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], ",", 
      RowBox[{"k", "[", "2", "]"}]}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ulp", "[", 
      RowBox[{
       RowBox[{"k", "[", "2", "]"}], ",", 
       RowBox[{"k", "[", "3", "]"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.802211924840301*^9, 3.80221212139585*^9, 
  3.802212269378381*^9, 3.802467269084619*^9, 3.802535429247458*^9, 
  3.802630754464981*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"0aa0aaba-d2b8-4f5d-9f95-353889f8daa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleFunction", "[", 
  RowBox[{"l", "/@", 
   RowBox[{"Range", "@", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802211925737694*^9, 3.802211953434623*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"d1d41547-cce6-4473-8a88-a5f0b138a132"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", 
  RowBox[{"ulp", "[", 
   RowBox[{
    RowBox[{"l", "[", "1", "]"}], ",", 
    RowBox[{"l", "[", "2", "]"}]}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"l", "[", "1", "]"}], ",", 
      RowBox[{"l", "[", "2", "]"}]}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ulp", "[", 
      RowBox[{
       RowBox[{"l", "[", "2", "]"}], ",", 
       RowBox[{"l", "[", "3", "]"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.80221195372427*^9, 3.802212122723899*^9, 
  3.802212270808867*^9, 3.802467269170809*^9, 3.802535429265424*^9, 
  3.8026307544767733`*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"635bdcc9-8b14-4f5e-8684-6e3248710251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleFunction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "[", "1", "]"}], ",", 
    RowBox[{"k", "[", "2", "]"}], ",", 
    RowBox[{"l", "[", "1", "]"}], ",", 
    RowBox[{"-", 
     RowBox[{"l", "[", "2", "]"}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.802211954389645*^9, 3.802211966715497*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"0cb6b031-67bf-418d-8646-c09b9c861dc5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", 
  RowBox[{"ulp", "[", 
   RowBox[{
    RowBox[{"k", "[", "1", "]"}], ",", 
    RowBox[{"k", "[", "2", "]"}]}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], ",", 
      RowBox[{"k", "[", "2", "]"}]}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"ulp", "[", 
      RowBox[{
       RowBox[{"k", "[", "2", "]"}], ",", 
       RowBox[{"l", "[", "1", "]"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8022119673435373`*^9, 3.8022121238980494`*^9, 
  3.802212271863543*^9, 3.802467269239002*^9, 3.80253542929366*^9, 
  3.802630754514311*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"f34db850-a540-4601-ad2f-afccbc1e0334"]
}, Open  ]],

Cell["\<\
This is particularly useful, along with Block, for evaluating a symbolic \
expression for a given numerator, where the numerator arguments may vary \
throughout the expression. For instance, let\[CloseCurlyQuote]s calculate the \
ordered amplitude for a theory with kinematic numerators given by \
sampleFunction: \
\>", "Text",
 CellChangeTimes->{{3.802211975814465*^9, 3.8022120075571537`*^9}, {
  3.802212045666133*^9, 3.802212065907209*^9}, {3.8022123595408707`*^9, 
  3.802212369966539*^9}},ExpressionUUID->"3e221c23-f07a-49fc-90e7-\
cd47d9e058fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"amp1234", " ", "=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{"nSym", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], ",", 
       RowBox[{"k", "[", "2", "]"}], ",", 
       RowBox[{"k", "[", "3", "]"}], ",", 
       RowBox[{"k", "[", "4", "]"}]}], "}"}], "]"}], 
    RowBox[{"2", 
     RowBox[{"ulp", "[", 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], ",", 
       RowBox[{"k", "[", "2", "]"}]}], "]"}]}]], "+", 
   FractionBox[
    RowBox[{"nSym", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "[", "4", "]"}], ",", 
       RowBox[{"k", "[", "1", "]"}], ",", 
       RowBox[{"k", "[", "2", "]"}], ",", 
       RowBox[{"k", "[", "3", "]"}]}], "}"}], "]"}], 
    RowBox[{"2", 
     RowBox[{"ulp", "[", 
      RowBox[{
       RowBox[{"k", "[", "2", "]"}], ",", 
       RowBox[{"k", "[", "3", "]"}]}], "]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.802212015717519*^9, 3.8022120698656178`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"f0de3f85-003e-4bd6-8ec8-181883767589"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"nSym", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], ",", 
      RowBox[{"k", "[", "2", "]"}], ",", 
      RowBox[{"k", "[", "3", "]"}], ",", 
      RowBox[{"k", "[", "4", "]"}]}], "}"}], "]"}], 
   RowBox[{"2", " ", 
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"k", "[", "1", "]"}], ",", 
      RowBox[{"k", "[", "2", "]"}]}], "]"}]}]], "+", 
  FractionBox[
   RowBox[{"nSym", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "[", "4", "]"}], ",", 
      RowBox[{"k", "[", "1", "]"}], ",", 
      RowBox[{"k", "[", "2", "]"}], ",", 
      RowBox[{"k", "[", "3", "]"}]}], "}"}], "]"}], 
   RowBox[{"2", " ", 
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], ",", 
      RowBox[{"k", "[", "3", "]"}]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.8022120702771883`*^9, 3.802212273878685*^9, 
  3.802467269259967*^9, 3.802535429315091*^9, 3.802630754527443*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"5b7e3087-c459-4213-b910-f0006f353cee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ampEvaluated", " ", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nSym", " ", "=", " ", "sampleFunction"}], "}"}], ",", 
    "amp1234"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8022120713726892`*^9, 3.802212093366599*^9}, {
  3.8022121828741283`*^9, 3.8022121879540358`*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"fbb43e95-6930-4fa9-8110-a900a62ea2fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"ulp", "[", 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], ",", 
       RowBox[{"k", "[", "4", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"ulp", "[", 
         RowBox[{
          RowBox[{"k", "[", "1", "]"}], ",", 
          RowBox[{"k", "[", "2", "]"}]}], "]"}]}], "+", 
       RowBox[{"ulp", "[", 
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], ",", 
         RowBox[{"k", "[", "4", "]"}]}], "]"}]}], ")"}]}], 
    RowBox[{"ulp", "[", 
     RowBox[{
      RowBox[{"k", "[", "2", "]"}], ",", 
      RowBox[{"k", "[", "3", "]"}]}], "]"}]]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ulp", "[", 
      RowBox[{
       RowBox[{"k", "[", "1", "]"}], ",", 
       RowBox[{"k", "[", "2", "]"}]}], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], ",", 
        RowBox[{"k", "[", "3", "]"}]}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.802212078777274*^9, 3.8022120937860413`*^9}, 
   3.802212126482234*^9, 3.8022121884918203`*^9, 3.802212275089074*^9, 
   3.802467269327499*^9, 3.8025354293472843`*^9, 3.8026307545642242`*^9},
 CellLabel->
  "Out[390]=",ExpressionUUID->"cc50f363-3233-4b6d-906b-fa798c06d5ea"]
}, Open  ]],

Cell["\<\
Where Block locally sets all instances of nSym to sampleFunction. We could of \
course instead do this with a rule nSym :> sampleFunction, but for a larger \
expression than sampleFunction, Block is particularly efficient. In a \
momentum basis, this evaluates to the NLSM ordered amplitude A(1234): \
\>", "Text",
 CellChangeTimes->{{3.802212140159288*^9, 3.802212181020158*^9}, {
  3.8022123288527613`*^9, 3.802212337610405*^9}, {3.80246719148018*^9, 
  3.8024672256029987`*^9}, {3.8025385263904533`*^9, 
  3.80253865672427*^9}},ExpressionUUID->"65f3ec7c-d3df-40a9-9bb4-\
d8ab058e1f82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"labelRules", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], ",", 
        RowBox[{"k", "[", "2", "]"}]}], "]"}], "\[Rule]", " ", 
      RowBox[{"s", "/", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "3", "]"}], ",", 
        RowBox[{"k", "[", "4", "]"}]}], "]"}], "\[Rule]", " ", 
      RowBox[{"s", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], ",", 
        RowBox[{"k", "[", "3", "]"}]}], "]"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"s", "+", "u"}], ")"}]}], "/", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], ",", 
        RowBox[{"k", "[", "4", "]"}]}], "]"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"s", "+", "u"}], ")"}]}], "/", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], ",", 
        RowBox[{"k", "[", "3", "]"}]}], "]"}], "\[Rule]", " ", 
      RowBox[{"u", "/", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], ",", 
        RowBox[{"k", "[", "4", "]"}]}], "]"}], "\[Rule]", " ", 
      RowBox[{"u", "/", "2"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8022121956464767`*^9, 3.80221224087249*^9}, {
  3.8022122841619463`*^9, 3.802212306684041*^9}, {3.802467227444072*^9, 
  3.802467249487439*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"856b83c5-8438-471e-8320-a01074aa9ff5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ampEvaluated", "/.", "labelRules"}], " ", "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.802212190109684*^9, 3.802212191649745*^9}, {
  3.802212242418705*^9, 3.8022122467667093`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"db6cf9df-d3ca-4c31-a04a-78de9d66abc8"],

Cell[BoxData[
 RowBox[{"3", " ", "u"}]], "Output",
 CellChangeTimes->{{3.802212244072908*^9, 3.802212247191662*^9}, {
   3.80221229648667*^9, 3.8022123121293287`*^9}, 3.8024672694051533`*^9, 
   3.8025354293963842`*^9, 3.802630754605476*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"1b91d119-eb9c-4a3b-8dc6-95f6b088287a"]
}, Open  ]],

Cell["You could also of course do this with a function: ", "Text",
 CellChangeTimes->{{3.8024672887171392`*^9, 
  3.8024672935148983`*^9}},ExpressionUUID->"ff5217d6-2e8a-433d-b2cf-\
14b1e8aa9087"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"amp1234function", "[", "nSym_", "]"}], ":=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"nSym", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], ",", 
        RowBox[{"k", "[", "2", "]"}], ",", 
        RowBox[{"k", "[", "3", "]"}], ",", 
        RowBox[{"k", "[", "4", "]"}]}], "}"}], "]"}], 
     RowBox[{"2", 
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "1", "]"}], ",", 
        RowBox[{"k", "[", "2", "]"}]}], "]"}]}]], "+", 
    FractionBox[
     RowBox[{"nSym", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "[", "4", "]"}], ",", 
        RowBox[{"k", "[", "1", "]"}], ",", 
        RowBox[{"k", "[", "2", "]"}], ",", 
        RowBox[{"k", "[", "3", "]"}]}], "}"}], "]"}], 
     RowBox[{"2", 
      RowBox[{"ulp", "[", 
       RowBox[{
        RowBox[{"k", "[", "2", "]"}], ",", 
        RowBox[{"k", "[", "3", "]"}]}], "]"}]}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802467295325344*^9, 3.802467305603582*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"0315fe31-21d8-4d4f-9d05-85b9b7f4ce3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"amp1234function", "[", "sampleFunction", "]"}], "/.", 
   "labelRules"}], "]"}]], "Input",
 CellChangeTimes->{{3.8024673073564*^9, 3.8024673235197487`*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"cdfd4ce5-4a43-4115-b0f8-ba129ef2f908"],

Cell[BoxData[
 RowBox[{"3", " ", "u"}]], "Output",
 CellChangeTimes->{3.802467324212294*^9, 3.802535429440477*^9, 
  3.802630754648305*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"2fac5f70-73a5-4b42-a83a-ae10e52af8e2"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.8025345958290787`*^9, 
  3.802534598990678*^9}},ExpressionUUID->"c5c8ddac-36b2-4b24-a4c7-\
84be142029bd"],

Cell[CellGroupData[{

Cell["Non-linear sigma model ", "Subsubsection",
 CellChangeTimes->{{3.8024673698290873`*^9, 3.8024674105692873`*^9}, 
   3.8025346009385777`*^9},ExpressionUUID->"c2578a5c-69f0-4cee-8f39-\
1a9dda113ac3"],

Cell["\<\
A good place to start using these skills would be finding the numerator (up \
to an overall multiplicative factor) that I specified above, sampleFunction, \
that gave the NLSM amplitude. There\[CloseCurlyQuote]s really only two steps: \

\t1) Construct an ansatz in a basis of Lorentz invariants of appropriate mass \
dimensions
\t2) Impose color-kinematics duality to fix the ansatz
For a scalar theory at multiplicity four, it\[CloseCurlyQuote]s easy enough \
just to write down a basis of momentum invariants, and the rules that return \
you to that basis. But as you go up in multiplicity or introduce \
polarizations into the mix, you\[CloseCurlyQuote]ll want functions that give \
physical conditions \[Dash] like masslessness, transversality, conservation \
of momentum \[Dash] to Reduce to automatically generate a basis (and \
corresponding rules) for you. This gentler case might be a good playground \
for coding up such a function.\
\>", "Text",
 CellChangeTimes->{{3.802467378584095*^9, 3.802467649860744*^9}, {
   3.8025344748015957`*^9, 3.802534572427854*^9}, 3.802538683559099*^9, {
   3.8025387523845587`*^9, 
   3.802538852311994*^9}},ExpressionUUID->"80f63a95-e70e-4f68-a28f-\
035131b59bc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Color factors ", "Subsubsection",
 CellChangeTimes->{{3.802534644453331*^9, 
  3.802534646218542*^9}},ExpressionUUID->"b6fa30fc-0915-466c-8ef4-\
4f78d768693a"],

Cell["\<\
You could also use the techniques here to find adjoint color factors at four \
points expressed in terms of traces over generators. Similarly to above, you\
\[CloseCurlyQuote]ll need to: 
\t1) Construct a basis of traces and rules that return you to that basis
\t2) Impose antisymmetry and Jacobi on an ansatz 
Just like we used an undefined function \
\[OpenCurlyQuote]ulp\[CloseCurlyQuote] to represent dot products, you\
\[CloseCurlyQuote]ll want an undefined trace function. \
\>", "Text",
 CellChangeTimes->{{3.802534663358377*^9, 3.8025348038963337`*^9}, {
  3.8025348545042048`*^9, 3.8025348784672413`*^9}, {3.802535275868569*^9, 
  3.802535302245283*^9}, {3.802535369661358*^9, 3.802535373990182*^9}, {
  3.80253886929843*^9, 
  3.802538870535076*^9}},ExpressionUUID->"3a7e8c2c-1bc3-45c0-b43f-\
54a74958fe88"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"homework",
WindowSize->{987, 755},
WindowMargins->{{10, Automatic}, {Automatic, -87}},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"blue.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 223, 3, 44, "Text",ExpressionUUID->"78616fab-db58-43a6-a488-04b893b1a9b5"],
Cell[CellGroupData[{
Cell[806, 27, 236, 4, 86, "Chapter",ExpressionUUID->"66b602d9-2f34-4f80-bd60-ab3ea8ce9122"],
Cell[CellGroupData[{
Cell[1067, 35, 259, 3, 84, "Section",ExpressionUUID->"e14bdae8-b4ab-49d0-ba0f-665d11ecea0c"],
Cell[CellGroupData[{
Cell[1351, 42, 227, 4, 67, "Subsection",ExpressionUUID->"fa86d2d9-4e1b-431f-8d9d-1499c2da840b"],
Cell[CellGroupData[{
Cell[1603, 50, 161, 3, 56, "Subsubsection",ExpressionUUID->"474f2534-a1ab-4dd5-bdc0-a646b879e749"],
Cell[1767, 55, 399, 7, 73, "Text",ExpressionUUID->"1cfc6310-1594-4c1f-a421-b8d58c573884"],
Cell[CellGroupData[{
Cell[2191, 66, 553, 12, 37, "Input",ExpressionUUID->"b3d95bf0-51e4-4206-b3cb-5641725f813b"],
Cell[2747, 80, 419, 8, 70, "Output",ExpressionUUID->"14e073ff-57b3-43c6-b1e7-ccc3ac623a0c"]
}, Open  ]],
Cell[3181, 91, 311, 7, 73, "Text",ExpressionUUID->"a1d9ac3b-1270-4ebc-8714-afbbfe25e25a"],
Cell[CellGroupData[{
Cell[3517, 102, 231, 5, 37, "Input",ExpressionUUID->"bfd74302-edc9-4307-9755-5279736cfd1e"],
Cell[3751, 109, 292, 5, 70, "Output",ExpressionUUID->"0fbc54b6-b1c7-4131-b8c5-50aecf0e4664"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4080, 119, 252, 6, 37, "Input",ExpressionUUID->"31985b51-8ae1-4e5b-9777-565a42ed29fd"],
Cell[4335, 127, 297, 5, 70, "Output",ExpressionUUID->"f7917821-dde6-4352-90d7-c2e4109761b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4669, 137, 263, 5, 37, "Input",ExpressionUUID->"0c7f7102-e973-4856-845e-47dbc6e3184b"],
Cell[4935, 144, 318, 5, 70, "Output",ExpressionUUID->"3af02f22-633a-44ad-8e81-3ceda560500e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5290, 154, 264, 5, 37, "Input",ExpressionUUID->"9977bf38-76f2-4faf-86cd-eee50a25f300"],
Cell[5557, 161, 313, 5, 70, "Output",ExpressionUUID->"169de0c6-9b51-4583-8fa7-e04630b00538"]
}, Open  ]],
Cell[5885, 169, 339, 7, 44, "Text",ExpressionUUID->"1c6ad197-3b6f-4114-9ecd-fd27ece09106"],
Cell[CellGroupData[{
Cell[6249, 180, 233, 5, 37, "Input",ExpressionUUID->"764a3e81-15e4-43de-a17c-54fc98ed337c"],
Cell[6485, 187, 225, 4, 70, "Output",ExpressionUUID->"60ec0335-bb61-4104-806a-7db65b7ee7ec"]
}, Open  ]],
Cell[6725, 194, 201, 3, 44, "Text",ExpressionUUID->"422d9998-244a-416c-b5b0-2f1b8c3128df"],
Cell[CellGroupData[{
Cell[6951, 201, 208, 4, 37, "Input",ExpressionUUID->"396a9201-22a1-4fae-856c-485eff7b5dec"],
Cell[7162, 207, 561, 12, 70, "Output",ExpressionUUID->"7ad807e2-c62e-4c4b-a1ae-8d1d747c33e2"]
}, Open  ]],
Cell[7738, 222, 344, 7, 44, "Text",ExpressionUUID->"531b814b-89c9-4722-92f4-bc0db2ed05b6"],
Cell[8085, 231, 456, 13, 37, "Input",ExpressionUUID->"23432bc8-30d8-4489-b9fb-6d6e1b51c124"],
Cell[CellGroupData[{
Cell[8566, 248, 253, 5, 37, "Input",ExpressionUUID->"df7c21d9-29f4-480e-8424-ac6d24e47d76"],
Cell[8822, 255, 354, 7, 70, "Output",ExpressionUUID->"ec7a6f0b-45fd-481a-9d70-5392a36beb09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9213, 267, 252, 5, 37, "Input",ExpressionUUID->"90482ba9-3bfa-45e3-84e3-b09616d7d399"],
Cell[9468, 274, 352, 7, 70, "Output",ExpressionUUID->"94967c67-0df6-4d30-bcd1-f9a70128649e"]
}, Open  ]],
Cell[9835, 284, 342, 7, 44, "Text",ExpressionUUID->"454ed622-fb90-4060-8a93-09c31f8487eb"],
Cell[CellGroupData[{
Cell[10202, 295, 260, 5, 37, "Input",ExpressionUUID->"4d609cac-1373-4048-8b04-00586a318933"],
Cell[10465, 302, 366, 6, 70, "Output",ExpressionUUID->"bc2c959e-f503-46f7-8edf-53f45818eebc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10868, 313, 236, 5, 37, "Input",ExpressionUUID->"95324498-73d7-4486-b35a-8cafbf3395f8"],
Cell[11107, 320, 381, 8, 70, "Output",ExpressionUUID->"77dd6cbd-63a7-48a6-87c4-3320ccb1bf8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11525, 333, 349, 9, 37, "Input",ExpressionUUID->"7a5cb049-bc43-40f1-b8fa-5762dbddd298"],
Cell[11877, 344, 384, 8, 70, "Output",ExpressionUUID->"4bb8c7cf-f529-49d4-b0ea-de2ed69b435a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12298, 357, 412, 12, 37, "Input",ExpressionUUID->"fa43e901-ae69-444b-9a96-59eab68ad3c3"],
Cell[12713, 371, 394, 7, 70, "Output",ExpressionUUID->"cc1fb9d1-7f43-4ac2-901c-1adc1aad800d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13144, 383, 458, 12, 37, "Input",ExpressionUUID->"cb6c1332-e720-461e-938b-5907b1960edc"],
Cell[13605, 397, 300, 5, 70, "Output",ExpressionUUID->"141a29dc-3b62-4b53-b62d-34117f20ce98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13942, 407, 457, 12, 37, "Input",ExpressionUUID->"706a1a33-f82e-4e85-8cf5-91700d57bf52"],
Cell[14402, 421, 296, 5, 70, "Output",ExpressionUUID->"bcbeb672-edd5-4d24-a610-d29cce6550c6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[14747, 432, 218, 4, 45, "Subsubsection",ExpressionUUID->"e5fece4b-0900-4485-9050-b679b1ff1be2"],
Cell[14968, 438, 202, 3, 44, "Text",ExpressionUUID->"715fe3a6-05ac-43e2-8d45-02e7cc1a8a88"],
Cell[15173, 443, 291, 7, 37, "Input",ExpressionUUID->"69d3a8b0-d05e-46eb-9ce0-8b787a0bdb49"],
Cell[15467, 452, 491, 9, 102, "Text",ExpressionUUID->"1316618d-06c3-40cd-851b-ad89bd297e10"],
Cell[15961, 463, 531, 14, 37, "Input",ExpressionUUID->"32070509-83d7-4227-9481-fd9757155e1e"],
Cell[CellGroupData[{
Cell[16517, 481, 269, 5, 37, "Input",ExpressionUUID->"dd2b9943-ecd0-43d5-b18b-0bf3fb7baf80"],
Cell[16789, 488, 814, 22, 70, "Output",ExpressionUUID->"2f40dab5-0d03-4b03-9edf-55e21d92c8a1"]
}, Open  ]],
Cell[17618, 513, 182, 3, 44, "Text",ExpressionUUID->"1dba88ca-460e-441a-b7c2-1b7745ab2bc0"],
Cell[CellGroupData[{
Cell[17825, 520, 284, 7, 37, "Input",ExpressionUUID->"6bdfcb88-e9f9-42ee-a340-9db3999cb150"],
Cell[18112, 529, 295, 5, 70, "Output",ExpressionUUID->"c1200ed6-a3ea-4bcd-8e8b-d2d5157552e7"]
}, Open  ]],
Cell[18422, 537, 343, 7, 73, "Text",ExpressionUUID->"2c1bccd8-c984-4fa7-b350-602c4d48e46f"],
Cell[18768, 546, 244, 5, 37, "Input",ExpressionUUID->"b413f426-a989-4be9-b378-469f0a5aa46c"],
Cell[CellGroupData[{
Cell[19037, 555, 262, 5, 37, "Input",ExpressionUUID->"a9917104-591e-41a7-844e-9f1871568fcf"],
Cell[19302, 562, 819, 22, 70, "Output",ExpressionUUID->"379bb525-6d6e-4cc8-849e-4f9f40ae0033"]
}, Open  ]],
Cell[20136, 587, 241, 5, 37, "Input",ExpressionUUID->"60341f32-4f90-405f-8f03-a4a759370180"],
Cell[CellGroupData[{
Cell[20402, 596, 213, 4, 37, "Input",ExpressionUUID->"0c716524-fc4e-405c-8b09-43a08022f7b3"],
Cell[20618, 602, 792, 22, 70, "Output",ExpressionUUID->"1ec2f0e5-20c6-4e21-b6df-0ee70b050cb3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[21459, 630, 174, 3, 45, "Subsubsection",ExpressionUUID->"aa1157f1-3d09-42ab-85f3-768428e7fb2b"],
Cell[21636, 635, 183, 3, 44, "Text",ExpressionUUID->"b4248c94-88eb-4ab5-bc83-6591cb2c69c2"],
Cell[CellGroupData[{
Cell[21844, 642, 250, 5, 37, "Input",ExpressionUUID->"4f65b605-2503-46ab-839c-0246099d2502"],
Cell[22097, 649, 397, 9, 70, "Output",ExpressionUUID->"876c1178-2ed3-4008-bb60-426fae0dcc46"]
}, Open  ]],
Cell[22509, 661, 192, 3, 44, "Text",ExpressionUUID->"aaaba8ae-a5d3-48d8-8b3d-3f444055eaf7"],
Cell[CellGroupData[{
Cell[22726, 668, 212, 4, 37, "Input",ExpressionUUID->"4c602a6c-2db5-4c32-aaf5-ad8d225f04a7"],
Cell[22941, 674, 673, 19, 70, "Output",ExpressionUUID->"00bb77bc-77b6-4e4a-b218-7ce2be221a83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23651, 698, 248, 5, 37, "Input",ExpressionUUID->"4f8206cb-aa5a-4db5-9a98-a9edbfed26bc"],
Cell[23902, 705, 1187, 36, 70, "Output",ExpressionUUID->"ebc7e529-b689-4fa7-aeef-86fb68a4ae86"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[25138, 747, 179, 3, 45, "Subsubsection",ExpressionUUID->"8f1218f8-52a1-4b77-af44-b2b9c4aff413"],
Cell[25320, 752, 372, 7, 44, "Text",ExpressionUUID->"a40d03d3-5fe4-4b2c-91d5-975e77555a9c"],
Cell[25695, 761, 424, 12, 37, "Input",ExpressionUUID->"08dc0e19-e382-4cb7-9020-71ec9df6010d"],
Cell[CellGroupData[{
Cell[26144, 777, 219, 4, 37, "Input",ExpressionUUID->"c939e72e-4402-44b9-8d0f-6b7b71d1d970"],
Cell[26366, 783, 439, 9, 70, "Output",ExpressionUUID->"eb58c08b-97fc-4335-aef8-468ed6fbec76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26842, 797, 219, 4, 37, "Input",ExpressionUUID->"47e0506f-ac55-4ad0-b527-9a39ad5559f7"],
Cell[27064, 803, 458, 12, 70, "Output",ExpressionUUID->"4a5166c3-7b6f-4657-8395-870a5ea19295"]
}, Open  ]],
Cell[27537, 818, 349, 7, 44, "Text",ExpressionUUID->"d8296576-aca8-4a79-ad4d-21a28b508cda"],
Cell[CellGroupData[{
Cell[27911, 829, 221, 4, 37, "Input",ExpressionUUID->"3cfb1baf-520a-482c-986e-ceb3369aef9c"],
Cell[28135, 835, 647, 18, 70, "Output",ExpressionUUID->"b4f0947d-f636-4237-9097-d71d024ea8cc"]
}, Open  ]],
Cell[28797, 856, 331, 7, 73, "Text",ExpressionUUID->"4ace70fd-a34c-4b00-9f5c-c9857c09b852"],
Cell[29131, 865, 394, 9, 37, "Input",ExpressionUUID->"8fdafaca-1f28-4ccd-926c-0933f61e236f"],
Cell[29528, 876, 344, 8, 37, "Input",ExpressionUUID->"48b4aa9c-c20b-4e43-aa7f-f4f3f77751ab"],
Cell[CellGroupData[{
Cell[29897, 888, 371, 7, 37, "Input",ExpressionUUID->"7c381552-5f8b-42ae-972f-cfe1801c6f9c"],
Cell[30271, 897, 349, 6, 70, "Output",ExpressionUUID->"55b6562f-7b3f-4921-b559-03e2028aed0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30657, 908, 371, 7, 37, "Input",ExpressionUUID->"f1a7cfcc-2554-4866-bfb7-e07fd68df5b9"],
Cell[31031, 917, 319, 5, 70, "Output",ExpressionUUID->"6fe40ee1-930f-4e6b-9f59-63dc5d747949"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[31399, 928, 173, 3, 45, "Subsubsection",ExpressionUUID->"e48640e7-5c2e-4f5d-841d-eb8019544637"],
Cell[31575, 933, 340, 7, 73, "Text",ExpressionUUID->"ca8c4ffe-e5b7-4c7b-8d7b-5cf5296bf68e"],
Cell[31918, 942, 386, 11, 37, "Input",ExpressionUUID->"4d9ed309-7650-4255-afcf-48a5db2a6810"],
Cell[CellGroupData[{
Cell[32329, 957, 398, 9, 37, "Input",ExpressionUUID->"1ecffa2b-1316-4897-9c73-5898c8e3069b"],
Cell[32730, 968, 1052, 28, 70, "Output",ExpressionUUID->"6a291d94-3df1-4a3d-895b-94a847d27313"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33843, 1003, 165, 3, 67, "Subsection",ExpressionUUID->"e3a0d0f8-514a-4f2a-84e6-af2531682d94"],
Cell[CellGroupData[{
Cell[34033, 1010, 161, 3, 56, "Subsubsection",ExpressionUUID->"21beac30-411c-4f20-bf59-977500389522"],
Cell[34197, 1015, 279, 6, 73, "Text",ExpressionUUID->"fca75dd3-6276-44d0-b2d7-fe15b232f9a1"],
Cell[34479, 1023, 341, 7, 37, "Input",ExpressionUUID->"560a48ff-14cd-4a67-b152-3cdf0f7e6a48"],
Cell[34823, 1032, 224, 5, 44, "Text",ExpressionUUID->"0912d913-ada2-4dc8-8b61-d6dd63ecda36"],
Cell[CellGroupData[{
Cell[35072, 1041, 237, 5, 37, "Input",ExpressionUUID->"aa90d926-45fe-4327-b91d-91c1fca73d85"],
Cell[35312, 1048, 289, 5, 70, "Output",ExpressionUUID->"ba96d3df-269d-49d9-b8ee-dd57ee6594c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35638, 1058, 237, 5, 37, "Input",ExpressionUUID->"f85a42ae-9c16-4e2f-8e26-4e8737a626e4"],
Cell[35878, 1065, 315, 6, 70, "Output",ExpressionUUID->"c5beb342-8671-4ffe-9dd9-e2b45c19cfd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36230, 1076, 239, 5, 37, "Input",ExpressionUUID->"aa612aeb-b836-4cdb-bf8e-29bad1834ffb"],
Cell[36472, 1083, 342, 6, 70, "Output",ExpressionUUID->"e265a312-6da4-497d-92bc-3da5f30fce85"]
}, Open  ]],
Cell[36829, 1092, 246, 6, 44, "Text",ExpressionUUID->"62681c3b-c2e9-410f-90aa-dc2912da7817"],
Cell[37078, 1100, 466, 12, 37, "Input",ExpressionUUID->"81fb5bbc-0dc7-4bc0-9c9f-3432b63e34c0"],
Cell[CellGroupData[{
Cell[37569, 1116, 271, 6, 37, "Input",ExpressionUUID->"18b700d8-d37a-48c9-b8f0-83e90a60cb29"],
Cell[37843, 1124, 412, 11, 70, "Output",ExpressionUUID->"423da94f-f865-447d-a184-912c82de3cd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38292, 1140, 273, 6, 37, "Input",ExpressionUUID->"cbdd2751-e2ee-4dcc-9a0c-ddc5ad7b1c3f"],
Cell[38568, 1148, 487, 12, 70, "Output",ExpressionUUID->"f5e2a2f3-9cdb-48e0-9606-e13c4f3c3302"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[39104, 1166, 326, 5, 45, "Subsubsection",ExpressionUUID->"49986978-7a58-4059-847a-175080633d2e"],
Cell[39433, 1173, 693, 12, 131, "Text",ExpressionUUID->"74103514-e9f8-4f2f-b668-50c50e48a53a"],
Cell[40129, 1187, 615, 13, 90, "Input",ExpressionUUID->"4b3cf4d5-0830-4838-9565-63d77124fd35"],
Cell[CellGroupData[{
Cell[40769, 1204, 216, 4, 37, "Input",ExpressionUUID->"99471617-c01b-40be-a030-2ee518dcd50a"],
Cell[40988, 1210, 325, 5, 70, "Output",ExpressionUUID->"f65685d3-6d46-45df-954e-51b6ec916185"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41350, 1220, 217, 4, 37, "Input",ExpressionUUID->"41ff625e-e2ee-49a6-a5e1-304854780edb"],
Cell[41570, 1226, 322, 5, 70, "Output",ExpressionUUID->"632fd598-b862-4f11-b914-fef910e22d32"]
}, Open  ]],
Cell[41907, 1234, 950, 14, 217, "Text",ExpressionUUID->"7155816f-6b32-46f0-87bc-fc35b0370445"],
Cell[42860, 1250, 797, 16, 116, "Input",ExpressionUUID->"eea6db7c-4d32-4db8-a277-3140a6469b04"],
Cell[CellGroupData[{
Cell[43682, 1270, 320, 6, 37, "Input",ExpressionUUID->"a8b6d25c-855b-43ea-bc57-e200bb3a3349"],
Cell[44005, 1278, 347, 7, 70, "Print",ExpressionUUID->"8244585f-03da-4168-a4b2-9c8f00e30607"],
Cell[44355, 1287, 318, 5, 70, "Output",ExpressionUUID->"9cc5a69f-9ba9-46ba-8933-fdbce3b6e977"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44710, 1297, 189, 3, 37, "Input",ExpressionUUID->"7b962ad9-cf9f-4d00-a4bd-346f270c9828"],
Cell[44902, 1302, 306, 5, 70, "Output",ExpressionUUID->"c17ab184-7006-4599-8edc-34a5e9192755"]
}, Open  ]],
Cell[45223, 1310, 668, 15, 103, "Text",ExpressionUUID->"6a4dbd68-cddb-41a8-8777-ace9bf2ddd21"],
Cell[45894, 1327, 262, 6, 37, "Input",ExpressionUUID->"b2b62dea-3d22-4c6e-9230-aead123f96b0"],
Cell[CellGroupData[{
Cell[46181, 1337, 191, 3, 37, "Input",ExpressionUUID->"6a8b91b7-eaa5-4975-885c-0d71ac99a7b6"],
Cell[46375, 1342, 328, 6, 70, "Output",ExpressionUUID->"0ef4a37c-125e-43b2-b21a-246e483e51b0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[46752, 1354, 243, 4, 45, "Subsubsection",ExpressionUUID->"46846279-58bc-4c8e-8239-449394f83fcc"],
Cell[46998, 1360, 468, 9, 102, "Text",ExpressionUUID->"fff40ff9-7622-4514-ac9c-d76ffd93bbf3"],
Cell[47469, 1371, 834, 22, 90, "Input",ExpressionUUID->"1bae2dde-e6fc-4842-af90-694a9e19a2f8"],
Cell[CellGroupData[{
Cell[48328, 1397, 260, 6, 37, "Input",ExpressionUUID->"5105d3eb-ce8d-4359-8a81-673443026b2f"],
Cell[48591, 1405, 602, 17, 70, "Output",ExpressionUUID->"4a25d184-e3f9-4aae-b85e-99b7e5bb0af6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49230, 1427, 315, 7, 37, "Input",ExpressionUUID->"194d68fc-061b-4e7f-b47d-d4a954a74be9"],
Cell[49548, 1436, 404, 9, 70, "Output",ExpressionUUID->"6f3c0d8c-9119-44b6-836e-03c0ca8e7c5f"]
}, Open  ]],
Cell[49967, 1448, 341, 7, 73, "Text",ExpressionUUID->"007bdc95-c61e-4e56-a74c-c1835b6d7fa3"],
Cell[50311, 1457, 444, 10, 37, "Input",ExpressionUUID->"604ac1ea-5401-4ae8-89f1-72809474bf59"],
Cell[CellGroupData[{
Cell[50780, 1471, 322, 7, 37, "Input",ExpressionUUID->"920e343a-c7fa-4db4-8cfc-e56b9c07cc04"],
Cell[51105, 1480, 506, 14, 70, "Output",ExpressionUUID->"74e301b5-2dfb-46fe-9e89-95fbeacef290"]
}, Open  ]],
Cell[51626, 1497, 459, 9, 73, "Text",ExpressionUUID->"38b1d6ee-afe0-4e1c-b9aa-2ad28d1d2a6c"],
Cell[52088, 1508, 514, 12, 64, "Input",ExpressionUUID->"1d34970f-9cb5-4c49-a895-35a1f240a659"],
Cell[52605, 1522, 460, 9, 73, "Text",ExpressionUUID->"203aa362-1bd2-435c-9547-8aae1ea2a7f7"],
Cell[CellGroupData[{
Cell[53090, 1535, 233, 4, 37, "Input",ExpressionUUID->"aa0758d3-3422-41b1-af7c-4d99acba9b67"],
Cell[53326, 1541, 621, 20, 70, "Output",ExpressionUUID->"019b4ee7-fa9f-4603-a66a-7ee0c2067e0b"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54008, 1568, 224, 4, 67, "Subsection",ExpressionUUID->"643ac0f4-0163-4a14-9623-9577958eb167"],
Cell[CellGroupData[{
Cell[54257, 1576, 165, 3, 56, "Subsubsection",ExpressionUUID->"feb557d1-240b-4703-87a5-57f7453544ba"],
Cell[54425, 1581, 447, 8, 73, "Text",ExpressionUUID->"d71d6ea9-3ba3-47c0-a94c-2403b488fe91"],
Cell[54875, 1591, 433, 11, 46, "Input",ExpressionUUID->"288cad93-ad50-4989-88b0-c72a731b6cdb"],
Cell[55311, 1604, 389, 11, 75, "Text",ExpressionUUID->"1965ac38-6123-4e81-b04d-6d45f1df748a"],
Cell[CellGroupData[{
Cell[55725, 1619, 211, 4, 37, "Input",ExpressionUUID->"78649250-5265-49e4-84a0-09e20bc49737"],
Cell[55939, 1625, 339, 5, 42, "Output",ExpressionUUID->"5b6e10ff-a4b2-4cb6-bc0f-b4e5bdcd10ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56315, 1635, 226, 5, 37, "Input",ExpressionUUID->"6068c7a7-5c34-4751-b6fd-538c21f6bd52"],
Cell[56544, 1642, 359, 5, 42, "Output",ExpressionUUID->"60c56c73-30e1-4474-981f-50d6aa67e77f"]
}, Open  ]],
Cell[56918, 1650, 851, 13, 159, "Text",ExpressionUUID->"ff9a91e1-ad86-4a3f-812d-5b6045fc8f62"],
Cell[CellGroupData[{
Cell[57794, 1667, 613, 15, 90, "Input",ExpressionUUID->"4a316408-6172-4598-b2d4-b41fd55bdd35"],
Cell[58410, 1684, 226, 4, 29, "Print",ExpressionUUID->"11405e89-d3ea-4fe0-8d4e-a492a026e351"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58673, 1693, 587, 15, 90, "Input",ExpressionUUID->"8a30144f-aaf6-4d3c-8cf7-b939965a7600"],
Cell[59263, 1710, 220, 4, 29, "Print",ExpressionUUID->"3afd3f37-fff6-4194-938f-6528da673a3d"]
}, Open  ]],
Cell[59498, 1717, 207, 4, 37, "Input",ExpressionUUID->"a47e08f6-c412-4918-9569-a227440bf2ca"],
Cell[59708, 1723, 464, 9, 73, "Text",ExpressionUUID->"56f298f2-a7be-4972-b919-dffb058af469"]
}, Closed]],
Cell[CellGroupData[{
Cell[60209, 1737, 336, 6, 45, "Subsubsection",ExpressionUUID->"f8b5249d-6363-46c1-8b22-a982a70a56e8"],
Cell[60548, 1745, 835, 14, 131, "Text",ExpressionUUID->"66735b6f-3c8c-45c5-ad00-b0027a77caf0"],
Cell[CellGroupData[{
Cell[61408, 1763, 252, 5, 37, "Input",ExpressionUUID->"2db7890e-67b3-46e2-8c6f-04e8ba66fa49"],
Cell[61663, 1770, 324, 5, 42, "Output",ExpressionUUID->"5a010b4c-bf90-403d-b65c-cb4e57a717f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62024, 1780, 152, 3, 37, "Input",ExpressionUUID->"3b5d0ab8-71d6-4428-b57a-9a90aed38203"],
Cell[62179, 1785, 224, 4, 42, "Output",ExpressionUUID->"a0a30772-990e-4dcb-a919-a1f1fd93d538"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62440, 1794, 284, 6, 37, "Input",ExpressionUUID->"fd217c5d-7dbd-4ec1-8ac8-25beb1826e79"],
Cell[62727, 1802, 348, 6, 42, "Output",ExpressionUUID->"f85bc726-9109-4d17-b094-562ac2034894"]
}, Open  ]],
Cell[63090, 1811, 293, 6, 37, "Input",ExpressionUUID->"74cadf90-5e6a-4055-b7f0-c5766717b5d8"],
Cell[CellGroupData[{
Cell[63408, 1821, 175, 3, 37, "Input",ExpressionUUID->"61f3a4f3-a295-4201-9fe6-332f064d0d07"],
Cell[63586, 1826, 224, 4, 42, "Output",ExpressionUUID->"4b26168b-af64-46e8-9ed3-6524080671c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63847, 1835, 217, 4, 37, "Input",ExpressionUUID->"ee4b9f6d-09f7-4347-9702-4db388b9e9f8"],
Cell[64067, 1841, 301, 5, 42, "Output",ExpressionUUID->"49974b6c-a3a6-4986-8419-b066d7e89dfd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64405, 1851, 281, 6, 37, "Input",ExpressionUUID->"00586ae1-aae8-43d2-894e-7491eb112f6a"],
Cell[64689, 1859, 295, 5, 42, "Output",ExpressionUUID->"b25393e3-41e6-4ccb-bdec-b7bff23d4945"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65021, 1869, 322, 7, 37, "Input",ExpressionUUID->"907e0abc-8e72-490b-907a-7426caffaf73"],
Cell[65346, 1878, 300, 5, 42, "Output",ExpressionUUID->"ffbd3cb5-3e68-4cf4-914d-57d9ac68b546"]
}, Open  ]],
Cell[65661, 1886, 760, 13, 102, "Text",ExpressionUUID->"4d879138-2c1d-41a0-82c4-c72bc7850005"],
Cell[CellGroupData[{
Cell[66446, 1903, 489, 13, 37, "Input",ExpressionUUID->"10f4bd2b-dbfc-43c0-a54b-112f34d40c11"],
Cell[66938, 1918, 433, 13, 42, "Output",ExpressionUUID->"4936f021-3cd1-4cbc-b127-82286c9961c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67408, 1936, 437, 12, 37, "Input",ExpressionUUID->"589d49e9-1e59-49fa-84af-846c6bef1257"],
Cell[67848, 1950, 230, 5, 42, "Output",ExpressionUUID->"4c84d970-3bc8-44e7-9f56-a0b709eb4602"]
}, Open  ]],
Cell[68093, 1958, 262, 6, 44, "Text",ExpressionUUID->"3a8175b7-ec00-4ccf-9360-46aee0b06bfa"],
Cell[68358, 1966, 209, 4, 37, "Input",ExpressionUUID->"1061374c-a21a-44eb-b57d-cf3edf58459b"],
Cell[68570, 1972, 583, 11, 73, "Text",ExpressionUUID->"f5ed05c2-3de2-4983-8e02-54895aea70f8"],
Cell[CellGroupData[{
Cell[69178, 1987, 622, 17, 37, "Input",ExpressionUUID->"d613de94-99f4-4894-b8d2-2a73e81318fb"],
Cell[69803, 2006, 500, 12, 42, "Output",ExpressionUUID->"0e5d808c-71a7-437c-a731-c0bade8e7bed"]
}, Open  ]],
Cell[70318, 2021, 391, 10, 37, "Input",ExpressionUUID->"c7cbd58c-ea6f-4abc-a042-b31c5b823db9"],
Cell[CellGroupData[{
Cell[70734, 2035, 380, 10, 41, "Input",ExpressionUUID->"ea707e81-4cd6-44ac-b404-1b5f677f250b"],
Cell[71117, 2047, 353, 6, 42, "Output",ExpressionUUID->"839c5d0f-8fc8-417c-b26e-113f61481281"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[71519, 2059, 250, 4, 45, "Subsubsection",ExpressionUUID->"2f816d6f-3453-44ef-9431-ec0c48901e6c"],
Cell[71772, 2065, 747, 12, 131, "Text",ExpressionUUID->"78fec864-0b98-4066-bacc-06aef54612e2"],
Cell[CellGroupData[{
Cell[72544, 2081, 411, 10, 41, "Input",ExpressionUUID->"e1a07176-6bc6-4150-9cba-139d7c23ab0e"],
Cell[72958, 2093, 451, 9, 42, "Output",ExpressionUUID->"99f25ddf-0d2f-468a-b067-412c812e11ce"]
}, Open  ]],
Cell[73424, 2105, 942, 15, 131, "Text",ExpressionUUID->"3aed6ee1-9ea8-46f4-b533-81e41b515db1"],
Cell[CellGroupData[{
Cell[74391, 2124, 585, 15, 90, "Input",ExpressionUUID->"eb7cdb4d-fdcc-407c-8973-e020a0db7f9e"],
Cell[74979, 2141, 347, 6, 42, "Output",ExpressionUUID->"bc83d192-1baa-4930-95ce-4531c928e9f2"]
}, Open  ]],
Cell[75341, 2150, 282, 6, 44, "Text",ExpressionUUID->"acbddc55-e75c-428c-87e1-9e500a1c9a3d"],
Cell[CellGroupData[{
Cell[75648, 2160, 183, 3, 37, "Input",ExpressionUUID->"ecb5230c-6378-4933-8d33-fb471ee3a48e"],
Cell[75834, 2165, 1629, 25, 70, "Output",ExpressionUUID->"d2ae24c4-868b-4806-9426-eac8850dde32"]
}, Open  ]],
Cell[77478, 2193, 1136, 23, 109, "Text",ExpressionUUID->"cf84b004-4666-47e9-880a-46b421763e55"],
Cell[CellGroupData[{
Cell[78639, 2220, 755, 19, 96, "Input",ExpressionUUID->"f55c7508-e562-44e0-b0b9-60b32f03ace1"],
Cell[79397, 2241, 934, 26, 70, "Output",ExpressionUUID->"4bf5d1c8-b92e-4ee3-8d74-73a0cec22166"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80368, 2272, 252, 5, 37, "Input",ExpressionUUID->"a6ea49d5-0f48-4553-81bd-b3cc21eb1192"],
Cell[80623, 2279, 742, 20, 70, "Output",ExpressionUUID->"0921c059-8005-4cd8-8ca9-6e12298c7eae"]
}, Open  ]],
Cell[81380, 2302, 294, 4, 44, "Text",ExpressionUUID->"e065ede6-560d-4412-b714-3dd3744920e6"],
Cell[CellGroupData[{
Cell[81699, 2310, 408, 10, 37, "Input",ExpressionUUID->"3714f0dd-7cbb-4e35-91a2-f7304367da53"],
Cell[82110, 2322, 350, 6, 70, "Output",ExpressionUUID->"dee54ae9-ec22-4197-ac22-c2afa9e39521"]
}, Open  ]],
Cell[82475, 2331, 413, 8, 73, "Text",ExpressionUUID->"8fcf2da0-ae77-4d8b-83ea-a97253dce584"],
Cell[CellGroupData[{
Cell[82913, 2343, 282, 6, 37, "Input",ExpressionUUID->"34491ec9-8ad7-4cdb-9ef2-953d56284710"],
Cell[83198, 2351, 482, 10, 70, "Output",ExpressionUUID->"5ce81423-528c-42b6-93d3-ec30b43415b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83717, 2366, 769, 21, 90, "Input",ExpressionUUID->"6d26bbbe-3de7-42eb-b33f-5f698ba5c0d1"],
Cell[84489, 2389, 501, 10, 70, "Output",ExpressionUUID->"4f5cca5e-b69c-444b-9039-de86c8aad8c6"]
}, Open  ]],
Cell[85005, 2402, 232, 6, 44, "Text",ExpressionUUID->"23a44fd6-95c9-43c2-8bc5-51dba4d32bda"]
}, Closed]],
Cell[CellGroupData[{
Cell[85274, 2413, 156, 3, 45, "Subsubsection",ExpressionUUID->"59604b52-cc7c-4882-a6fe-746a801a791d"],
Cell[85433, 2418, 590, 11, 102, "Text",ExpressionUUID->"a31892e5-413f-40fe-872f-47bd3fe2456c"],
Cell[86026, 2431, 841, 21, 90, "Input",ExpressionUUID->"2ee10f5d-d8e4-4d47-80fc-36ad0c36db7d"],
Cell[CellGroupData[{
Cell[86892, 2456, 465, 11, 37, "Input",ExpressionUUID->"f0db58d0-cdab-4ba1-b3fe-d5cca54d39d6"],
Cell[87360, 2469, 666, 13, 69, "Output",ExpressionUUID->"ddc3a1c1-d3bc-4285-8112-573ddc602e7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88063, 2487, 221, 4, 37, "Input",ExpressionUUID->"a826c5b1-1c6f-4d48-8942-a87074aa6923"],
Cell[88287, 2493, 362, 6, 42, "Output",ExpressionUUID->"c54b02f5-4ac7-4281-9103-437728e94966"]
}, Open  ]],
Cell[88664, 2502, 349, 7, 73, "Text",ExpressionUUID->"dd5488af-73bc-448a-a952-6a30783cdb3b"],
Cell[89016, 2511, 940, 25, 116, "Input",ExpressionUUID->"756b3d04-77d3-4ccd-9360-586b9c893044"],
Cell[CellGroupData[{
Cell[89981, 2540, 222, 4, 37, "Input",ExpressionUUID->"cd1b9ef3-3c2a-4371-a4f7-2fbcd7ba5696"],
Cell[90206, 2546, 442, 10, 70, "Print",ExpressionUUID->"06bdf82e-61f3-423b-b7d6-8006ea8e2bcb"],
Cell[90651, 2558, 244, 4, 70, "Output",ExpressionUUID->"28a2124b-26aa-4119-98b5-225de6be79b7"]
}, Open  ]],
Cell[90910, 2565, 629, 11, 102, "Text",ExpressionUUID->"927a754f-acda-4f71-8342-6c28e280fef5"],
Cell[91542, 2578, 1092, 30, 116, "Input",ExpressionUUID->"ac9a70e8-52f3-45fd-819a-3d3ad3a37fd6"],
Cell[CellGroupData[{
Cell[92659, 2612, 221, 4, 37, "Input",ExpressionUUID->"a4f54625-be9a-44c2-acf4-9724b80a125e"],
Cell[92883, 2618, 452, 9, 70, "Output",ExpressionUUID->"e1de3f5f-e0da-4271-8c95-e20e05e8acdb"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93396, 2634, 359, 6, 67, "Subsection",ExpressionUUID->"e5283b3a-1b56-416e-90e6-5917f407d162"],
Cell[CellGroupData[{
Cell[93780, 2644, 261, 4, 56, "Subsubsection",ExpressionUUID->"6f5fa77c-a4a9-4b3c-b47a-7538dd412c7a"],
Cell[94044, 2650, 428, 11, 38, "Input",ExpressionUUID->"b576e0f2-ae0c-4448-84d8-3fe1e8d2deed"],
Cell[94475, 2663, 364, 7, 73, "Text",ExpressionUUID->"d5ef9269-fa36-4010-9af5-16645d75f444"],
Cell[CellGroupData[{
Cell[94864, 2674, 608, 14, 37, "Input",ExpressionUUID->"bde603f1-5c9a-4d7d-b286-153e12341e82"],
Cell[95475, 2690, 22792, 395, 302, "Output",ExpressionUUID->"88f5c839-33c5-43a8-be5c-24a3af707acc"]
}, Open  ]],
Cell[118282, 3088, 214, 5, 44, "Text",ExpressionUUID->"a9db3076-f016-4a26-b98b-194f8404b887"],
Cell[118499, 3095, 301, 8, 38, "Input",ExpressionUUID->"b2ad152b-526e-4169-95c0-0fe6ba92c287"],
Cell[118803, 3105, 541, 14, 37, "Input",ExpressionUUID->"18780665-1854-4e95-8d32-f143a6191370"],
Cell[CellGroupData[{
Cell[119369, 3123, 273, 5, 37, "Input",ExpressionUUID->"326a282e-2e68-4f52-9db9-c234f7fe019c"],
Cell[119645, 3130, 1801, 45, 70, "Output",ExpressionUUID->"6c783060-4750-4761-9fd9-71fb15a814b9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[121495, 3181, 219, 4, 45, "Subsubsection",ExpressionUUID->"b3b1ddfb-4a24-4c75-beb2-c18f96d25f78"],
Cell[121717, 3187, 178, 3, 44, "Text",ExpressionUUID->"24c46c1d-210f-4acd-8a64-6507a8a7ca4d"],
Cell[121898, 3192, 540, 15, 64, "Input",ExpressionUUID->"db8f9bbf-aa14-4e5f-b4e8-49471c642d88"],
Cell[CellGroupData[{
Cell[122463, 3211, 897, 24, 37, "Input",ExpressionUUID->"e354dfbc-5b4e-4f52-9f41-78d20e41b903"],
Cell[123363, 3237, 19380, 367, 70, "Output",ExpressionUUID->"4e527908-43cc-4e7d-9187-63a6e3c7c0bf"]
}, Open  ]],
Cell[142758, 3607, 294, 6, 73, "Text",ExpressionUUID->"08040081-20f7-4bee-a74b-c400e0cbb24b"],
Cell[CellGroupData[{
Cell[143077, 3617, 503, 13, 37, "Input",ExpressionUUID->"630d582a-7a9b-4ad3-8942-697764ddf45e"],
Cell[143583, 3632, 16160, 285, 70, "Output",ExpressionUUID->"3ee532fc-0fbe-4315-8b16-da26d4a18616"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[159792, 3923, 161, 3, 45, "Subsubsection",ExpressionUUID->"5c3558da-9981-4f54-94a5-a5fb20bcad4b"],
Cell[159956, 3928, 322, 7, 73, "Text",ExpressionUUID->"547049e1-bd1f-4fbc-b474-176bae9b0707"],
Cell[CellGroupData[{
Cell[160303, 3939, 343, 9, 41, "Input",ExpressionUUID->"4fd58e1d-1b62-4639-aab4-470fc8d3ba4c"],
Cell[160649, 3950, 465, 11, 70, "Output",ExpressionUUID->"ee91a004-62a2-45f2-8835-3154024f5ade"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161151, 3966, 404, 11, 41, "Input",ExpressionUUID->"dc3c113c-5e19-4071-b0e4-b24e61114f3b"],
Cell[161558, 3979, 327, 6, 70, "Output",ExpressionUUID->"34337a7d-7dfb-414d-a87c-7a6b4ca9b248"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161922, 3990, 410, 11, 37, "Input",ExpressionUUID->"f703f7d7-0163-4d4b-b59c-23955a84d064"],
Cell[162335, 4003, 328, 6, 70, "Output",ExpressionUUID->"84ce8dc0-b2cd-41e3-8c16-a29b44542242"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162736, 4017, 258, 4, 84, "Section",ExpressionUUID->"a96ff8aa-f7d3-4480-84a1-ba4167c6f205"],
Cell[CellGroupData[{
Cell[163019, 4025, 262, 4, 67, "Subsection",ExpressionUUID->"6fdcff3d-62e9-4133-b004-cce7d7bce6ae"],
Cell[CellGroupData[{
Cell[163306, 4033, 239, 4, 56, "Subsubsection",ExpressionUUID->"13d691fb-a48e-4e56-88b3-229773c508f5"],
Cell[163548, 4039, 329, 7, 73, "Text",ExpressionUUID->"16b806fe-cccb-45e6-96b8-64ffebf1b5c0"],
Cell[CellGroupData[{
Cell[163902, 4050, 287, 7, 37, "Input",ExpressionUUID->"379433b0-2b73-409a-83a5-8e9470e2573f"],
Cell[164192, 4059, 246, 4, 70, "Output",ExpressionUUID->"db6f6a64-3a9b-440f-88c1-fc030ac2fe68"]
}, Open  ]],
Cell[164453, 4066, 326, 7, 44, "Text",ExpressionUUID->"b44a9458-5efe-4bb0-8662-4b2c06f1ea7f"],
Cell[164782, 4075, 493, 14, 37, "Input",ExpressionUUID->"156b81d0-c7b1-45d7-86e6-4fe54c60923c"],
Cell[165278, 4091, 264, 6, 73, "Text",ExpressionUUID->"0e0e8335-5a04-48e7-af28-4d5df3dcafd1"],
Cell[CellGroupData[{
Cell[165567, 4101, 385, 10, 37, "Input",ExpressionUUID->"6a096699-6755-471c-9f85-d8a4a6fed458"],
Cell[165955, 4113, 596, 17, 70, "Output",ExpressionUUID->"24b3395f-0b6b-47c4-b44b-a7f52b15df73"]
}, Open  ]],
Cell[166566, 4133, 342, 7, 73, "Text",ExpressionUUID->"5e4655ef-1da3-469e-8f64-ac33c98470ac"],
Cell[CellGroupData[{
Cell[166933, 4144, 428, 12, 37, "Input",ExpressionUUID->"5f91cae5-206a-4e46-870f-5fbcea057669"],
Cell[167364, 4158, 294, 6, 70, "Output",ExpressionUUID->"7edcb9ca-067d-475f-b560-91f979e343a3"]
}, Open  ]],
Cell[167673, 4167, 231, 6, 44, "Text",ExpressionUUID->"dfd6b6be-63a7-47fd-8110-d289c88dd90f"],
Cell[CellGroupData[{
Cell[167929, 4177, 437, 12, 37, "Input",ExpressionUUID->"1acb8f2b-8514-450a-a164-00567889e075"],
Cell[168369, 4191, 303, 6, 70, "Output",ExpressionUUID->"4b852f50-aade-402d-b530-8290be5a461f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[168721, 4203, 220, 4, 45, "Subsubsection",ExpressionUUID->"cee62f91-189f-4672-aa86-5b90c3e036e7"],
Cell[168944, 4209, 504, 9, 102, "Text",ExpressionUUID->"ec39df82-ec45-4b07-884e-a91469633b4d"],
Cell[CellGroupData[{
Cell[169473, 4222, 357, 9, 37, "Input",ExpressionUUID->"5c908926-6971-4a65-8591-3c108d3b45de"],
Cell[169833, 4233, 356, 7, 70, "Output",ExpressionUUID->"6bfe0a65-7736-4b19-80ed-c5cb69eb49e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170226, 4245, 348, 9, 37, "Input",ExpressionUUID->"7bfefafc-953d-44a8-8d20-aa69addd7ea0"],
Cell[170577, 4256, 287, 6, 70, "Output",ExpressionUUID->"5b8d8b98-1a4b-4e19-9ed8-f8d9fdb92262"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170901, 4267, 515, 14, 37, "Input",ExpressionUUID->"c230a7b7-f821-48b1-9414-6117000ef672"],
Cell[171419, 4283, 273, 5, 70, "Output",ExpressionUUID->"c60a2171-b87c-42df-84d7-1741e9e9fd3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171729, 4293, 387, 10, 37, "Input",ExpressionUUID->"f50f901e-319f-4128-acdc-6674fe7b1e68"],
Cell[172119, 4305, 298, 5, 70, "Output",ExpressionUUID->"721543ae-07a3-45db-95f7-c0eb3ab13658"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172454, 4315, 359, 9, 37, "Input",ExpressionUUID->"2a80dcea-262d-40ac-b414-5968dc8a2479"],
Cell[172816, 4326, 273, 5, 70, "Output",ExpressionUUID->"8e10f0f4-8837-4e4b-889b-80fe522d3afe"]
}, Open  ]],
Cell[173104, 4334, 216, 5, 44, "Text",ExpressionUUID->"27259c6f-62f0-4ac6-b2d2-dc4c03b1d238"],
Cell[CellGroupData[{
Cell[173345, 4343, 333, 9, 37, "Input",ExpressionUUID->"08dfbb34-7df3-44ca-9b98-dc70aba09585"],
Cell[173681, 4354, 326, 7, 70, "Output",ExpressionUUID->"06cd3499-8140-43d7-b88e-8cebfe445b2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174044, 4366, 473, 12, 37, "Input",ExpressionUUID->"12d16606-2c70-40f5-8fb2-e7f08d0e7c3b"],
Cell[174520, 4380, 321, 6, 70, "Output",ExpressionUUID->"0ae5b1c6-b384-4efc-bcbd-f5f00465aa5a"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174902, 4393, 317, 5, 67, "Subsection",ExpressionUUID->"d17c41e2-ae53-4410-a1a4-3d49cf45996c"],
Cell[CellGroupData[{
Cell[175244, 4402, 165, 3, 56, "Subsubsection",ExpressionUUID->"fccfceec-621e-4054-a15b-81e3e242248e"],
Cell[CellGroupData[{
Cell[175434, 4409, 264, 6, 37, "Input",ExpressionUUID->"42cf8c96-ed9a-41f7-8b6e-61f01ea0b38e"],
Cell[175701, 4417, 513, 12, 70, "Output",ExpressionUUID->"999e8a3b-5e9b-4bbd-9c18-b15665e143a5"]
}, Open  ]],
Cell[176229, 4432, 331, 6, 44, "Text",ExpressionUUID->"ebbde358-e7ec-4245-aae3-2a45e4eaafc8"],
Cell[CellGroupData[{
Cell[176585, 4442, 220, 5, 37, "Input",ExpressionUUID->"68d1804f-03b0-475f-8c76-b2d71f56b068"],
Cell[176808, 4449, 491, 12, 70, "Output",ExpressionUUID->"ebf04ce0-d190-48e0-874b-8c3e405cd42d"]
}, Open  ]],
Cell[177314, 4464, 372, 7, 73, "Text",ExpressionUUID->"5996a802-21e9-4ce8-8fe8-930f623ecc7d"],
Cell[CellGroupData[{
Cell[177711, 4475, 250, 6, 37, "Input",ExpressionUUID->"e3f91a77-5a8a-47ae-92fa-3131a47c2181"],
Cell[177964, 4483, 342, 7, 70, "Output",ExpressionUUID->"16472463-a5ff-4a60-a0e0-2b5139737617"]
}, Open  ]],
Cell[178321, 4493, 163, 3, 44, "Text",ExpressionUUID->"26631702-9d81-4813-9a71-14f27fc6c420"],
Cell[CellGroupData[{
Cell[178509, 4500, 247, 6, 37, "Input",ExpressionUUID->"9e785dd8-e84c-4872-b98c-be6a2f605d57"],
Cell[178759, 4508, 348, 7, 70, "Output",ExpressionUUID->"8fdb9bd0-9a7e-46c8-9493-62588af1704e"]
}, Open  ]],
Cell[179122, 4518, 816, 18, 133, "Text",ExpressionUUID->"619d85fe-8352-41cc-83a2-d8099ae2fb90"],
Cell[CellGroupData[{
Cell[179963, 4540, 297, 7, 37, "Input",ExpressionUUID->"a6053b3b-160e-4d1c-810d-2e10f5acd220"],
Cell[180263, 4549, 413, 10, 70, "Output",ExpressionUUID->"d5694e44-4216-4806-9b75-adcbb84822af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180713, 4564, 347, 8, 37, "Input",ExpressionUUID->"68ce5639-05d0-44b9-b72d-b005cf9a4535"],
Cell[181063, 4574, 440, 10, 70, "Output",ExpressionUUID->"e64db9bd-98d5-4a6a-912b-f5ca0ebe32b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181540, 4589, 251, 5, 37, "Input",ExpressionUUID->"41eb4ea4-54aa-4699-b31c-2e009adca2be"],
Cell[181794, 4596, 580, 16, 70, "Output",ExpressionUUID->"44ba27e8-4e2a-4d5f-a1d3-a3df44c10e19"]
}, Open  ]],
Cell[182389, 4615, 395, 8, 73, "Text",ExpressionUUID->"e7233c33-2d1e-47c4-baa7-f8e6b07f5bfc"],
Cell[CellGroupData[{
Cell[182809, 4627, 361, 8, 37, "Input",ExpressionUUID->"a73f2867-86af-42d9-8457-1f6634ef915b"],
Cell[183173, 4637, 699, 19, 70, "Output",ExpressionUUID->"93ed2948-9e43-410c-b0df-3b175cab712a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[183921, 4662, 156, 3, 45, "Subsubsection",ExpressionUUID->"c7b387dc-e284-421d-9272-f3af5c78ded6"],
Cell[184080, 4667, 394, 8, 73, "Text",ExpressionUUID->"a5cb0053-83e7-4c5c-a3f8-96e183d328f4"],
Cell[CellGroupData[{
Cell[184499, 4679, 298, 6, 37, "Input",ExpressionUUID->"fb1f22b0-b0a4-4602-a21c-051089507003"],
Cell[184800, 4687, 444, 9, 70, "Output",ExpressionUUID->"8152d6fe-3174-48c6-a0c3-ce81ce8ffa25"]
}, Open  ]],
Cell[185259, 4699, 209, 4, 37, "Input",ExpressionUUID->"9abd706f-9584-4b8e-b5b4-35153fdd2551"],
Cell[CellGroupData[{
Cell[185493, 4707, 287, 7, 37, "Input",ExpressionUUID->"660752a1-4af8-4214-8d52-eefa9bb5c0ac"],
Cell[185783, 4716, 389, 9, 70, "Output",ExpressionUUID->"2bfccea0-01ae-45d9-bc7d-9dadd6723463"]
}, Open  ]],
Cell[186187, 4728, 276, 6, 44, "Text",ExpressionUUID->"c243bc2e-5328-4077-ba44-b69dc4bdbbe8"],
Cell[CellGroupData[{
Cell[186488, 4738, 226, 5, 37, "Input",ExpressionUUID->"eb839742-7514-43a2-af0d-d362c9acbe6e"],
Cell[186717, 4745, 425, 10, 70, "Output",ExpressionUUID->"aafe3db7-4396-4371-8dab-8d4b62e50ed3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[187191, 4761, 157, 3, 45, "Subsubsection",ExpressionUUID->"878230c0-7aeb-42f3-8598-3da5f2060eff"],
Cell[187351, 4766, 160, 3, 44, "Text",ExpressionUUID->"5146c925-4fa3-4357-8c8a-3a53e1e73fb3"],
Cell[187514, 4771, 245, 5, 37, "Input",ExpressionUUID->"0f14e8a8-7e21-4647-8d5a-2c50b6a386ef"],
Cell[CellGroupData[{
Cell[187784, 4780, 360, 9, 37, "Input",ExpressionUUID->"e67c80df-f6bc-4e1d-8f6f-912d7ce02c31"],
Cell[188147, 4791, 417, 10, 70, "Output",ExpressionUUID->"58c29e3f-b939-4859-ad97-67f8a933d76c"]
}, Open  ]],
Cell[188579, 4804, 279, 6, 44, "Text",ExpressionUUID->"8309579f-bfc9-4c68-be11-7d29b0a9512f"],
Cell[CellGroupData[{
Cell[188883, 4814, 359, 8, 37, "Input",ExpressionUUID->"b0c8f392-4577-4788-a791-70c471635111"],
Cell[189245, 4824, 1272, 37, 70, "Output",ExpressionUUID->"575242cf-2d5e-4536-9884-064045051299"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190554, 4866, 500, 13, 37, "Input",ExpressionUUID->"db8d3554-2cec-410d-9722-e6d9bc120110"],
Cell[191057, 4881, 2443, 73, 70, "Output",ExpressionUUID->"3512af32-a081-4682-82a3-323c59ee2b65"]
}, Open  ]],
Cell[193515, 4957, 255, 6, 44, "Text",ExpressionUUID->"c36f5973-546d-4ce5-9c83-0e9f61c83317"]
}, Closed]],
Cell[CellGroupData[{
Cell[193807, 4968, 156, 3, 45, "Subsubsection",ExpressionUUID->"428b4738-2195-4f11-b650-83db1f016d5c"],
Cell[193966, 4973, 217, 5, 44, "Text",ExpressionUUID->"77f4ae81-2652-4bae-a52d-f333641d101a"],
Cell[CellGroupData[{
Cell[194208, 4982, 232, 5, 37, "Input",ExpressionUUID->"c001dea7-106e-46d3-9c7a-0e5302b85084"],
Cell[194443, 4989, 271, 5, 70, "Output",ExpressionUUID->"2f32243a-e622-4504-b6ec-d23ffa062e7e"]
}, Open  ]],
Cell[194729, 4997, 512, 9, 102, "Text",ExpressionUUID->"114ca46a-d417-4672-8cb0-6f4d97db49ca"],
Cell[CellGroupData[{
Cell[195266, 5010, 325, 8, 37, "Input",ExpressionUUID->"ada4a554-70f9-4ba5-9295-ea91697d3762"],
Cell[195594, 5020, 500, 14, 70, "Output",ExpressionUUID->"b1ea37cb-de53-42d8-9be3-71c30e4be022"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196131, 5039, 258, 6, 37, "Input",ExpressionUUID->"90a850f3-a346-4a96-bfb5-9d9374304ffd"],
Cell[196392, 5047, 512, 16, 70, "Output",ExpressionUUID->"350fb06d-3dc1-4f9d-9568-f84ba10c37ad"]
}, Open  ]],
Cell[196919, 5066, 382, 7, 73, "Text",ExpressionUUID->"63894c2c-acc1-4540-9184-c1ff8feb66d1"],
Cell[CellGroupData[{
Cell[197326, 5077, 435, 13, 37, "Input",ExpressionUUID->"085c2702-f0b3-490b-a77b-158f12b9d998"],
Cell[197764, 5092, 334, 7, 70, "Output",ExpressionUUID->"eb025961-541d-47f6-94c6-ac19ff83a367"]
}, Open  ]],
Cell[198113, 5102, 242, 4, 44, "Text",ExpressionUUID->"5b971999-bbfe-4624-ab41-2026c3d692ef"],
Cell[CellGroupData[{
Cell[198380, 5110, 397, 12, 37, "Input",ExpressionUUID->"0976f3a5-f4cf-42d6-baae-05cf9bc730bc"],
Cell[198780, 5124, 301, 6, 70, "Output",ExpressionUUID->"0b94ca05-fdc4-4027-ab29-063b29ffbcf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199118, 5135, 263, 6, 37, "Input",ExpressionUUID->"4f59e865-64bd-4e5f-8247-09e4a526dd8a"],
Cell[199384, 5143, 299, 6, 70, "Output",ExpressionUUID->"49800244-f3d0-472e-80e2-0311ffd76050"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199720, 5154, 259, 6, 37, "Input",ExpressionUUID->"12470b8a-3dda-479e-88e2-a723d8b75c8f"],
Cell[199982, 5162, 310, 6, 70, "Output",ExpressionUUID->"9dc4ea4a-4bb4-486e-8ec6-b9da2f369c9d"]
}, Open  ]],
Cell[200307, 5171, 195, 3, 44, "Text",ExpressionUUID->"0eff0fd8-efa7-41ae-ba2b-0f7595fea16f"],
Cell[CellGroupData[{
Cell[200527, 5178, 257, 6, 37, "Input",ExpressionUUID->"e6e59eaa-ff9d-43af-b67b-455e12e35bd4"],
Cell[200787, 5186, 282, 6, 70, "Output",ExpressionUUID->"44a1fe03-7cb7-4aa4-b3b0-f45104241cb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201106, 5197, 414, 10, 64, "Input",ExpressionUUID->"f6fdf70f-67c3-4e43-ad09-9290a18fbd3d"],
Cell[201523, 5209, 305, 7, 70, "Output",ExpressionUUID->"4bc01bec-9bd4-4c06-be2c-cda655dc2b0c"]
}, Open  ]],
Cell[201843, 5219, 281, 7, 44, "Text",ExpressionUUID->"dbb35d2f-cfb7-4809-af90-005236f1be95"],
Cell[CellGroupData[{
Cell[202149, 5230, 338, 9, 37, "Input",ExpressionUUID->"9f02cfd5-938b-4f24-95a5-0a38a6a24400"],
Cell[202490, 5241, 385, 9, 70, "Output",ExpressionUUID->"f5fff3e8-5ebe-4b41-b92e-e8269eec7e32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202912, 5255, 343, 9, 37, "Input",ExpressionUUID->"553b12f4-7a5e-4e17-9c5d-caee2e38169a"],
Cell[203258, 5266, 487, 12, 70, "Output",ExpressionUUID->"2380365c-8d75-4b8b-bbc4-df051e3b3959"]
}, Open  ]],
Cell[203760, 5281, 249, 6, 44, "Text",ExpressionUUID->"88270dbb-c4f6-4c14-b5a5-0ae6699f220a"],
Cell[CellGroupData[{
Cell[204034, 5291, 340, 9, 37, "Input",ExpressionUUID->"ad259187-7b50-42ae-83f9-afa5f4a044c1"],
Cell[204377, 5302, 606, 19, 70, "Output",ExpressionUUID->"7aa48e72-76e1-494f-a85d-f69155d14fc0"]
}, Open  ]],
Cell[204998, 5324, 219, 5, 44, "Text",ExpressionUUID->"2be62d52-0a99-4ec1-85d6-22ed065951d6"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[205266, 5335, 223, 4, 67, "Subsection",ExpressionUUID->"7ce06caa-34f4-46c2-a01d-9f09e0aff774"],
Cell[CellGroupData[{
Cell[205514, 5343, 169, 3, 56, "Subsubsection",ExpressionUUID->"d0576742-dfbb-4a22-a1ef-e05179dbb0bc"],
Cell[205686, 5348, 591, 10, 131, "Text",ExpressionUUID->"0a102fbc-e799-4321-9ce3-8be0f1a956d4"],
Cell[CellGroupData[{
Cell[206302, 5362, 545, 15, 37, "Input",ExpressionUUID->"bf9adde4-8493-4251-83fb-97e43499bb7c"],
Cell[206850, 5379, 649, 17, 70, "Output",ExpressionUUID->"7682313f-bde4-413c-bacb-8e503f9502e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207536, 5401, 375, 10, 37, "Input",ExpressionUUID->"9e9a793d-0af9-4127-a448-5df3d84781d9"],
Cell[207914, 5413, 738, 21, 70, "Output",ExpressionUUID->"81e7c3e1-73d1-4eac-b3e7-4ec543ede654"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208689, 5439, 302, 7, 37, "Input",ExpressionUUID->"ecb09a8e-7da5-4a26-a3c1-8ace83b76299"],
Cell[208994, 5448, 31555, 648, 70, "Output",ExpressionUUID->"4ad24d4a-8463-4477-ad07-49b6a7a662b7"]
}, Open  ]],
Cell[240564, 6099, 1586, 41, 131, "Text",ExpressionUUID->"9cf76255-e234-402c-bd32-94abbd35f6c7"],
Cell[CellGroupData[{
Cell[242175, 6144, 361, 9, 37, "Input",ExpressionUUID->"f1561cb3-3a62-4230-a41c-26c12e2076e5"],
Cell[242539, 6155, 1290, 41, 70, "Output",ExpressionUUID->"0c01a722-6325-45f1-bfbb-8a5fef715a01"]
}, Open  ]],
Cell[243844, 6199, 225, 5, 44, "Text",ExpressionUUID->"5fa77f71-cc3a-4772-9fce-4763f731eceb"],
Cell[CellGroupData[{
Cell[244094, 6208, 397, 10, 37, "Input",ExpressionUUID->"4d4dbdad-3309-4451-b990-b609401174e0"],
Cell[244494, 6220, 473, 11, 70, "Output",ExpressionUUID->"9479d9ae-a0bb-4ce7-a959-c09a0c84aebd"]
}, Open  ]],
Cell[244982, 6234, 441, 9, 73, "Text",ExpressionUUID->"441398a1-f9b8-4d92-b771-d28795002f5e"],
Cell[CellGroupData[{
Cell[245448, 6247, 513, 11, 37, "Input",ExpressionUUID->"ac924527-3a19-4b5e-8563-a1c94f6cafe9"],
Cell[245964, 6260, 556, 13, 70, "Output",ExpressionUUID->"4cf0fefc-284a-4eb2-92aa-dab1a69046d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246557, 6278, 226, 4, 37, "Input",ExpressionUUID->"f77c7596-a6d6-4acb-9828-e7d4a3f651cc"],
Cell[246786, 6284, 502, 12, 70, "Output",ExpressionUUID->"57f0c2e2-0d08-4d6e-abcc-e204b3b3c4d5"]
}, Open  ]],
Cell[247303, 6299, 593, 11, 102, "Text",ExpressionUUID->"97e198aa-4988-4f19-a7f0-279d0b008ac7"],
Cell[CellGroupData[{
Cell[247921, 6314, 261, 5, 37, "Input",ExpressionUUID->"3161ac64-bd31-429a-9075-698ce7a652c8"],
Cell[248185, 6321, 1386, 41, 70, "Output",ExpressionUUID->"afaab9ec-b497-4a3b-a2ff-c30b70c94af0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249608, 6367, 258, 5, 37, "Input",ExpressionUUID->"75716685-b52a-46b7-a479-23a122c23a97"],
Cell[249869, 6374, 945, 29, 70, "Output",ExpressionUUID->"792c4267-d0d0-4042-be97-f70fc747cc16"]
}, Open  ]],
Cell[250829, 6406, 373, 8, 73, "Text",ExpressionUUID->"06d7e8cb-168f-4553-9d0b-986dac658030"],
Cell[CellGroupData[{
Cell[251227, 6418, 397, 10, 37, "Input",ExpressionUUID->"924fdd69-6d1c-4cc5-b048-783896233260"],
Cell[251627, 6430, 438, 11, 70, "Output",ExpressionUUID->"06cc4149-0adf-49c2-809d-d7cd0393ff84"]
}, Open  ]],
Cell[252080, 6444, 293, 7, 44, "Text",ExpressionUUID->"4b46b084-d263-4bc2-b214-de0015f4138c"],
Cell[CellGroupData[{
Cell[252398, 6455, 485, 13, 37, "Input",ExpressionUUID->"3ae69bd5-0af6-4f20-8b38-cea5c379809e"],
Cell[252886, 6470, 478, 13, 70, "Output",ExpressionUUID->"aec26962-27bd-46df-94f8-744adb80e574"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253401, 6488, 623, 17, 90, "Input",ExpressionUUID->"3b801998-fe30-4adb-8abb-dd828370703d"],
Cell[254027, 6507, 441, 11, 70, "Output",ExpressionUUID->"db409654-00b5-40e8-b545-5da9f1cbccc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254505, 6523, 261, 5, 37, "Input",ExpressionUUID->"129a0378-da94-49b1-8a98-3cc428b7d2d1"],
Cell[254769, 6530, 544, 15, 70, "Output",ExpressionUUID->"6ce13c21-3f9e-48da-8a50-39bdcc95caa1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[255362, 6551, 163, 3, 45, "Subsubsection",ExpressionUUID->"7eecff65-4d3b-44b1-834c-9c58a6f08170"],
Cell[255528, 6556, 992, 16, 188, "Text",ExpressionUUID->"cfa07b3b-38b2-4505-a875-87176c63994c"],
Cell[CellGroupData[{
Cell[256545, 6576, 289, 5, 37, "Input",ExpressionUUID->"c213f39a-5ac8-4c5e-857d-35677b302f99"],
Cell[256837, 6583, 649, 17, 70, "Output",ExpressionUUID->"a3e6da45-54b2-4d34-8c1c-c8243b359d4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257523, 6605, 545, 14, 64, "Input",ExpressionUUID->"82cb9b6b-ec68-48fc-8f75-154ef708e3a5"],
Cell[258071, 6621, 417, 10, 70, "Output",ExpressionUUID->"64705dbe-0074-4308-a61e-dabbbcd78188"]
}, Open  ]],
Cell[258503, 6634, 166, 3, 44, "Text",ExpressionUUID->"eb6ac2f9-938b-414e-ab90-f19460dfc652"],
Cell[258672, 6639, 187, 3, 44, "Text",ExpressionUUID->"a37e2eb7-611c-409f-b91f-dbdb4bac96a1"],
Cell[258862, 6644, 542, 15, 37, "Input",ExpressionUUID->"0e2a8fd0-f3ed-4de6-9c50-85f6cf566abc"],
Cell[259407, 6661, 262, 6, 44, "Text",ExpressionUUID->"31c9ae49-8195-4200-b2ec-530f432e7322"],
Cell[CellGroupData[{
Cell[259694, 6671, 282, 5, 37, "Input",ExpressionUUID->"22254c39-cdc7-4089-adbf-093409dff9e4"],
Cell[259979, 6678, 388, 9, 70, "Output",ExpressionUUID->"43647d17-459b-4718-9eb7-dac95a3cc29f"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260440, 6695, 163, 3, 84, "Section",ExpressionUUID->"33419824-5d85-40b1-9343-d52cdd5e56f6"],
Cell[CellGroupData[{
Cell[260628, 6702, 226, 4, 67, "Subsection",ExpressionUUID->"618654b0-d885-4532-b330-a6ab5cc1df47"],
Cell[CellGroupData[{
Cell[260879, 6710, 240, 4, 56, "Subsubsection",ExpressionUUID->"04d8c4d9-c436-4b89-8abb-d67860a6a116"],
Cell[261122, 6716, 851, 18, 134, "Text",ExpressionUUID->"61e2a753-b9f2-488a-81b0-174564544a5a"],
Cell[261976, 6736, 1161, 37, 116, "Input",ExpressionUUID->"3475f36d-13fa-4dba-a9db-a81e2c2ed930"],
Cell[263140, 6775, 747, 12, 131, "Text",ExpressionUUID->"2f2592fb-e888-4fee-9ddf-f4da9baae85a"],
Cell[CellGroupData[{
Cell[263912, 6791, 246, 6, 37, "Input",ExpressionUUID->"7faab55e-3cf4-4fd3-9b0a-3e4a02973644"],
Cell[264161, 6799, 298, 7, 70, "Output",ExpressionUUID->"db0f58c0-d1fc-4dc6-a83a-ed18acaa8fe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264496, 6811, 328, 9, 37, "Input",ExpressionUUID->"1c68e229-7d6b-4877-a986-1091bfd63abd"],
Cell[264827, 6822, 223, 4, 70, "Output",ExpressionUUID->"5afe4bae-dc2a-43ab-b95b-731c122f3f11"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[265099, 6832, 222, 4, 45, "Subsubsection",ExpressionUUID->"9490d2c4-5ad7-446c-831c-c9bc7b04b462"],
Cell[265324, 6838, 730, 12, 131, "Text",ExpressionUUID->"45205dc8-0d12-48ab-b5a1-92702f2a7494"],
Cell[266057, 6852, 610, 18, 37, "Input",ExpressionUUID->"0c4c7b2a-82d0-4c23-8b55-542dfa0ef9f0"],
Cell[266670, 6872, 399, 10, 37, "Input",ExpressionUUID->"958c6d7b-ec54-4ff9-8258-29c13e44854d"],
Cell[CellGroupData[{
Cell[267094, 6886, 403, 11, 37, "Input",ExpressionUUID->"a3608704-8fc5-40cb-b58d-5ffee89df0f9"],
Cell[267500, 6899, 660, 18, 70, "Output",ExpressionUUID->"15dcf109-cb59-405b-83fc-3eebdcf9aac3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268197, 6922, 208, 4, 37, "Input",ExpressionUUID->"ce9feee5-742a-4c59-93bd-394bb4435b8e"],
Cell[268408, 6928, 639, 18, 70, "Output",ExpressionUUID->"931f092b-83dd-4cdc-b481-6d9e8a966115"]
}, Open  ]],
Cell[269062, 6949, 227, 4, 44, "Text",ExpressionUUID->"85e5cbe3-0e7f-4119-9a41-75557974fc12"],
Cell[269292, 6955, 561, 14, 64, "Input",ExpressionUUID->"bcca992d-82d3-4978-8ff2-8e0ae480b3da"],
Cell[CellGroupData[{
Cell[269878, 6973, 268, 6, 37, "Input",ExpressionUUID->"08e81785-d992-4ef3-9987-9f083a21d99b"],
Cell[270149, 6981, 321, 7, 70, "Output",ExpressionUUID->"10e271c9-3911-4234-9800-9986134ca481"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270507, 6993, 243, 5, 37, "Input",ExpressionUUID->"1aeffdbd-c575-4ede-8fa7-8b211170cefb"],
Cell[270753, 7000, 641, 18, 70, "Output",ExpressionUUID->"d2495630-0cfe-4735-88be-93ee54abca2a"]
}, Open  ]],
Cell[271409, 7021, 305, 7, 44, "Text",ExpressionUUID->"d9465227-bc19-41cc-8606-9fb52cb36075"],
Cell[271717, 7030, 513, 14, 64, "Input",ExpressionUUID->"f3edc329-3431-4c66-91f4-00cdfafff05a"],
Cell[272233, 7046, 260, 6, 44, "Text",ExpressionUUID->"4b0d3a9d-3e67-4beb-a08a-5b284961d42d"],
Cell[CellGroupData[{
Cell[272518, 7056, 331, 8, 37, "Input",ExpressionUUID->"96dbf96d-5692-4cc2-86d3-d96116772927"],
Cell[272852, 7066, 332, 8, 70, "Output",ExpressionUUID->"61544837-a4c4-45b8-9b5e-20e90e605f2e"]
}, Open  ]],
Cell[273199, 7077, 537, 14, 37, "Input",ExpressionUUID->"ae6d4f1f-8d48-438d-b7c1-ecb58cfc7b8e"],
Cell[CellGroupData[{
Cell[273761, 7095, 218, 4, 37, "Input",ExpressionUUID->"58bd86b1-861b-4482-9754-892189cebe18"],
Cell[273982, 7101, 226, 4, 70, "Output",ExpressionUUID->"6f119d92-3f43-4798-83bb-33a005b8032d"]
}, Open  ]],
Cell[274223, 7108, 198, 3, 44, "Text",ExpressionUUID->"dbb5d2f4-4ec3-4981-b8cc-5f5b10efc55b"],
Cell[CellGroupData[{
Cell[274446, 7115, 243, 5, 37, "Input",ExpressionUUID->"1a3386c6-47ae-4350-8373-e68826decf19"],
Cell[274692, 7122, 249, 4, 70, "Output",ExpressionUUID->"5c2f7c39-2638-42fb-be8b-d1b58f106adf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[274990, 7132, 186, 3, 45, "Subsubsection",ExpressionUUID->"7fcb9f25-aacb-4207-b2cc-7ac629d729ed"],
Cell[275179, 7137, 259, 5, 44, "Text",ExpressionUUID->"034353da-cc77-4b2c-afd4-6a66fe8e9ea1"],
Cell[275441, 7144, 1067, 29, 116, "Input",ExpressionUUID->"3d2d6950-598f-4f50-8e1d-5d5660f80b4a"],
Cell[276511, 7175, 391, 8, 73, "Text",ExpressionUUID->"d2188da9-4a1a-4759-b885-99bc00553195"],
Cell[276905, 7185, 862, 25, 37, "Input",ExpressionUUID->"ede47049-422d-44c7-8a6e-6529620d7d61"],
Cell[277770, 7212, 290, 6, 37, "Input",ExpressionUUID->"6b1577a8-a377-476d-a809-4ae67902a8e7"],
Cell[CellGroupData[{
Cell[278085, 7222, 270, 6, 37, "Input",ExpressionUUID->"3d57ef68-9a1e-4bf7-ba72-7d46fb53da16"],
Cell[278358, 7230, 752, 22, 42, "Output",ExpressionUUID->"0aa0aaba-d2b8-4f5d-9f95-353889f8daa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279147, 7257, 268, 6, 37, "Input",ExpressionUUID->"d1d41547-cce6-4473-8a88-a5f0b138a132"],
Cell[279418, 7265, 754, 22, 42, "Output",ExpressionUUID->"635bdcc9-8b14-4f5e-8684-6e3248710251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280209, 7292, 424, 11, 37, "Input",ExpressionUUID->"0cb6b031-67bf-418d-8646-c09b9c861dc5"],
Cell[280636, 7305, 756, 22, 42, "Output",ExpressionUUID->"f34db850-a540-4601-ad2f-afccbc1e0334"]
}, Open  ]],
Cell[281407, 7330, 563, 10, 102, "Text",ExpressionUUID->"3e221c23-f07a-49fc-90e7-cd47d9e058fb"],
Cell[CellGroupData[{
Cell[281995, 7344, 1051, 31, 61, "Input",ExpressionUUID->"f0de3f85-003e-4bd6-8ec8-181883767589"],
Cell[283049, 7377, 1064, 31, 64, "Output",ExpressionUUID->"5b7e3087-c459-4213-b910-f0006f353cee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284150, 7413, 413, 10, 37, "Input",ExpressionUUID->"fbb43e95-6930-4fa9-8110-a900a62ea2fe"],
Cell[284566, 7425, 1377, 40, 93, "Output",ExpressionUUID->"cc50f363-3233-4b6d-906b-fa798c06d5ea"]
}, Open  ]],
Cell[285958, 7468, 598, 10, 102, "Text",ExpressionUUID->"65f3ec7c-d3df-40a9-9bb4-d8ab058e1f82"],
Cell[286559, 7480, 1768, 51, 90, "Input",ExpressionUUID->"856b83c5-8438-471e-8320-a01074aa9ff5"],
Cell[CellGroupData[{
Cell[288352, 7535, 313, 7, 37, "Input",ExpressionUUID->"db6cf9df-d3ca-4c31-a04a-78de9d66abc8"],
Cell[288668, 7544, 324, 6, 42, "Output",ExpressionUUID->"1b91d119-eb9c-4a3b-8dc6-95f6b088287a"]
}, Open  ]],
Cell[289007, 7553, 196, 3, 44, "Text",ExpressionUUID->"ff5217d6-2e8a-433d-b2cf-14b1e8aa9087"],
Cell[289206, 7558, 1131, 33, 89, "Input",ExpressionUUID->"0315fe31-21d8-4d4f-9d05-85b9b7f4ce3d"],
Cell[CellGroupData[{
Cell[290362, 7595, 307, 7, 37, "Input",ExpressionUUID->"cdfd4ce5-4a43-4115-b0f8-ba129ef2f908"],
Cell[290672, 7604, 222, 5, 42, "Output",ExpressionUUID->"2fac5f70-73a5-4b42-a83a-ae10e52af8e2"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290955, 7616, 159, 3, 67, "Subsection",ExpressionUUID->"c5c8ddac-36b2-4b24-a4c7-84be142029bd"],
Cell[CellGroupData[{
Cell[291139, 7623, 203, 3, 56, "Subsubsection",ExpressionUUID->"c2578a5c-69f0-4cee-8f39-1a9dda113ac3"],
Cell[291345, 7628, 1220, 21, 303, "Text",ExpressionUUID->"80f63a95-e70e-4f68-a28f-035131b59bc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292602, 7654, 165, 3, 56, "Subsubsection",ExpressionUUID->"b6fa30fc-0915-466c-8ef4-4f78d768693a"],
Cell[292770, 7659, 827, 15, 188, "Text",ExpressionUUID->"3a7e8c2c-1bc3-45c0-b43f-54a74958fe88"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

